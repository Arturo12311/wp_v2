Opcode: AnniversaryAchievementInitializeDataNotify
Field: AnniversaryAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzAnniversaryAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzAnniversaryAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseReceiveRequest
Field: ReceiveGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PartySharedFocusTargetNotify
Field: SharedFocusTargetInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DeathPenaltyDeleteResponse
Field: DeletedDeathPenaltyRecordGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: AllRealmInfoPubSubChannelInitialDataNotify
Field: RealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TArray<TSharedPtr<FTzRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SpellstoneAdditionalSkillStatsInfo
Field: CharacterStatChangesDuringSkillProgress
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCashShopInfo
Field: MerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSynchronizeLivingTotemInfoNotify
Field: CovenantLivingTotemInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: HandshakeResult
Field: Success
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar4 = 4;
  if (bVar8) {
    lVar4 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar5 = &DAT_0901b5c8;
  if (bVar8) {
    puVar5 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar4 << 1);
  __memcpy_chk(pcVar10,puVar5,lVar4,0x17);
  pcVar10[lVar4] = '\0';
  uVar6 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar6 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: RankingQueryByNameResponse
Field: TargetRankingInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RankingQueryByNameResponse
Field: SelfRankingInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdRewardStatNotify
Field: IsOccupiedByNpcCovenant
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAnniversaryAchievementResetResponse
Field: AnniversaryAchievementPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InventoryInfo
Field: ItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketGoodsSummaryInfoQueryNotify
Field: MarketGoodsSummaryQueryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketGoodsSummaryInfoQueryNotify
Field: MarketGoodsSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketGoodsSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantInvitationInfoUpdatedNotify
Field: InvitedCovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatAcquireStanceResponse
Field: IsStanceInstallFreeChanceEnabled
Code:
bVar9 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar9) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar13;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleInfo
Field: BuildingStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzStrongholdBattleBuildingStateInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzStrongholdBattleBuildingStateInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleInfo
Field: DefenseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStrongholdBattleDeploymentKindType,TSharedPtr<FTzStrongholdBattleDefenseGroupInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStrongholdBattleDeploymentKindType,TSharedPtr<FTzStrongholdBattleDefenseGroupInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x80));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleInfo
Field: AttackInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStrongholdBattleDeploymentKindType,TSharedPtr<FTzStrongholdBattleAttackInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStrongholdBattleDeploymentKindType,TSharedPtr<FTzStrongholdBattleAttackInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xd0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionSummaryInfo
Field: ExpeditionSummaryInfo
Code:
if (*(long **)(in_x0 + 0x90) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x90) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: GearBatchCraftRequest
Field: CraftTargetGrades
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzItemGradeType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearBatchCraftRequest
Field: CraftTargetGearCategories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearCategoryKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRankingViewInfo
Field: OccupiedStrongholdCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: MarketSellReregisterResponse
Field: IsSuccessByGoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacyInfos
Field: RequestInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantDiplomacyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantDiplomacyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacyInfos
Field: ResponseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantDiplomacyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantDiplomacyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantHistoryCheckCompleteArchitectureResponse
Field: CovenantHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerDeathNotify
Field: DeathRecordInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanManageCovenantMember
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanBanishMember
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CovenantPermissionsInfo
Field: CanManageHaven
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanModifyTax
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CovenantPermissionsInfo
Field: CanManageDiplomacy
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xd) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanManageDiplomacyChat
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xe) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CovenantPermissionsInfo
Field: CanDeclareBattle
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xf) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanStartCampaign
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: CovenantRejectInvitationsRequest
Field: CovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatRegisterCheatEnabledPlayerNameResponse
Field: CheatEnabledPlayerNames
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FString,DefaultKeyFuncs<FString,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DeathPenaltyRecoverResponse
Field: RecoveredDeathPenaltyGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: DeathPenaltyRecoverResponse
Field: DeathPenaltyFreeRecoveryInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookExperiencePointsItemConsumeRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionInfo
Field: ExpeditionInfo
Code:
if (*(long **)(in_x0 + 0x178) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x178) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantLivingTotemWithStatsInfo
Field: CharacterPublicStatsInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantLivingTotemWithStatsInfo
Field: CharacterPrivateStatsInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: NavMeshTileCheckRequest
Field: CheckRequestedTiles
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmInfoListResponse
Field: RealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TArray<TSharedPtr<FTzRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmInfoListResponse
Field: RealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzUniverseAccountRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmInfoListResponse
Field: AppliedRealmAccountGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BattalionCreateNotify
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: QuestAcceptNotify
Field: StartByItem
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x48) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: QuestAcceptNotify
Field: FavorInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__p

Opcode: QuestAcceptNotify
Field: FavorMissionInfo
Code:
if (*(long **)(in_x0 + 0x60) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x60) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleAttackInfo
Field: TargetBuildingSpawnerCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStrongholdBattleAttackPhaseType,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStrongholdBattleAttackPhaseType,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantGiftBoxInfo
Field: IsReceived
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x58) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantGiftBoxInfo
Field: ReceiveRewardInfo
Code:
if (*(long **)(in_x0 + 0x60) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x60) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantWatchSynchronizeNotify
Field: TargetPlayerGuidToCreateDateTimes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFollowerInfo
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFollowerInfo
Field: FollowerDispatchOverallInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzFollowerDispatchOverallInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzFollowerDispatchOverallInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFollowerInfo
Field: FollowerCollectionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFavorInfo
Field: DistrictFavorDatabaseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzDistrictFavorDatabaseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzDistrictFavorDatabaseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFavorInfo
Field: ActiveFavorDatabaseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzFavorDatabaseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzFavorDatabaseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RPCExceptionMessage
Field: ErrorString
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x10),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: AutoBuySettingsInfo
Field: Settings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CovenantRecommendResourceKindFailResponse
Field: RecommendedResourceKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzResourceKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ContaminationInfo
Field: ContaminationNaturalDecreaseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzContaminationNaturalDecreaseType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzContaminationNaturalDecreaseType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdSettleAccountInfo
Field: GoldHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FDateTime,TSharedPtr<FTzGoldHistoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FDateTime,TSharedPtr<FTzGoldHistoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: HavenOrganizationStatsDetailInfo
Field: Stats
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzHavenOrganizationStatSourceType,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzHavenOrganizationStatSourceType,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: FollowerCollectionUpdateNotify
Field: CollectionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferReadyToRealmTransferRequest
Field: UseItem
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantRealmTransferReadyToRealmTransferRequest
Field: UseCurrency
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: UpdateLastViewedChatRecordsIndexRequest
Field: ChatRecordsIndices
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatRecordsIndex,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferLimitedItemCountResponse
Field: ItemCountByCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferLimitedItemCountResponse
Field: ItemCountByItemGradeAndItemCategory
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzItemCategoryType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemCategoryType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferLimitedItemCountResponse
Field: GearCountByItemGradeAndGearKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGearKindType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGearKindType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferLimitedItemCountResponse
Field: AffectItemCountByItemGradeAndAffectItemKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAffectItemKindType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAffectItemKindType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x100));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatAcquireAndSetToSquadFollowerResponse
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationSelectRealmAccountResponse
Field: PlayerSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationSelectRealmAccountResponse
Field: CanCheatCommand
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x80) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmIntegrationSelectRealmAccountResponse
Field: RealmIntegrationRealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x88));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcRandomBuffStateUpdateNotify
Field: IsRandomBuffNpc
Code:
bVar7 = *(char *)(in_x0 + 0x50) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: OccupiableNpcRandomBuffStateUpdateNotify
Field: NxLogBaseParameterInfo
Code:
if (*(long **)(in_x0 + 0x58) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x58) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ChatOptionInfo
Field: ChatTabFilter
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzChatKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar4 = (ulong)((byte)local_198 >> 1);
  pcVar1 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk

Opcode: ChatOptionInfo
Field: CovenantRewardAcquireNotifyDisplayOption
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ChatOptionInfo
Field: ChatMacros
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,FString,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,FString,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__nd

Opcode: GearSlotPresetModifyRequest
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearSlotPresetModifyRequest
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: NpcSpeechBalloonTextFormatInfo
Field: TextFormatParameters
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FString,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__n

Opcode: AutoDonateSettingOptionInfo
Field: ItemFilterCuidToItemGrade
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar4 = (ulong)((byte)local_198 >> 1);
  pcVar1 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk

Opcode: AutoDonateSettingOptionInfo
Field: IsContainEnchantedItem
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x59) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: AutoDonateSettingOptionInfo
Field: IsContainBasicCollectableItem
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x5a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: AllRealmInfoPubSubChannelUpdateDataNotify
Field: RealmStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TutorialsInfo
Field: CompletedTutorialCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: RankingInfo
Field: ViewInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: GearSlotPresetModifyResponse
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearSlotPresetModifyResponse
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionSummaryInfo
Field: IsJoinable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x88) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatRemoveAllWorldMapMarkerResponse
Field: RemovedGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: RealmAccountLoginRequest
Field: IsFastLogin
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerStrongholdBattleStatisticsInfo
Field: SkillUseStatisticsNxLogInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerSkillUseStatisticsNxLogInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayStateNotify
Field: StateInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantJoinedStrongholdBattleInfoRemoveNotify
Field: CovenantJoinedStrongholdBattleInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ContentsRelockNotify
Field: ContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzContentsUnlockKindType,DefaultKeyFuncs<ETzContentsUnlockKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionChangeJoinableNotify
Field: IsJoinable
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SkillShieldWallAffectInfo
Field: IsHit
Code:
bVar7 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SkillShieldWallAffectInfo
Field: IsAffectingTargetStats
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x29) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SpawnLayerInfo
Field: IsActivated
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPayDividendResponse
Field: DividendResultInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: QueryChatRoomRecordsInitializationInfoResponse
Field: ChatRoomRecordsInitializationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatRoomRecordsInitializationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantGiftReceiveInfo
Field: ReceiveRewardInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRubyShopBuyRequest
Field: MerchandiseBuyInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCreateAndEquipGearsResponse
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCreateAndEquipGearsResponse
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PaidAttendanceInfo
Field: IsVisibleNotificationMarker
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CashShopRefundableMerchandiseStorageBoxInfo
Field: SlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCashShopRefundableMerchandiseStorageBoxSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: TozTimeAdjustment
Field: Adjustment
Code:
TozSerializableMessageLibNative::JsonSerializer<TozSerializableMessageLibNative::TimeSpan,void>::
  Serialize((TimeSpan *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__n

Opcode: MountRendezvousInfo
Field: IsImmediateBoarding
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 100) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar8;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: MountRendezvousInfo
Field: IsMovingBoarding
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x65) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar8;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar8 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__put

Opcode: StrongholdBattleSummaryInfo
Field: StrongholdBattleJoinedCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleJoinedCovenantInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryInfo
Field: AnniversaryStrongholdOccupationCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryStrongholdOccupationCovenantInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryStrongholdOccupationCovenantInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ChatRoomListUpdateNotify
Field: AddedChatRoomRecordsInitializationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatRoomRecordsInitializationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ChatRoomListUpdateNotify
Field: DeletedChatRoomGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: RewardInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: RewardInfo
Field: RewardItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: RewardInfo
Field: SortedRewardItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRewardItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x78));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: RewardInfo
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x90));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: RewardInfo
Field: IsUpgradeSlayingGrade
Code:
bVar8 = *(char *)(in_x0 + 0xe4) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RewardInfo
Field: AnniversaryRewardCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf0));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: CheatEnchantItemRequest
Field: GearEnchantSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnchantSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: ItemLockSwitchResponse
Field: IsInRealmAccountWarehouse
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemLockSwitchResponse
Field: IsLocked
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: MountBoardingRequest
Field: IsLeftBoarding
Code:
bVar6 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar6) {
    lVar1 = 5;
  }
  pcVar8 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar6) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MountBoardingRequest
Field: IsImmediateBoarding
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x24) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAcquireAllUsableSkillsResponse
Field: AcquiredSkillCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FavoriteCraftRecipeRegisterRequest
Field: IsRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: QuickSlotInfo
Field: QuickSlotDetailInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsOwnCovenantNameDisplayed
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsOwnHealthBarDisplayed
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsOtherCovenantNameDisplayed
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsSameCovenantHealthBarDisplayed
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsSamePartyOrBattalionHealthBarDisplayed
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xd) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SeamlessEntityInfo
Field: EntityInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BuildingWorkSummaryInfo
Field: IsCovenantRecommended
Code:
bVar9 = *(char *)(in_x0 + 0x19) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_c

Opcode: StrongholdBattleJoinNotify
Field: StrongholdBattleInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantGoodsRegistrationManagementModeCommandResponse
Field: RegisteredGoodsList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AlertPlayerRegisterResponse
Field: RegisteredPlayerInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DeathPenaltyRecoveryInfo
Field: DeathPenaltyFreeRecoveryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DeathPenaltyRecoveryInfo
Field: LastDeathPenaltyAutoRecoveryInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: TargetScanShareRequest
Field: ScannedTargetGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantWatchInfo
Field: CovenantWatchKillingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantWatchKillingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ItemLockSwitchRequest
Field: IsInRealmAccountWarehouse
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemLockSwitchRequest
Field: IsLocked
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x11) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: RealmAccountPresentQueryResponse
Field: RealmAccountPresentInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmAccountPresentSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ExpeditionInfo
Field: JoinedBattalionCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x48));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozPong
Field: ServerUtcNow
Code:
TozSerializableMessageLibNative::JsonSerializer<TozSerializableMessageLibNative::DateTime,void>::
  Serialize((DateTime *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: RealmIntegrationBattleScoreUpdateNotify
Field: ScoreInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SchemaDataTable
Field: SchemaTable
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: SchemaDataTable
Field: DataTable
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: CheatTestGearEnchantOptionGradeResponse
Field: UpgradeCountsByEnchantSlot
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: PartyConfirmJoinApplicationResponse
Field: IsApproved
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSetIgnoreCovenantMarketUsableJoinElapsedTimeRequest
Field: IgnoreCovenantMarketUsableJoinElapsedTime
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantDiplomacyInviteReinforcementRequest
Field: RewardCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ItemAcquireSourceInfo
Field: AcquireSourceAdditionalParameter
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantSynchronizeMemberRefreshedContributionInfosNotify
Field: CovenantMemberContributionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantMemberContributionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferRegisterRequest
Field: PlayerGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerSkillAcquireResponse
Field: AutoUseRootSkillCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerCovenantSupportInfo
Field: HasCovenantSupportableFollower
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CovenantPayDividendRequest
Field: DividendInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StackableItemMultipleUseResponse
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x48));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: StackableItemMultipleUseResponse
Field: PlayerInventoryItemAddInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x98));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: StackableItemMultipleUseResponse
Field: IsUpgradeSlayingGrade
Code:
bVar8 = *(char *)(in_x0 + 0xb0) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StackableItemMultipleUseResponse
Field: AmityDelta
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb8));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__n

Opcode: ItemAcquireNotify
Field: ItemIndices
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndex,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: PartySharedAttackTargetNotify
Field: SharedAttackTargetInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CharacterRecordInfo
Field: IsPvpStatsAffectedCharacter
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x90) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: ChatEntityInfo
Field: PlayerHarmfulTextOnChatViolationInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantDiplomacySummaryInfo
Field: AllianceCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacySummaryInfo
Field: HostilityCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionInitializeInfo
Field: RealmHasSpaceAvailable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ErFrontServerSessionInitializeInfo
Field: PopupCommunityAutomatically
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: CovenantLivingTotemStatsInfoQueryResponse
Field: LivingTotemStatsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantLivingTotemWithStatsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TimeCreviceCovenantPvpScoreRankingViewInfo
Field: AdditionalSourceInfo
Code:
if (*(long **)(in_x0 + 0x68) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x68) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantSynchronizeMemberContributionInfoNotify
Field: CovenantMemberContributionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantMemberContributionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PushNotificationOptionModifyRequest
Field: IsEnabled
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: PushNotificationOptionModifyRequest
Field: IsNotifiedEvenWhenConnected
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: CharacterMoveNotify
Field: CharacterMoveInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookInfoUpdateNotify
Field: CategoryCuidToNodeStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookInfoUpdateNotify
Field: CategoryCuidToCollectionInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzMonsterBookCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzMonsterBookCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DeathPenaltyRecordInfoAddNotify
Field: DeathPenaltyRecordInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: LootNotify
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: LootNotify
Field: IsErosionInstallerReward
Code:
bVar8 = *(char *)(in_x0 + 0xa8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FollowerDispatchOrderInfo
Field: UseDispatchAutomation
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SeasonPassAchievementUpdateNotify
Field: SeasonPassAchievementInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmIntegrationBattleResultInitialDataNotify
Field: RealmResults
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationBattleRealmResult,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionLeaderChangeRequest
Field: IsAccept
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: DatatoolHandshakeResponse
Field: ClientData
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: ShopCashMerchandiseBuyRequest
Field: MerchandisePaymentInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SessionKickNotify
Field: BanInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BuildingWorkOrderInfo
Field: IsRecommended
Code:
bVar9 = *(char *)(in_x0 + 0x34) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: IsImmuneToHealthPointsGain
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: IsImmuneToManaPointsLoss
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: IsImmuneToManaPointsGain
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: CharacterStatChangesByStatKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAdjustableStatKindType,TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__nd

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: StatChangeIncreaseRatiosByStatKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAdjustableStatKindType,float,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,float,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x88));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__nd

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: ProtectHealthPointsSettingStatKindByStatKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAdjustableStatKindType,float,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,float,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xe0));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__nd

Opcode: ZlibCompressHandshakeResult
Field: TozNetwork.Handshake.Compressor.ZlibCompressHandshakeResult
Code:


Opcode: TargetScanShareNotify
Field: ScannedTargetInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,TSharedPtr<FTzSharedTargetCharacterInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,TSharedPtr<FTzSharedTargetCharacterInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SpellstoneAdditionalInfo
Field: SubOptionCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: MailAttachmentsInfo
Field: Items
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailAttachmentsInfo
Field: Currencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMailAttachmentCurrencyInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacyAddOrUpdateNotify
Field: CovenantDiplomacyInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountWarehouseItemRetrieveRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ExpeditionInitialDataNotify
Field: ExpeditionSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzExpeditionSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzExpeditionSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCampaignInfo
Field: ActiveCampaignProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<FTzCuid,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<FTzCuid,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCampaignInfo
Field: CampaignTicketInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCampaignTicketInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCampaignTicketInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerMovePathInfo
Field: RoadJunctionIds
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FollowerMovePathInfo
Field: PathToFirstRoadJunction
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FollowerMovePathInfo
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x50));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: ShopCashMerchandiseReceiveResponse
Field: ReceiveGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FollowerCoreInfo
Field: ReturnReasonAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x60) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x60) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: ErFrontServerSessionReinitializeInfo
Field: PlayerSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionReinitializeInfo
Field: PopupCommunityAutomatically
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x78) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: PartySummaryInfo
Field: IsEnabled
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: PartySummaryInfo
Field: PartyMemberCoreInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPartyMemberCoreInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: PartySummaryInfo
Field: TargetLocationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzTargetLocationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: CovenantCampaignInfo
Field: ActiveCampaignProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<FTzCuid,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<FTzCuid,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCampaignInfo
Field: CovenantCampaignProgressInfo
Code:
if (*(long **)(in_x0 + 0x60) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x60) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAccomplishQuestRequest
Field: ReceiveReward
Code:
bVar8 = *(char *)(in_x0 + 0x2c) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantBattalionExpeditionFailNotify
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillStageInfo
Field: SkillAffectTargetGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SkillStageInfo
Field: SkillAffectTargetAffectInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSkillAffectTargetAffectInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillStageInfo
Field: SkillShieldWallAffectInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSkillShieldWallAffectInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x48));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillStageInfo
Field: SkillTargetingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSkillTargetingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StanceAcquireNotify
Field: IsStanceInstallFreeChanceEnabled
Code:
bVar10 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar10) {
    lVar1 = 5;
  }
  pcVar14 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar10) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar14,puVar3,lVar1,0x17);
  pcVar14[lVar1] = '\0';
  uVar13 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar14;
  if ((local_198 & 1) != 0) {
    uVar13 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantSupportApplyResponse
Field: CovenantSupportedFollowerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SchemaColumn
Field: DeployType
Code:
auVar11 = DatatoolReferenceNative::to_string(*(DeployType *)(in_x0 + 0x10));
  TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize(auVar11._0_8_,auVar11._8_8_);
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: SchemaColumn
Field: DataType
Code:
auVar11 = DatatoolReferenceNative::to_string(*(DataType *)(in_x0 + 0x14));
  TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize(auVar11._0_8_,auVar11._8_8_);
  uVar3 = (ulong)((byte)local_198 >> 1);
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: SchemaColumn
Field: Key
Code:
bVar7 = *(char *)(in_x0 + 0x18) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SchemaColumn
Field: Comment
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x20),(basic_string *)pcVar9);
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: SchemaColumn
Field: Name
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x38),(basic_string *)pcVar10);
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: MonsterBookInfo
Field: CategoryCuidToNodeStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookInfo
Field: CategoryCuidToCollectionInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzMonsterBookCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzMonsterBookCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookInfo
Field: CategoryCuidToFreeAnalysisCount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookInfo
Field: CategoryCuidToAnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyQuerySummaryInfoListResponse
Field: PartySummaryInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPartySummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingAccessPermissionNotify
Field: BuildingSubscriptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzBuildingSubscriptionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingSubscriptionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ReceivedRewardInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x50));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: ReceivedRewardInfo
Field: IsAnyRewardSentByMail
Code:
bVar6 = *(char *)(in_x0 + 0xa0) == '\0';
  lVar1 = 4;
  if (bVar6) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar6) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: ReceivedRewardInfo
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xe8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: ReceivedRewardInfo
Field: IsUpgradeSlayingGrade
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x138) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MountInteractionStateNotify
Field: Info
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: BuffStatsInfo
Field: CharacterStatChanges
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: ContentsUnlockInitializeNotify
Field: UnusedContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzContentsUnlockKindType,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzContentsUnlockKindType,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionInitializeInfoNotify
Field: PlayerSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionInitializeInfoNotify
Field: CanCheatCommand
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x78) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ErFrontServerSessionInitializeInfoNotify
Field: RealmIntegrationRealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x80));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: FollowerCollectionInfo
Field: CollectionStatus
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzFollowerCollectionTopExperienceInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzFollowerCollectionTopExperienceInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CharacterMoveOrbitalToLocationParameterInfo
Field: IsClockwise
Code:
bVar8 = *(char *)(in_x0 + 0x14) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MarketStrongholdTaxInfoResponse
Field: MarketStrongholdTaxInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketStrongholdTaxInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ReinforcementInfo
Field: IsInBattle
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ReinforcementInfo
Field: RewardCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ArquiAttunementInfo
Field: LevelByArquiAttunementCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ArquiAttunementInfo
Field: AetherOptionLevelByCategoryCuidAndOptionCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketTransactionProcessInfo
Field: IsStorable
Code:
bVar7 = *(char *)(in_x0 + 0x40) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar7) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__put_c

Opcode: PlayerMarketTransactionProcessInfo
Field: ItemAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar13 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerMarketTransactionProcessInfo
Field: IsDirty
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x120) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayStartRequest
Field: ResupplyOnStart
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ExpeditionNpcSummonWaveInfo
Field: NpcDeathCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailsReceiveAttachmentsInTabResponse
Field: ReceivedMailGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: StrongholdBattleStatisticsUpdateInfo
Field: StrongholdBattleStatisticsInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantWatchDetailInfoQueryResponse
Field: CovenantWatchDetailInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantWatchDetailInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DeathPenaltyAutoRecoveryInfo
Field: IsFreeRecovery
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PvpScoreRankingViewInfo
Field: AdditionalSourceInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerMarketSaleGoodsListResponse
Field: MarketSellerGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationQueryRealmAccountInfoResponse
Field: RealmIntegrationRealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCurrencyInfo
Field: PointCurrencyContainerInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantMemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x88));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: OccupiedStrongholdInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzStrongholdInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzStrongholdInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x128));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: HavenOrganizationStatsDetailInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzHavenOrganizationStatsDetailInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzHavenOrganizationStatsDetailInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x178));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantMemberRoleInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantMemberRoleInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x1e8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantHighestUpgradedBuildingLevelInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1f8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantLivingTotemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantLivingTotemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x250));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantResearchInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCovenantResearchInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCovenantResearchInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x260));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: PlayerLocationMonitoringInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerLocationMonitoringInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x2c0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantOutLinkInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzCovenantOutLinkKindType,TSharedPtr<FTzCovenantOutLinkInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzCovenantOutLinkKindType,TSharedPtr<FTzCovenantOutLinkInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x2d0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantCampaignInfo
Code:
if (*(long **)(in_x0 + 0x328) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x328) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantInfo
Field: NeedChangeName
Code:
bVar7 = *(char *)(in_x0 + 0x380) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar7) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: TlsLikeEncryptPremasterSecret
Field: PremasterSecret
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseBuyResponse
Field: MerchandisePaymentInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: NpcOccupationViewInfo
Field: NpcOccupationScoreCovenantViewInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantViewInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantViewInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyOptionInfo
Field: CanInviteOrJoinApplyOnlyFriendOrSameCovenant
Code:
bVar9 = *(char *)(in_x0 + 0x36) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar2,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar13;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PartyOptionInfo
Field: IsAutomatedNewComerApproval
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x37) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar2,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantSearchInfo
Field: OccupiedStrongholdCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar12 = local_198 >> 1 & 0x7f;
  pcVar13 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__n

Opcode: CovenantSearchInfo
Field: IsJoinApplied
Code:
bVar9 = *(char *)(in_x0 + 0x98) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar9) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__put_c

Opcode: FavoriteCollectionRegisterResponse
Field: IsRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantSupportApplyRequest
Field: FollowerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerStanceInfo
Field: AcquiredStances
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzStanceType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: PlayerStanceInfo
Field: IsStanceInstallFreeChanceEnabled
Code:
bVar9 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar9) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: OccupiableNpcInfoBulkUpdateNotify
Field: OccupiableNpcInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzOccupiableNpcInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcInfoBulkUpdateNotify
Field: NxLogBaseParameterInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SpawnLayerDeactivateNotify
Field: IsPermanentSpawnLayer
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerDeleteConditionCheckResponse
Field: IsInCovenant
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: PlayerDeleteConditionCheckResponse
Field: HasSaleGoodsInMarket
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FollowerMovePathInfoResponse
Field: MovePathInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzFollowerMovePathInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzFollowerMovePathInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionJoinNotify
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatClearGearResponse
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzEquipmentPresetIndexType,TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzEquipmentPresetIndexType,TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InGameNotificationDeleteCategoryNotify
Field: DeletedGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: FieldEnterCompleteRequest
Field: CharacterMoveInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DiplomacyChatCovenantSummaryInfoUpdateNotify
Field: DiplomacyChatCovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzDiplomacyChatCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantQueryJoinAppliedCovenantSummaryInfoListResponse
Field: CovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingDemolishRequest
Field: IsCompleteImmediately
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: WorldMapPvpBattleKillDeathInfoUpdateNotify
Field: VictimPvpBattleKillDeathCountInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: WorldMapPvpBattleKillDeathInfoUpdateNotify
Field: KillerPvpBattleKillDeathCountInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayEndedNotify
Field: RewardInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookNodeAcquirableStateInfo
Field: NpcCuidToKillCount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationRealmAccountInfo
Field: PlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationPlayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopRegisteredGoodsUpdateNotify
Field: RegisteredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingDowngradeRequest
Field: IsCompleteImmediately
Code:
bVar8 = *(char *)(in_x0 + 0x1c) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ResourceHistoryInfo
Field: IncomeHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzResourceKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzResourceKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ResourceHistoryInfo
Field: ExpenseHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzResourceKindType,TMap<ETzResourceExpenseKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzResourceExpenseKindType,long_long,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzResourceKindType,TMap<ETzResourceExpenseKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzResourceExpenseKindType,long_long,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErosionInfo
Field: IsWithoutPermission
Code:
bVar8 = *(char *)(in_x0 + 0xf8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CspSupporterInfo
Field: ChannelInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCspChannelInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: ExpeditionBossNpcLocationInfoSynchronizeNotify
Field: IsAlive
Code:
bVar7 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: BuildingWorkRequestInfo
Field: BaseInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantTradeCategoryQueryResponse
Field: CategoryItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeCategoryItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CraftRequest
Field: MaterialGroupOrderList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CraftRequest
Field: MaterialCuidToItemSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzItemSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzItemSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillUseOptionInfo
Field: UseCycle
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: SkillUseOptionInfo
Field: UseCycleInPvp
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1c) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar8 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantJoinedStrongholdBattleInfoAddNotify
Field: JoinedStrongholdBattleInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantJoinedStrongholdBattleInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailUnreadNotify
Field: UnreadCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzMailTabType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzMailTabType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcSummaryUpdateDataNotify
Field: OccupiableNpcSummaryInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: GearMultipleEnhanceResponse
Field: GearEnhancementResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnhancementResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InGameNotificationInfo
Field: AdditionalCuidParams
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: CovenantTradeSalesListUpdateNotify
Field: AddedOrUpdatedGoodsSalesInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CostumeInfo
Field: HasPreviouslyEquippedGuise
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CostumeInfo
Field: IsWearUniform
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x31) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__pu

Opcode: CrossRealmCovenantSearchResponse
Field: CovenantSearchInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSearchInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SeasonPassLevelRewardParameter
Field: RewardedLevels
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookNodeAnalysisLockSwitchRequest
Field: IsAnalysisLocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PreregistrationInfo
Field: IsAnyPlayerCreated
Code:
bVar7 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PreregistrationInfo
Field: IsReservedPlayerCreated
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x29) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantUpdateCovenantPermissionsInfosResponse
Field: CovenantPermissionsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountIntegrationInfo
Field: HidePopup
Code:
bVar7 = *(char *)(in_x0 + 0x38) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RealmAccountIntegrationInfo
Field: Deleted
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantBattalionExpeditionCompleteNotify
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatGetEnvironmentVariablesResponse
Field: Variables
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,FString,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,FString,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TlsLikeEncryptClientHello
Field: 
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CheatTestGearEnchantGradeResponse
Field: UpgradeCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGearEnchantGradeType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGearEnchantGradeType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TlsLikeEncryptServerCompleted
Field: TozNetwork.Handshake.TlsLikeEncryptor.TlsLikeEncryptServerCompleted
Code:


Opcode: InventoryOptionInfo
Field: IsEquippedItemVisible
Code:
bVar9 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PushNotificationOptionModifyResponse
Field: ModifiedPushNotificationOptionIsEnabled
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleUseSiegeWeaponSlotNotify
Field: StrongholdBattleAttackSiegeWeaponSlotInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleUseSiegeWeaponSlotNotify
Field: SiegeWeaponCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRecordsInfo
Field: GainedItems
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x50));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRecordsInfo
Field: ConsumedAffectItems
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAffectItemKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAffectItemKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MountCallingInfo
Field: IsImmediateBoarding
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MountCallingInfo
Field: IsMovingBoarding
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put

Opcode: StrongholdBuildingConstructRequest
Field: IsCompleteImmediately
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MarketRecommendedItemQueryResponse
Field: RecommendedGearCuidByGearKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGearKindType,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGearKindType,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: MarketRecommendedItemQueryResponse
Field: RecommendedCoreMaterialCuidByGearKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGearKindType,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGearKindType,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CollectionSlotItemInfo
Field: IsEroded
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1c) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillAffectTargetStatsAffectInfo
Field: IsBlocked
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x11) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar2,0x17);
  pcVar11[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillAffectTargetStatsAffectInfo
Field: IsGlancingBlow
Code:
pcVar11 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x12) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar2,0x17);
  pcVar11[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk1::__put

Opcode: ChatQueryEntityInfoResponse
Field: LoggedIn
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantDiplomacyDeleteNotify
Field: CovenantDiplomacyInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: HavenOperationInfo
Field: RecommendedResourceKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzResourceKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AttackerListNotify
Field: AttackerPlayerGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcInfo
Field: IsRandomBuffNpc
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x80) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketSettlementInfo
Field: StrongholdSettlementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSettlementInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSettlementInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InventoryOverflowInfo
Field: OverflowedItemInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: ContentsUnlockNotify
Field: ContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzContentsUnlockKindType,DefaultKeyFuncs<ETzContentsUnlockKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferCheckInfo
Field: CovenantTradeGoodsSalesInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeGoodsSalesInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar4 = (ulong)((byte)local_198 >> 1);
  pcVar1 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk

Opcode: CovenantRealmTransferCheckInfo
Field: HasRegisteredShopGoodsInGeneralShop
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CovenantRealmTransferCheckInfo
Field: HasJoinedStrongholdBattle
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRealmTransferCheckInfo
Field: HasJoinedExpedition
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__pu

Opcode: StrongholdSummonWaveDefenseInfo
Field: CurrentWaveNpcKnockOutProgress
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xe0));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ExpeditionJoinedBattalionsInitialDataNotify
Field: ExpeditionJoinedBattalionList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantBattalionPublicSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSynchronizeJoinAppliedPlayerIsConnectedNotify
Field: IsConnected
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmSeasonTimeCreviceEntryUpdateDataNotify
Field: IsFull
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: HandshakeFailMessage
Field: Result
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: MountBoardingInfo
Field: IsImmediateBoarding
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x34) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: MountBoardingInfo
Field: IsMovingBoarding
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x35) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MountUpdateSkillSlotInfoResponse
Field: IsUsedForContinuousCombat
Code:
bVar9 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ServerDrivenPlayLootNotify
Field: RewardInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: OccupiableNpcSummaryInitialDataNotify
Field: OccupiableNpcSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzOccupiableNpcSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzOccupiableNpcSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerItemUseNotify
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x40));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: PlayerItemUseNotify
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x90));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: PlayerItemUseNotify
Field: IsUpgradeSlayingGrade
Code:
bVar8 = *(char *)(in_x0 + 0xa8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerItemUseNotify
Field: AmityDelta
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb0));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__n

Opcode: CovenantStartCampaignNotify
Field: CovenantCampaignProgressInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrategicObjectiveInfo
Field: SquadOrderList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerLocationMonitoringRegisterResponse
Field: PlayerLocationMonitoringInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantCancelInvitationRequest
Field: PlayerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: GoldHistoryInfo
Field: IncomeHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGoldIncomeKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGoldIncomeKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GoldHistoryInfo
Field: ExpenseHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGoldExpenseKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGoldExpenseKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyMemberLootNotify
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: PartyMemberLootNotify
Field: IsErosionInstallerReward
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantCompleteCampaignNotify
Field: IsSuccess
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantCompleteCampaignNotify
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x38));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: ItemTransmuteResponse
Field: ItemTransmutationResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemTransmutationResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: AnniversaryRecordHistoryQueryResponse
Field: AnniversaryRecordHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAnniversaryRecordHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketFavoriteItemInfoQueryResponse
Field: MarketFavoriteItemInfosOnSale
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketFavoriteItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: MarketFavoriteItemInfoQueryResponse
Field: MarketFavoriteItemInfosNotOnSale
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketFavoriteItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantAddInvitationsNotify
Field: CovenantInvitationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantInvitationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CharacterMoveToLocationInfo
Field: MoveToDestinationParameterInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CharacterMoveToLocationInfo
Field: MoveToNextDestinationParameterInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: GearBatchCraftResponse
Field: CraftResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCraftResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearBatchCraftResponse
Field: CraftCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCraftCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCraftCountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x50));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRubyShopInitialDataNotify
Field: ShopInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCovenantRubyShopInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCovenantRubyShopInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRubyShopInitialDataNotify
Field: ShopMerchandiseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzCovenantRubyShopMerchandiseInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzCovenantRubyShopMerchandiseInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSetLocalServerPushRequest
Field: IsEnabled
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ItemUpdateInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ItemUpdateInfo
Field: RemovedItemCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: StrongholdBattleUpdateSiegeWeaponSlotNotify
Field: StrongholdBattleAttackSiegeWeaponSlotInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantDonationRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar3 = (ulong)((byte)local_198 >> 1);
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk

Opcode: CovenantDonationRequest
Field: DonateEvenIfHavenInventoryIsFull
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatCollectionUpdateNotify
Field: ActivatedCollectionCategoryCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCollectionUpdateNotify
Field: CollectionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCollectionProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCollectionProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x68));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillAutoUseInfoUpdateNotify
Field: RootSkillCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatChangeCashShopCheckBuyLimitOptionResponse
Field: IsIgnoreToCheckBuyLimit
Code:
bVar8 = *(char *)(in_x0 + 0xc) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BossSpawnInfoUpdatedNotify
Field: BossSpawnInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PartyInfo
Field: PartyMemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPartyMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPartyMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyInfo
Field: TargetLocationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzTargetLocationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x78));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyInfo
Field: SharedAttackTargetInfo
Code:
if (*(long **)(in_x0 + 0x88) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x88) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PartyInfo
Field: SharedFocusTargetInfo
Code:
if (*(long **)(in_x0 + 0x98) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x98) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: QuestProgressInfo
Field: StartByItem
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: QuestProgressInfo
Field: QuestMissionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzQuestMissionProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzQuestMissionProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__n

Opcode: ServerDrivenPlayOptionInfo
Field: SwitchAtCurrentLocationInsideHuntingSite
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayOptionInfo
Field: AutoSwitchOnDisconnected
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayOptionInfo
Field: UseAutoResupply
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ServerDrivenPlayOptionInfo
Field: UseAutoResupplyWhenDead
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ServerDrivenPlayOptionInfo
Field: UseHealthPointsRecovery
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ServerDrivenPlayOptionInfo
Field: EndWhenDeadInPvp
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountWarehouseAutoStoreSettingUpdateRequest
Field: AutoStoreSettings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SeasonPassAchievementInitializeDataNotify
Field: SeasonPassAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSeasonPassAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DefaultPreprocessResult
Field: Success
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar4 = 4;
  if (bVar8) {
    lVar4 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar5 = &DAT_0901b5c8;
  if (bVar8) {
    puVar5 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar4 << 1);
  __memcpy_chk(pcVar10,puVar5,lVar4,0x17);
  pcVar10[lVar4] = '\0';
  uVar6 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar6 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CheatCreateAndEquipGearResponse
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatCreateAndEquipGearResponse
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: FavoriteCollectionRegisterRequest
Field: IsRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: BulkCharacterMoveNotify
Field: CharacterMoveInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TArray<TSharedPtr<FTzCharacterMoveInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TArray<TSharedPtr<FTzCharacterMoveInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozTimeReconcile
Field: TozNetwork.Protocol.TozTimeReconcile
Code:


Opcode: CovenantSettleAccountInfoQueryResponse
Field: CovenantSettleAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCovenantSettleAccountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCovenantSettleAccountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSettleAccountInfoQueryResponse
Field: StrongholdSettleAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzStrongholdSettleAccountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzStrongholdSettleAccountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FindShortestTravelPathResponse
Field: PathToNearestRoadJunctionToStartLocation
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FindShortestTravelPathResponse
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x88));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FindShortestTravelPathResponse
Field: PathNotByRoad
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x98));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FindShortestTravelPathResponse
Field: PathNotByRoadOneShotSpecialMoveIndices
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 200));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: CheatChangeActivationSpawnLayerRequest
Field: IsActivated
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SessionInitializeInfo
Field: 
Code:


Opcode: SkillStageFlowCancelNotify
Field: IsCanceledStageAffectApplied
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FollowerDispatchOverallInfoSynchronizeNotify
Field: DispatchOverallInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzFollowerDispatchOverallInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzFollowerDispatchOverallInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ChatNotify
Field: ChatInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BattalionQueryMemberCandidateListResponse
Field: BattalionMemberCandidateList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBattalionMemberSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailBuildingCraftLayoutInfo
Field: CraftItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingQueryInfosResponse
Field: BuildingInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBuildingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSummaryInfo
Field: OccupiedStrongholdCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: CovenantSummaryInfo
Field: MainLivingTotemInfo
Code:
if (*(long **)(in_x0 + 0xb8) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0xb8) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSetExperiencePointsBlockedRequest
Field: IsExperiencePointsBlocked
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RegionContentPlayInfoNotify
Field: RegionPlayTimeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzRegionContentKindType,TSharedPtr<FTzRegionContentPlayInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzRegionContentKindType,TSharedPtr<FTzRegionContentPlayInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketFavoriteItemRegisterResponse
Field: IsOnSaleMarketFavoriteItemInfo
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmIntegrationBattleResultUpdateDataNotify
Field: RealmResults
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationBattleRealmResult,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: AllianceCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x28));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: CovenantGrantedSkillCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x78));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: SquadInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSquadInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0xe0));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: MemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzBattalionMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzBattalionMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf0));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: IsJoinable
Code:
bVar7 = *(char *)(in_x0 + 0x160) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_c

Opcode: RPCInvokingMessage
Field: Param
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar9 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar9 = local_198 & 0xff;
  }
  uVar2 = local_190;
  pcVar10 = local_188;
  if ((uVar9 & 1) == 0) {
    uVar2 = uVar9 >> 1;
    pcVar10 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: RPCInvokingMessage
Field: FireAndForget
Code:
bVar7 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar7) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RPCInvokingMessage
Field: HasCancellationToken
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdCampaignBattleInfo
Field: CampaignProgressInfo
Code:
if (*(long **)(in_x0 + 0x120) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x120) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdCampaignBattleInfo
Field: TargetMissionCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x130));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: StrongholdCampaignBattleInfo
Field: CampaignConditionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCampaignConditionProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCampaignConditionProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x140));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSynchronizeHighestUpgradedBuildingLevelInfosNotify
Field: CovenantHighestUpgradedBuildingLevelInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ItemAutoUseInfoUpdateNotify
Field: ItemCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantSynchronizeMemberInfosResponse
Field: CovenantMemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BasicOrGrowthGuideAchievementUpdateNotify
Field: BasicOrGrowthGuideAchievementInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantTradeGoodsInfo
Field: ItemIndexWithCount
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantTradeGoodsInfo
Field: SellerInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemTransmuteRequest
Field: ItemGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: CheatTestGearEnchantOptionRequest
Field: GearEnchantOptionGrades
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,ETzGearEnchantGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,ETzGearEnchantGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ExpeditionJoinedBattalionsAddOrUpdateNotify
Field: CovenantBattalionPublicSummaryInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: InGameNotificationNotify
Field: InGameNotificationInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: FindRoadPathResultInfo
Field: RoadPathInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<FTzRoadPathInfo,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: FindRoadPathResultInfo
Field: PathNodeInfosToFirstRoadJunctionInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<FTzPathNodeInfo,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: BlockBuildingNotify
Field: IsBlock
Code:
bVar8 = *(char *)(in_x0 + 0x10) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CheatClearSkillSlotQuickSlotAutoUseResponse
Field: AppliedPlayerSkillSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerSkillSlotUpdateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GatheringSiteInfo
Field: GatheringFollowerWorkInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzFollowerWorkOverallInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzFollowerWorkOverallInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1c0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErServerSessionInitializeInfo
Field: __base__
Code:


Opcode: RealmTransferRealmInfoListResponse
Field: RealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TArray<TSharedPtr<FTzRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmTransferRealmInfoListResponse
Field: RealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzUniverseAccountRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmTransferRealmInfoListResponse
Field: AppliedRealmAccountGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: RewardItemIndexWithCount
Field: IsCovenantReward
Code:
bVar7 = *(char *)(in_x0 + 0x40) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: StrongholdBuildingCraftRequest
Field: IsCompleteImmediately
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: AlertPlayerRemoveNotify
Field: DeletedPlayerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: TlsLikeEncryptHandshakeResult
Field: TozNetwork.Handshake.TlsLikeEncryptor.TlsLikeEncryptHandshakeResult
Code:


Opcode: ClanSponsorRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferExecuteRequest
Field: UseItem
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantRealmTransferExecuteRequest
Field: UseCurrency
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRewardInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRewardInfo
Field: DiscardedIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSetUrfModeResponse
Field: IsUrfMode
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatChangeCrossRealmMaintenanceRequest
Field: IsUnderMaintenance
Code:
bVar9 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PvpRecordKillerPlayerInfo
Field: HasTeased
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xa0) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: TlsLikeEncryptServerHello
Field: ServerRandom
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TlsLikeEncryptServerHello
Field: Exponent
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TlsLikeEncryptServerHello
Field: Modulus
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RoadLinkInfo
Field: IsOneShotSpecialMove
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantJoinNotify
Field: CovenantBattalionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionNotifyInfo
Field: IsNotExposeToBattalionList
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: RPCCancellingMessage
Field: TozRPC.RPCCancellingMessage
Code:


Opcode: CovenantUpdateCovenantPermissionsInfosNotify
Field: CovenantPermissionsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozTcpHello
Field: EngineData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozTcpHello
Field: UserData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerEquipmentInfo
Field: EquipmentPresetInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzEquipmentPresetIndexType,TSharedPtr<FTzEquipmentPresetInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzEquipmentPresetIndexType,TSharedPtr<FTzEquipmentPresetInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  pcVar12 = (char *)((ulong)&local_198 | 1);
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: PlayerEquipmentInfo
Field: HasPreviouslyEquippedGuise
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x70) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: SquadInfo
Field: MemberGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SquadInfo
Field: TargetLocationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzTargetLocationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SquadInfo
Field: SharedAttackTargetInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SquadInfo
Field: SharedFocusTargetInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAnniversaryAchievementAccomplishRequest
Field: MissionProgressCounts
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: ItemInfoUpdateNotify
Field: ItemInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantMarketHistoryInfo
Field: IsRegister
Code:
bVar8 = *(char *)(in_x0 + 0x46) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: InventoryUpdateInfo
Field: AddedItemInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InventoryUpdateInfo
Field: RemovedItemGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: InventoryUpdateInfo
Field: StackableItemUpdateInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStackableItemUpdateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferExecuteRequest
Field: UseItem
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountRealmTransferExecuteRequest
Field: UseCurrency
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: PvpRecordDeadPlayerInfo
Field: HasPlayerLocationMonitoringRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x88) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: NavMeshTileDataRequest
Field: CheckRequestedTiles
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatMonsterBookSetAcquisitionProgressResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CharacterPublicStatsInfoSynchronizeNotify
Field: CharacterPublicStatsInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerSkillSlotSetInfo
Field: PlayerSkillSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzPlayerSkillSlotIndexType,TSharedPtr<FTzPlayerSkillSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzPlayerSkillSlotIndexType,TSharedPtr<FTzPlayerSkillSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: NpcInfo
Field: IsInSeekHidingAttackTargetState
Code:
bVar9 = *(char *)(in_x0 + 0x220) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: NpcInfo
Field: AttackerPlayerGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x228));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__n

Opcode: ErosionItemUseParameterInfo
Field: IsWithoutPermission
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x14) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: OccupiableNpcSummaryInfo
Field: IsRandomBuffNpc
Code:
bVar8 = *(char *)(in_x0 + 0x80) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: InfoAuthenticate
Field: AuthenticateInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: MailStrongholdBattleEndResultLogLayoutInfo
Field: StrongholdBattleJoinedCovenantHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleJoinedCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatCovenantRealmTransferBlockRequest
Field: ApplyAll
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatSetUrfModeRequest
Field: IsUrfMode
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatSetLoggingResponse
Field: IsLogging
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmSeasonTimeCreviceEntryInitialDataNotify
Field: IsFull
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleAttackLadderCarSiegeWeaponSlotInfo
Field: LadderCarPillarNpcGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerRealmIntegrationBattleInfo
Field: SeasonInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzPlayerRealmIntegrationBattleSeasonInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzPlayerRealmIntegrationBattleSeasonInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: AnniversaryPointRankingRecordQueryResponse
Field: RankingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRankingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x38));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryPointRankingRecordQueryResponse
Field: CovenantRankingInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryPointRankingRecordQueryResponse
Field: CovenantMemberAnniversaryPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantMemberAnniversaryPointInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRubyShopInfo
Field: BuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: EnvironmentVariablesNotify
Field: Variables
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,FString,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,FString,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantReinforcementInfoSynchronizeNotify
Field: ReinforcementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzReinforcementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantReinforcementInfoSynchronizeNotify
Field: ReceivedReinforcementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzReinforcementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ThreatPointsNotify
Field: ThreatPoints
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyQueryMemberCandidateListResponse
Field: PartyMemberCandidateList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPartyMemberCoreInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantDonationResponse
Field: IsAnyRewardSentByMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x50) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: TozMessage
Field: TozNetwork.Protocol.TozMessage
Code:


Opcode: SeasonPassQueryResponse
Field: SeasonPassAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSeasonPassAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantGiftReceiveResponse
Field: ReceiveGiftInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantGiftReceiveInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DataTable
Field: DataHeader
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: DataTable
Field: RegDate
Code:
TozSerializableMessageLibNative::JsonSerializer<TozSerializableMessageLibNative::DateTime,void>::
  Serialize((DateTime *)(in_x0 + 0x18));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: DataTable
Field: Rows
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::vector<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,toz::DefaultAllocator<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>>>,toz::DefaultAllocator<std::__ndk1::vector<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,toz::DefaultAllocator<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>>>>>,void>
  ::Serialize((vector *)(in_x0 + 0x28));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookNodeStateInfo
Field: IsAnalysisLocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillAffectTargetAffectInfo
Field: IsHit
Code:
bVar7 = *(char *)(in_x0 + 0x18) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: SkillAffectTargetAffectInfo
Field: SkillAffectTargetStateAffectInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatApplySkillSlotQuickSlotAutoUsePresetResponse
Field: AppliedPlayerSkillSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerSkillSlotUpdateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FavorRefreshResponse
Field: FavorList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavorInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FavorRefreshResponse
Field: FavorMissionList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavorMissionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: NpcActionNotify
Field: NpcSpeechBalloonInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SpellstoneSlotPageInfo
Field: SpellstoneSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzSpellstoneSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzSpellstoneSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: FollowerDispatchInfo
Field: BuildingWorkObjectiveInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmCovenantQuerySummaryInfoListRequest
Field: CovenantGuidRealmCuidList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CharacterInfo
Field: CharacterPublicStatsInfo
Code:
if (*(long **)(in_x0 + 0xb0) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0xb0) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CharacterInfo
Field: BuffInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<TSharedPtr<FTzBuffInfo,(ESPMode)1>,DefaultKeyFuncs<TSharedPtr<FTzBuffInfo,(ESPMode)1>,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0xc0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CharacterInfo
Field: CharacterMoveInfo
Code:
if (*(long **)(in_x0 + 0x110) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x110) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CharacterInfo
Field: ParticipatingContentsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x140));
  pcVar12 = (char *)((ulong)&local_198 | 1);
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk

Opcode: CharacterInfo
Field: IsHarmfulSkillTargetableInAnyFactionRelation
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 400) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: DiplomacyChatRoomKickCovenantsRequest
Field: CovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: RedrawableItemInventoryInfo
Field: RedrawableItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRedrawableItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: DeathPenaltyDeleteRequest
Field: DeathPenaltyRecordGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FollowerSquadUpdateResponse
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BoundAndErodedInheritanceBatchCraftRequest
Field: MaterialGroupOrderList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatChangeLevelRequest
Field: ShowAllLevelUpEffect
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: BattalionConfirmInvitationResponse
Field: IsApproved
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleEndRewardNotify
Field: IsAnyRewardSentByMail
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: StrongholdBattleCarriageLivingTotemCombatStateSynchronizeNotify
Field: IsInCombatInProgressState
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PointCurrencyContainerOverflowInfo
Field: CuidToOverflowCount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: SkillItemUseParameterInfo
Field: SkillTargetingInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInfo
Field: IsFissioned
Code:
pcVar13 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x259) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar10;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__pu

Opcode: PlayerInfo
Field: IsCollisionFree
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x270) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar10;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar14,puVar3,lVar1,0x17);
  pcVar14[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar14 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInfo
Field: IsQuestCinePlaying
Code:
pcVar13 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x271) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar10;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  pcVar14 = pcVar13;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar14 = local_188;
  }
  std::__ndk1::__put

Opcode: PlayerInfo
Field: IsHeadPieceDisplayed
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x272) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar10;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__p

Opcode: StanceInstallResponse
Field: IsStanceInstallFreeChanceEnabled
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x48) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__p

Opcode: ShopAutoBuySettingUpdateRequest
Field: AutoBuyInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAutoBuyInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CollectionCompleteNotify
Field: IsAnyRewardSentByMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ExpeditionJoinRequestInfo
Field: IsAllowVolunteerJoinApply
Code:
bVar7 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ExpeditionJoinRequestInfo
Field: IsVolunteerJoinApplicationAutomaticApproval
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MountDeboardedInfo
Field: IsImmediateMountDespawn
Code:
bVar8 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatMonsterBookSetNodeLevelResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PaidAttendanceInfosUpdateNotify
Field: PaidAttendanceInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPaidAttendanceInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopShoppingModeCommandResponse
Field: RegisteredGoodsList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: ShopShoppingModeCommandResponse
Field: BuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: ShopShoppingModeCommandResponse
Field: RegisteredGoodsBuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x70));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: ShopShoppingModeCommandResponse
Field: AutoBuySettings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAutoBuyInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0xc0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CovenantOrganizationStatsDetailInfo
Field: Stats
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzCovenantOrganizationStatSourceType,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzCovenantOrganizationStatSourceType,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfoNotify
Field: CovenantBattalionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfoNotify
Field: ContentsActivationFlags
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<bool,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x98));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: TerritoryErosionItemConfigurationInfo
Field: IsPermitted
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: DestroyerInfoUpdateNotify
Field: DestroyerInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBuildingRepairRequest
Field: IsCompleteImmediately
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmSeasonInfo
Field: IsUnderMaintenance
Code:
bVar9 = *(char *)(in_x0 + 0x19) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CrossRealmSeasonInfo
Field: MatchedRealmCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x50));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: CheatRankingBuffApplySwitchRequest
Field: IsApplied
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ShopCashMerchandiseUpdateRealmTotalBuyCountInfoNotify
Field: UpdatedRealmTotalMerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DeathPenaltyRecoverRequest
Field: DeathPenaltyRecordGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: StrongholdBuildingUpgradeRequest
Field: IsCompleteImmediately
Code:
bVar8 = *(char *)(in_x0 + 0x1c) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FavorSummaryInfoQueryResponse
Field: FavorBossInfosByDistrictCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzDistrictFavorBossInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzDistrictFavorBossInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ChatBanNotify
Field: BanInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CachedMessages
Field: Container
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::unordered_map<int,std::__ndk1::unique_ptr<TozNetworkNative::MessageCacheElement,std::__ndk1::default_delete<TozNetworkNative::MessageCacheElement>>,std::__ndk1::hash<int>,std::__ndk1::equal_to<int>,toz::DefaultAllocator<std::__ndk1::pair<int_const,std::__ndk1::unique_ptr<TozNetworkNative::MessageCacheElement,std::__ndk1::default_delete<TozNetworkNative::MessageCacheElement>>>>>,void>
  ::Serialize((unordered_map *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: StrongholdSummonWaveDefenseNpcSummonWaveProgressSynchronizeNotify
Field: CurrentWaveNpcKnockOutProgress
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CrossRealmCovenantQueryResponse
Field: IsJoinApplied
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmCovenantQueryResponse
Field: IsInvited
Code:
pcVar11 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__pu

Opcode: PlayerLimitedCounterInfo
Field: LimitedCountingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzPlayerLimitedCountingKindType,TSharedPtr<FTzLimitedCountingInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzPlayerLimitedCountingKindType,TSharedPtr<FTzLimitedCountingInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: EntityRemoveBulkNotify
Field: EntityGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: CovenantHistoryQueryResponse
Field: CovenantHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CrossRealmCovenantQuerySummaryInfoListResponse
Field: CovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSearchResponse
Field: CovenantSearchInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSearchInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: UniverseAccountRealmAccountInfo
Field: UniverseAccountPlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzUniverseAccountPlayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionExpeditionJoinNotify
Field: AnotherBattalionGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: CovenantBattalionExpeditionJoinNotify
Field: BattalionExpeditionInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: OrganizationStatsInfo
Field: Stats
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzOrganizationStatPrimaryKey,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzOrganizationStatPrimaryKey,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: AccountAffectAttachNotify
Field: AccountAffectInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: IntraRegionPathResultInfo
Field: PathToNearestRoadJunctionToStartLocation
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: IntraRegionPathResultInfo
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: IntraRegionPathResultInfo
Field: PathNotByRoad
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x88));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: IntraRegionPathResultInfo
Field: PathNotByRoadOneShotSpecialMoveIndices
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0xb8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: RegisteredGoodsInfo
Field: IsBound
Code:
bVar7 = *(char *)(in_x0 + 0x38) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RegisteredGoodsInfo
Field: IsStorable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatKillSurroundingCharactersRequest
Field: IsSkipDyingAndFinishable
Code:
bVar9 = *(char *)(in_x0 + 0xd) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantGiftSynchronizeNotify
Field: AddedGiftBoxInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantGiftBoxInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantGiftSynchronizeNotify
Field: RemovedGiftBoxInfos
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantGiftSynchronizeNotify
Field: UpdateGiftBoxInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantGiftBoxInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdInitialDataNotify
Field: BuildingSubscriptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBuildingSubscriptionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantTradeSalesListQueryResponse
Field: GoodsSalesInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeGoodsSalesInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketTransactionInfo
Field: ItemAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryStrongholdOccupationCovenantInfo
Field: OccupyingCovenantInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar10 >> 1);
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryStrongholdOccupationCovenantInfo
Field: IsOccupyAltarPhaseInProgress
Code:
bVar8 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: AnniversaryStrongholdOccupationCovenantInfo
Field: AttackGroupInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantDisplayInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__n

Opcode: CheatClearFollowerResponse
Field: CollectionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TerritoryErosionInitialDataNotify
Field: ErosionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<TSharedPtr<FTzErosionInfo,(ESPMode)1>,DefaultKeyFuncs<TSharedPtr<FTzErosionInfo,(ESPMode)1>,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferCheckInfoResponse
Field: RealmTransferInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountRealmTransferCheckInfoResponse
Field: PlayerCheckInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantQueryResponse
Field: IsJoinApplied
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantQueryResponse
Field: IsInvited
Code:
pcVar11 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__pu

Opcode: StrongholdBattleCovenantBattalionInfo
Field: StrategicObjectiveInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzStrategicObjectiveInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzStrategicObjectiveInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x198));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleCovenantBattalionInfo
Field: NotJoinedMemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzBattalionMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzBattalionMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1e8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleCovenantBattalionInfo
Field: MemberStatisticsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberStatisticsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberStatisticsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x238));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: NavMeshTileInfo
Field: LayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileLayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantResearchResetNotify
Field: CovenantResearchInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCovenantResearchInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCovenantResearchInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerGroupAuthenticateInfo
Field: __base__
Code:


Opcode: ServerGroupAuthenticateInfo
Field: Ip
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: DestroyedGearInfoByEnhancement
Field: IsBound
Code:
bVar8 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: DestroyedGearInfoByEnhancement
Field: IsStorable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x22) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatDeregisterCheatEnabledPlayerNameResponse
Field: CheatEnabledPlayerNames
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FString,DefaultKeyFuncs<FString,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketSellSettleResponse
Field: IsSuccessByGoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatMonsterBookSetAnalysisInfoResponse
Field: NodeStateInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatMonsterBookSetAnalysisInfoResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailFollowerGatheringWorkLayoutInfo
Field: GainedRewardItemIndexWithCount
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DeathPenaltyLastAutoRecoveryNotify
Field: DeathPenaltyAutoRecoveryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerSummaryInfo
Field: IsInServerDrivenPlay
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x100) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar9;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: PlayerSummaryInfo
Field: PlayerHarmfulTextOnChatViolationInfo
Code:
if (*(long **)(in_x0 + 0x108) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x108) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerSummaryInfo
Field: IsHeadPieceDisplayed
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x128) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar9;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: FollowerKillingNotify
Field: LootedItemIndexWithCount
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketGoodsInfoQueryResponse
Field: MarketGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountWarehouseItemStoreRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingUpdateBuildingAccessPermissionsRequest
Field: BuildingAccessPermissionKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzBuildingAccessPermissionKindType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzBuildingAccessPermissionKindType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerMovePathInfoRequest
Field: FollowerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: StrongholdBattleCovenantBattalionMemberDisplayInfo
Field: IsHeadPieceDisplayed
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantGiftReceiveRequest
Field: ReceiveGiftGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantRecommendBuildingWorkRequest
Field: IsRecommended
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FollowerDispatchReservationInfo
Field: BuildingWorkObjectiveInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar11 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar11 = (uint)(byte)local_198;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  uVar3 = (ulong)(uVar11 >> 1);
  pcVar10 = pcVar12;
  if ((uVar11 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: FollowerDispatchReservationInfo
Field: IsBuildingWorkRecommended
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x40) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: PartyConfirmInvitationResponse
Field: IsApproved
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemExpireNotify
Field: ExpiredItemCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantResearchRequest
Field: IsCompleteImmediately
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RoadJunctionDetailedInfo
Field: RoadLinks
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<FTzRoadLinkInfo,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerExperiencePointsItemConsumeRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayResupplyingStateInfo
Field: IsAutoResupplying
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ServerDrivenPlayResupplyingStateInfo
Field: IsResupplyingWithTeleport
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillResponse
Field: IsExecutingBegun
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: WorldMapPvpBattlePublishNotify
Field: PvpBattleInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BattalionCovenantGrantedSkillNotify
Field: CovenantGrantedSkillCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CampaignStartOptionInfo
Field: IsVolunteerJoinApplicationAutomaticApproval
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CampaignStartOptionInfo
Field: IsNotExposeToBattalionList
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CampaignStartOptionInfo
Field: IsBattalionAutoInviteCovenantMembers
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatResetCashShopMerchandiseBuyLimitCountResponse
Field: UpdatedMerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBuildingWorkInitialDataNotify
Field: BuildingWorkInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: RootSkillCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: SkillCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: PlayerSkillSlotSetInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStanceType,TSharedPtr<FTzPlayerSkillSlotSetInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStanceType,TSharedPtr<FTzPlayerSkillSlotSetInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: PlayerSkillCooldownExpireDateTimeRangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzDateTimeRangeInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzDateTimeRangeInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: InstalledArquiruneInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<FTzCuid,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,bool,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<FTzCuid,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,bool,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x148));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: SpellstoneSlotPageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSpellstoneSlotPageInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSpellstoneSlotPageInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x198));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: ReplacementSkillCuidsByRootSkillCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1e8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatGetCheatEnabledPlayerNamesResponse
Field: CheatEnabledPlayerNames
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FString,DefaultKeyFuncs<FString,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopBuyResponse
Field: BuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopBuyResponse
Field: RegisteredGoodsBuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x80));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopBuyResponse
Field: RegisterShopBuyFailItems
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xd0));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopBuyResponse
Field: MostExpensiveGoodsItemIndex
Code:
if (*(long **)(in_x0 + 0x120) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x120) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmRankingQueryResponse
Field: RankingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRankingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MissionInfo
Field: RewardAcquiredDateTimes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,TozSerializableMessageLibNative::Nullable<FDateTime>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,TozSerializableMessageLibNative::Nullable<FDateTime>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ProtocolCheckResponse
Field: TozNetwork.Handshake.ProtocolChecker.ProtocolCheckResponse
Code:


Opcode: CheatResetContentsUnlockResponse
Field: UnusedContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzContentsUnlockKindType,DefaultKeyFuncs<ETzContentsUnlockKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdSummaryInitialDataNotify
Field: BuildingSubscriptionSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBuildingSubscriptionSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x70));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: MultipleHandshakeMessage
Field: HandshakeMessages
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::unique_ptr<TozSerializableMessageLibNative::IMessage,std::__ndk1::default_delete<TozSerializableMessageLibNative::IMessage>>,toz::DefaultAllocator<std::__ndk1::unique_ptr<TozSerializableMessageLibNative::IMessage,std::__ndk1::default_delete<TozSerializableMessageLibNative::IMessage>>>>,void>
  ::Serialize((vector *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CovenantGoodsRegistrationRegisteredGoodsInfoUpdateDataNotify
Field: RegisteredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountPresentCheckResponse
Field: PlayersInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,TTuple<ETzClasseType,int>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,TTuple<ETzClasseType,int>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCampInitialInfoNotify
Field: BuildingWorkInfoByWorkplaceCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatStartCovenantCampaignRequest
Field: IsAllowVolunteerJoinApply
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatStartCovenantCampaignRequest
Field: IsVolunteerJoinApplicationAutomaticApproval
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: MailFollowerDeathLayoutInfo
Field: LootedRewardItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: CheatUnlockAllContentsResponse
Field: UnusedContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzContentsUnlockKindType,DefaultKeyFuncs<ETzContentsUnlockKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcBossBattleRewardNotify
Field: ReceivedRewardInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzReceivedRewardInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FavoriteCraftRecipeRegisterResponse
Field: IsRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatTestGearEnhancementResponse
Field: SuccessCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: VolunteerParticipationInfo
Field: ParticipationCountInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: FavorMissionInfo
Field: HuntingSiteCuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x48));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FavorMissionInfo
Field: TargetCuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantTradeDealRecordQueryResponse
Field: GoodsDealInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeGoodsDealInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DiplomacyChatRoomRecordsInitializationInfo
Field: DiplomacyChatCovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzDiplomacyChatCovenantSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzDiplomacyChatCovenantSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x70));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: AchievementInfo
Field: MissionProgressCounts
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__n

Opcode: AchievementInfo
Field: IsRewarded
Code:
bVar8 = *(char *)(in_x0 + 0x38) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_c

Opcode: HarmfulTextOnChatViolationUpdateNotify
Field: PlayerHarmfulTextOnChatViolationInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantAssetMigrationInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantAssetMigrationInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WorldMapPvpBattleMergeNotify
Field: PvpBattleInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmIntegrationBattleScoreInitializeDataNotify
Field: ScoreInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzRealmIntegrationBattleRealmScoreInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzRealmIntegrationBattleRealmScoreInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantJoinApplicationInfo
Field: IsConnected
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryRewardAcquireNotify
Field: AnniversaryPointsByAnniversaryCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PvpBattleInfo
Field: PvpBattleKillDeathInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPvpBattleKillDeathInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: PvpBattleInfo
Field: PvpBattleKillDeathCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzPvpBattleCovenantId,TMap<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattleKillDeathCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattleKillDeathCountInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattleCovenantId,TMap<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattleKillDeathCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattleKillDeathCountInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x48));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: PvpBattleInfo
Field: PvpBattlePlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattlePlayerInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattlePlayerInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x98));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: PvpBattleInfo
Field: PvpBattleCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzPvpBattleCovenantId,TSharedPtr<FTzPvpBattleCovenantInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattleCovenantId,TSharedPtr<FTzPvpBattleCovenantInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xe8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CollectionCategoryActiveNotify
Field: CollectionCategoryCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BattalionChangePurposeNotify
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillCasterAffectInfo
Field: SkillStatsAffectInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ShopAutoSellSettingUpdateRequest
Field: AutoSellSettings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionQuerySummaryInfoListResponse
Field: SummaryInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBattalionSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSetInvulnerableRequest
Field: IsInvulnerable
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerLocationMonitoringRegisterNotify
Field: PlayerLocationMonitoringInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemAddInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationRealmInfoNotify
Field: RealmIntegrationRealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DistrictFavorBossInfo
Field: IsFavorBossActivated
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatRealmAccountRealmTransferBlockRequest
Field: ApplyAll
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RealmAccountOptionInfo
Field: PushNotificationOptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzPushNotificationOptionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzPushNotificationOptionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CovenantWorldMapMarkerRemoveAllNotify
Field: RemovedGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: RsaPublicKeyNotify
Field: PublicKeyXmlString
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar8);
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk

Opcode: MarketGoodsDeletedNotify
Field: GoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldMigrationReadyRequest
Field: IsInstanceField
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FieldMigrationReadyRequest
Field: IsTeleport
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FieldMigrationReadyRequest
Field: SeamlessNpcGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: CheatSetExperiencePointsBlockedResponse
Field: IsExperiencePointsBlocked
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleAttackEndDateTimeChangeNotify
Field: IsAffectedFromLivingTotemSkill
Code:
bVar9 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerMarketInfo
Field: WaitingRegistrationOrForSaleGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketInfo
Field: SoldOrExpiredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketInfo
Field: TransactionHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketTransactionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketInfo
Field: FavoriteItemInfosByMarketKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzMarketKindType,TArray<TSharedPtr<FTzMarketFavoriteItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzMarketKindType,TArray<TSharedPtr<FTzMarketFavoriteItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketInfo
Field: PlayerMarketTransactionProcessInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerMarketTransactionProcessInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerMarketTransactionProcessInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x108));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GameOptionModifyRequest
Field: GameOptionInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DestroyerInfosInitializeDataNotify
Field: DestroyerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzDestroyerInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzDestroyerInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillStageFlowNotify
Field: SubTargetingLocations_cm
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SkillStageFlowNotify
Field: AffectExemptLocations_cm
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector2D,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SkillStageFlowNotify
Field: SkillStageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSkillStageInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x48));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationBattleRealmScoreInfo
Field: Scores
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzRealmIntegrationBattleScoreKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzRealmIntegrationBattleScoreKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TerritoryInfo
Field: BuildingLevels
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuildingKindType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuildingKindType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x88));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: TerritoryInfo
Field: StrongholdBuildingAccessPermissionKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuildingKindType,ETzBuildingAccessPermissionKindType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuildingKindType,ETzBuildingAccessPermissionKindType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x128));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: TerritoryInfo
Field: HavenEventInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<FTzCuid,TSharedPtr<FTzHavenEventInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzHavenEventInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<FTzCuid,TSharedPtr<FTzHavenEventInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzHavenEventInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x180));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: EntitySpawnNotify
Field: EntityInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemInfo
Field: IsStorable
Code:
lVar2 = 4;
  puVar4 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar2 = 5;
    puVar4 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar4,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemInfo
Field: IsLocked
Code:
lVar2 = 4;
  puVar4 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x40) == '\0') {
    lVar2 = 5;
    puVar4 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar11,puVar4,lVar2,0x17);
  pcVar11[lVar2] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookAnalyzeResponse
Field: AnalyzedStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookAnalyzeResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ClasseChangeItemUseParameterInfo
Field: BeforeGearGuidToAfterGearCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ClasseChangeItemUseParameterInfo
Field: BeforeArquiruneCuidToAfterArquiruneCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantQueryRecommendCovenantSummaryInfoListResponse
Field: CovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BuildingBaseBuildingExistenceSynchronizeNotify
Field: IsBaseBuildingExist
Code:
bVar8 = *(char *)(in_x0 + 0x10) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantSynchronizeRecommendedResourceKindNotify
Field: RecommendedResourceKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzResourceKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WarehouseInfo
Field: PointCurrencyContainerInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CashShopMerchandiseInfo
Field: IsAutoUsing
Code:
bVar9 = *(char *)(in_x0 + 0x61) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CashShopSubCategoryInfo
Field: IsShowDateTime
Code:
bVar7 = *(char *)(in_x0 + 0x50) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CashShopSubCategoryInfo
Field: IsHideSubCategory
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x78) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementSuccessNotify
Field: DisplaySystemMessage
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementSuccessNotify
Field: DisplayChatMessage
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x31) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar8 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__put

Opcode: ServerDrivenPlayRewardInfo
Field: GainedCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRewardInfo
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ProtocolConstants
Field: TozNetwork.Protocol.ProtocolConstants
Code:


Opcode: CovenantBanishMemberNotify
Field: UpdatePlayerLastCovenantWithdrawalDateTime
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerLoginRequest
Field: IsFastLogin
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: BoundAndErodedInheritanceBatchCraftResponse
Field: CraftResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCraftResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerLoginResponse
Field: CanCheatCommand
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerLoginResponse
Field: BanInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__p

Opcode: PotionAutoUsageOptionInfo
Field: IsAutoUse
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerCovenantWatchSynchronizeNotify
Field: CovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CashShopRefundableMerchandiseStorageBoxUpdateInfo
Field: AddSlotInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCashShopRefundableMerchandiseStorageBoxSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CashShopRefundableMerchandiseStorageBoxUpdateInfo
Field: DeleteSlotGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FavorQueryResponse
Field: FavorList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavorInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: FavorQueryResponse
Field: FavorMissionList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavorMissionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: FavorQueryResponse
Field: IsFavorBossActivated
Code:
bVar7 = *(char *)(in_x0 + 0x48) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FavorQueryResponse
Field: HasAcceptedFavorBossToday
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x49) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SpawnLayerActivateNotify
Field: IsPermanentSpawnLayer
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ErLoginServerSessionInitializeInfo
Field: RealmIntegrationRealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x60));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: CovenantGiftReceiveRewardInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantGiftReceiveRewardInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantTradeSalesRegisterRequest
Field: ItemIndexWithCount
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: VersionCheckResult
Field: Code
Code:
auVar8 = Hello::to_string(*(VersionCheckResultCode *)(in_x0 + 8));
  TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize(auVar8._0_8_,auVar8._8_8_);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: VersionCheckResult
Field: AdditionalData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x10),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: MarketSellReregisterRequest
Field: RegistrationFeeCurrencyInfoByGoodsGuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCuidAndCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCuidAndCountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantWorldMapMarkerInitialDataNotify
Field: WorldMapMarkerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzWorldMapMarkerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleBuildingCombatStateSynchronizeNotify
Field: IsInCombatInProgressState
Code:
bVar9 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CombatLootOptionInfo
Field: IncludeBuffItem
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CombatLootOptionInfo
Field: DefaultDisplayDropItemName
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xf) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: SkillEndNotify
Field: IsAllStagesComplete
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x24) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookNodeAcquireResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x50));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleCovenantBattalionStrategicObjectiveSetNotify
Field: StrategicObjectiveTargetGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SkillAutoUseManaPointsRestrictOptionInfo
Field: IsForceUseSkillsInPvp
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: SkillAutoUseManaPointsRestrictOptionInfo
Field: IsForceUseSelfBuffSkills
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionInfo
Field: IsDisplayModeAutoSelect
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar2,0x17);
  pcVar12[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionInfo
Field: DetailInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzNameTagHealthBarDisplayModeType,TSharedPtr<FTzNameTagHealthBarDisplayOptionDetailInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzNameTagHealthBarDisplayModeType,TSharedPtr<FTzNameTagHealthBarDisplayOptionDetailInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: NameTagHealthBarDisplayOptionInfo
Field: IsAllNpcNamesDisplayed
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x61) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar2,0x17);
  pcVar12[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: NameTagHealthBarDisplayOptionInfo
Field: IsDisplayedFissionStatusFriendlyOrBetter
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x62) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar2,0x17);
  pcVar12[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: MountDeboardingInfo
Field: IsImmediateMountDespawn
Code:
bVar8 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantTradeGoodsListQueryResponse
Field: GoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcOccupationCovenantInfoUpdateNotify
Field: NxLogBaseParameterInfo
Code:
if (*(long **)(in_x0 + 0x70) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x70) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantWarehouseSummaryInitialDataNotify
Field: ItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCuidAndCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCreateCovenantMemberRoleNotify
Field: CovenantMemberRoleInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RedrawableItemInventoryUpdateInfo
Field: AddedRedrawableItemInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRedrawableItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RedrawableItemInventoryUpdateInfo
Field: RemovedRedrawableItemGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: ProtocolCheckRequest
Field: Hash
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar8);
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk

Opcode: PartyConfirmRecommendationForInviteeResponse
Field: IsApproved
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x58) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatDistrictBlockRequest
Field: IsBlocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemTransmutationResultInfo
Field: IsSuccess
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ItemTransmutationResultInfo
Field: FailRewardPointCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: MarketGoodsSummaryInfoQueryRequest
Field: MarketGoodsSummaryQueryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MailCovenantWeeklyRubyDonationLayoutInfo
Field: CovenantWeeklyRubyDonationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantWeeklyRubyDonationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GameNotificationOptionInfo
Field: DistrictBossSpawnNotifyDisplayOption
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: GameNotificationOptionInfo
Field: ZonePointBossSpawnNotifyDisplayOption
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk1::__put

Opcode: InstanceEventActionCompleteNotify
Field: IsSuccess
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryAchievementUpdateNotify
Field: AnniversaryAchievementInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: NxLogBaseParameterInfo
Field: IsByNxCmd
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: BuffAttachNotify
Field: BuffAffectInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBuffAffectInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: KickPreexistingSessionConfirmResponse
Field: KickPreexistingSession
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantSettleAccountInfo
Field: ResourceHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FDateTime,TSharedPtr<FTzResourceHistoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FDateTime,TSharedPtr<FTzResourceHistoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: TutorialBeginFirstOneFailResponse
Field: ResultCodesByTutorialCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzResultCodeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzResultCodeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatRankingBuffApplySwitchResponse
Field: IsApplied
Code:
bVar8 = *(char *)(in_x0 + 0xc) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MailServerDrivenPlayLayoutInfo
Field: GainedCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailServerDrivenPlayLayoutInfo
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x88));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryQueryResponse
Field: AnniversaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAnniversaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryQueryResponse
Field: AnniversaryPointAndRankingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryPointAndRankingInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryPointAndRankingInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryQueryResponse
Field: AnniversaryAchievementPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x70));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantParticipationInfoQueryResponse
Field: CovenantParticipationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantParticipationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MovePathInfo
Field: RoadJunctionIds
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: MovePathInfo
Field: PathToFirstRoadJunction
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: MovePathInfo
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: ContentsActivationUpdateNotify
Field: ContentsActivationFlags
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<bool,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PushNotificationOptionInfo
Field: IsEnabled
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: PushNotificationOptionInfo
Field: IsNotifiedEvenWhenConnected
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__pu

Opcode: ChatBattalionRequest
Field: IsNotice
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: GracefulShutdownMessage
Field: TozNetwork.ServerGroup.GracefulShutdownMessage
Code:


Opcode: MonsterBookNodeAcquireRequest
Field: IsAcquireByItem
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatCharacterPrivateStatsInfoResponse
Field: CharacterPrivateStatsInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SchemaTable
Field: RegDate
Code:
TozSerializableMessageLibNative::JsonSerializer<TozSerializableMessageLibNative::DateTime,void>::
  Serialize((DateTime *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: SchemaTable
Field: FileName
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x20),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: SchemaTable
Field: TableName
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x38),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: SchemaTable
Field: Columns
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::SchemaColumn,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::SchemaColumn>>,toz::DefaultAllocator<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::SchemaColumn,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::SchemaColumn>>>>,void>
  ::Serialize((vector *)(in_x0 + 0x50));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: FavoriteStatKindChangeResponse
Field: IsRegistered
Code:
bVar9 = *(char *)(in_x0 + 0xd) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ClientDrivenQuestMissionCompleteNotify
Field: TargetGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: MountUpdateSkillSlotInfoRequest
Field: IsUsedForContinuousCombat
Code:
bVar9 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: GearMultipleEnhanceRequest
Field: GearGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: GearMultipleEnhanceRequest
Field: MaterialItemGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SpawnLayerAlreadyActivatedNotify
Field: IsPermanentSpawnLayer
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SpawnLayerAlreadyActivatedNotify
Field: SpawnLayerCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__

Opcode: CharacterStateSynchronizeNotify
Field: AffectSourceInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar11 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar11 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar11 >> 1);
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((uVar11 & 1) != 0) {
    uVar1 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleJoinedCovenantHistoryInfo
Field: IsDismissed
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x48) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantBattalionPublicSummaryInfo
Field: ExpeditionSummaryInfo
Code:
if (*(long **)(in_x0 + 0x58) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x58) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DeathPenaltyRecordInfoRemoveNotify
Field: DeathPenaltyRecordGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: KickCovenantsFromDiplomacyChatRoomRequest
Field: CovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SeekHidingAttackTargetStateNotify
Field: IsSeekHidingAttackTargetState
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleAttackGroupInfo
Field: SiegeWeaponCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleAttackGroupInfo
Field: StrongholdBattleAttackSiegeWeaponSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,TSharedPtr<FTzStrongholdBattleAttackSiegeWeaponSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,TSharedPtr<FTzStrongholdBattleAttackSiegeWeaponSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x108));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionChatInfo
Field: IsNotice
Code:
bVar8 = *(char *)(in_x0 + 0xb8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantCurrencyDonationResponse
Field: IsAnyRewardSentByMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x40) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SessionKeyAuthenticate
Field: SessionKey
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: PvpRecordInfo
Field: CharacterInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPvpRecordCharacterInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountInfo
Field: PlayedCutSceneCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x48));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCampInfoListResponse
Field: CovenantCampInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantCampInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionCreateNotify
Field: CovenantBattalionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatPlayerRealmTransferBlockRequest
Field: ApplyAll
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatPlayerRealmTransferBlockRequest
Field: Block
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountPresentApplicationCheckInfoResponse
Field: IsLoginedWithSafeDevice
Code:
bVar7 = *(char *)(in_x0 + 0xc) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RealmAccountPresentApplicationCheckInfoResponse
Field: IsInVillage
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xd) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountPresentApplicationCheckInfoResponse
Field: PlayerCheckInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerRealmAccountPresentApplicationCheckInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerRealmAccountPresentApplicationCheckInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CheatCreateAndEquipGearSetResponse
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRejectInvitationsFailResponse
Field: RejectFailedCovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: LZ4CompressHandshakeResult
Field: __base__
Code:


Opcode: LZ4CompressHandshakeResult
Field: TozLZ4.Handshake.LZ4CompressHandshakeResult
Code:


Opcode: BattalionCheckReadyResultNotify
Field: CheckReadyResult
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBattalionMemberReadyKindType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBattalionMemberReadyKindType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacyConfirmReinforcementInvitationRequest
Field: IsApproved
Code:
bVar8 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BasicAchievementInitializeDataNotify
Field: BasicAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBasicOrGrowthGuideAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CraftResultInfo
Field: ItemInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdWorldMapGeneralShopInfo
Field: RegisteredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacyReinforcementInvitationRejectNotify
Field: IsCallByExpired
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StackableItemMultipleUseRequest
Field: ParameterInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: FollowerSquadSlotExpandResponse
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearAdditionalInfo
Field: IsEroded
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: GearAdditionalInfo
Field: GearEnchantSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnchantSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: GearAdditionalInfo
Field: GearSubOptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSubOptionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: GearAdditionalInfo
Field: SpecialGearEnhancementUseInfoByCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSpecialGearEnhancementUseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSpecialGearEnhancementUseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: GearAdditionalInfo
Field: ErodedCountByEnhancementGrade
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x80));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: CovenantTradeSalesManageRequest
Field: GoodsGuidWithItemCuidInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<TSharedPtr<FTzCovenantTradeGoodsGuidWithItemCuidInfo,(ESPMode)1>,DefaultKeyFuncs<TSharedPtr<FTzCovenantTradeGoodsGuidWithItemCuidInfo,(ESPMode)1>,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: RankingSourceInfo
Field: AdditionalInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantQueryInvitedCovenantSummaryInfoListResponse
Field: CovenantSummaryInfoAndInviteDateTimes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCurrencyInitialDataNotify
Field: CovenantTaxAcquireInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTaxAcquireInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatToggleShowQuestDebugResponse
Field: IsEnabled
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BossSpawnInfoRemovedNotify
Field: BossSpawnInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ErTozMessage
Field: __base__
Code:


Opcode: CheatTestRewardResponse
Field: RewardItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRewardItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ProtocolCheckHandshakeResult
Field: ClientHash
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x10),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: TutorialBeginFirstOneRequest
Field: TutorialCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantAcquireCovenantMemberRoleRewardResponse
Field: IsAnyRewardSentByMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRecommendResourceKindRequest
Field: RecommendedResourceKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzResourceKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SeasonPassLevelRewardAllResponse
Field: RewardedLevels
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SeasonPassInfo
Field: IsPaidRewardUnlocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: SeasonPassInfo
Field: IsPlusRewardUnlocked
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x31) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: SeasonPassInfo
Field: RewardedLevels
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: FindPathResponse
Field: PathToNearestRoadJunctionToStartLocation
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FindPathResponse
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FindPathResponse
Field: PathNotByRoad
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FindPathResponse
Field: PathNotByRoadOneShotSpecialMoveIndices
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: EquipmentPresetInfo
Field: GearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerRealmTransferCheckInfo
Field: IsMarketCheckNeeded
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar8;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put

Opcode: PlayerRealmTransferCheckInfo
Field: HasReceivableAttachmentsMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar8;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: RPCReturnMessage
Field: ReturnValue
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: GoodsBuyCountsInfo
Field: GoodsBuyCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TMap<FTzCuid,TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TMap<FTzCuid,TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GoodsBuyCountsInfo
Field: RegisteredGoodsBuyCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TMap<FTzRegisteredGoodsBuyCountKey,TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzRegisteredGoodsBuyCountKey,TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TMap<FTzRegisteredGoodsBuyCountKey,TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzRegisteredGoodsBuyCountKey,TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantGoodsRegistrationInitialDataNotify
Field: RegisteredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: GearEnchantResponse
Field: GearEnchantSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnchantSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CraftResponse
Field: CraftResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCraftResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCampaignTicketInfoNotify
Field: CampaignTicketInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCampaignTicketInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCampaignTicketInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMissionRewardResponse
Field: MissionRewardInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMissionRewardInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: TerritoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzTerritoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: ZoneInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzZoneInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: BossSpawnInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzBossSpawnInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzBossSpawnInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: OccupiableNpcBossSpawnInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzOccupiableNpcBossSpawnInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzOccupiableNpcBossSpawnInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: OccupiableNpcInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzOccupiableNpcInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 200));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerItemUseFailResponse
Field: ParameterInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: TozTcpWelcome
Field: EngineData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozTcpWelcome
Field: UserData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearSlotPresetUnequipNotify
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerBattalionOptionInfo
Field: PurposeTexts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,FString,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,FString,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseResetMerchandiseBuyCountInfoNotify
Field: UpdatedMerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: VersionNameInfo
Field: ProjectName
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x20),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: VersionNameInfo
Field: BranchName
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x38),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: VersionNameInfo
Field: LastToken
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x50),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: SerializedMessageCacheElement
Field: message
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CombinedInventoryInfo
Field: InventoryInfosByInventoryKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzUserInventoryKindType,TSharedPtr<FTzInventoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzUserInventoryKindType,TSharedPtr<FTzInventoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CombinedInventoryInfo
Field: RedrawableItemInventoryInfosByItemCategory
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzItemCategoryType,TSharedPtr<FTzRedrawableItemInventoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemCategoryType,TSharedPtr<FTzRedrawableItemInventoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DeathPenaltyFreeRecoveryInfoUpdateNotify
Field: DeathPenaltyFreeRecoveryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CombinedInventoryUpdateInfo
Field: InventoryUpdateInfosByInventoryKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzUserInventoryKindType,TSharedPtr<FTzInventoryUpdateInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzUserInventoryKindType,TSharedPtr<FTzInventoryUpdateInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CombinedInventoryUpdateInfo
Field: RedrawableInventoryUpdateInfosByItemCategory
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzItemCategoryType,TSharedPtr<FTzRedrawableItemInventoryUpdateInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemCategoryType,TSharedPtr<FTzRedrawableItemInventoryUpdateInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BuildingInfo
Field: IsBaseBuildingExist
Code:
bVar8 = *(char *)(in_x0 + 0x1d4) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BuildingInfo
Field: IsBlocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1d5) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: XorHandshake
Field: xorStaticKey
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: XorHandshake
Field: PublicKeyXmlString
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x20),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: XorHandshake
Field: Type
Code:
auVar8 = XorEncryptor::to_string(*(XorHandshakeMessageType *)(in_x0 + 0x38));
  TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize(auVar8._0_8_,auVar8._8_8_);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: StrongholdBattleSiegeWeaponLocationInfoNotify
Field: StrongholdBattleSiegeWeaponLocationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleSiegeWeaponLocationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionConfirmInvitationRequest
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RedrawableItemAdditionalInfo
Field: ExcludedItemCuidsWhenRedrawing
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FollowerSquadUpdateNotify
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantTradeSalesManageResponse
Field: GoodsGuidsAndResultCodes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,ETzResultCodeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,ETzResultCodeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: PlayerPvpInfo
Field: AlertPlayers
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: PlayerPvpInfo
Field: CrossRealmAlertPlayers
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FTzCrossRealmAlertPlayerRegisterInfo,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FTzCrossRealmAlertPlayerRegisterInfo,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: RealmAccountRegionContentPlayTimeInfo
Field: RegionContentPlayTimeInfo_sec
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemBoundAndErodedSelector
Field: IsStorable
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ItemBoundAndErodedSelector
Field: IsEroded
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: HavenEventApplyNotify
Field: HavenEventInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketGoodsExpireDateTimeUpdateNotify
Field: GoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ShopSellRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: QueryPlayerBattalionJoinableResponse
Field: IsJoinableBattalion
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FavorInfo
Field: FavorRandomRewardCuidCandidates
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: ErFrontServerSessionWaitingQueueNotify
Field: RealmHasSpaceAvailable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: AlertPlayerQueryResponse
Field: AlertPlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAlertPlayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AlertPlayerQueryResponse
Field: CrossRealmAlertPlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAlertPlayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CrossRealmSeasonInfoNotify
Field: CrossRealmSeasonInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzRegionContentKindType,TSharedPtr<FTzCrossRealmSeasonInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzRegionContentKindType,TSharedPtr<FTzCrossRealmSeasonInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSupportInfoChangeNotify
Field: HasCovenantSupportableFollower
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantAddJoinApplicationsNotify
Field: CovenantJoinApplicationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantJoinApplicationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatAddOnScreenDebugMessageNotify
Field: NewerOnTop
Code:
bVar8 = *(char *)(in_x0 + 0x24) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PointCurrencyContainerUpdateInfo
Field: CuidToAmountDelta
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PointCurrencyContainerUpdateInfo
Field: CuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayInfo
Field: RewardInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayInfo
Field: CurrentStateInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: OtherPlayerLootNotify
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar3 = (ulong)((byte)local_198 >> 1);
  pcVar8 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk

Opcode: OtherPlayerLootNotify
Field: IsErosionInstallerReward
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x48) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSetRealmAccountPresentRegisterBlockRequest
Field: Block
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BattalionCovenantDiplomacyNotify
Field: AllianceCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CraftQueryResponse
Field: CraftCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCraftCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCraftCountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DistrictFavorDatabaseInfo
Field: CurrentAvailableFavorDatabaseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzFavorDatabaseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzFavorDatabaseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryStrongholdOccupationRecordInfo
Field: AnniversaryStrongholdOccupationCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAnniversaryStrongholdOccupationCovenantInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCancelInvitationFailResponse
Field: CancelFailedPlayerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantQuerySummaryInfoListResponse
Field: CovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatTeleportToNpcRequest
Field: IsRegularOnly
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SchemaDataInfo
Field: SchemaDataTables
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::SchemaDataTable,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::SchemaDataTable>>,toz::DefaultAllocator<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::SchemaDataTable,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::SchemaDataTable>>>>,void>
  ::Serialize((vector *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcOccupationScoreUpdateDataNotify
Field: NpcOccupationScoreCovenantViewInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantViewInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantViewInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RoadPathInfo
Field: IsOneShotSpecialMove
Code:
bVar8 = *(char *)(in_x0 + 0x34) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: BaseInfo
Field: Token
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar8);
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk

Opcode: PvpRecordQueryResponse
Field: PvpRecordInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPvpRecordInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPvpRecordInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: ShopBuyRequest
Field: RegisteredGoodsGuidToCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ShopBuyRequest
Field: SystemGoodsCuidToCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ShopBuyRequest
Field: MostExpensiveGoodsItemIndex
Code:
if (*(long **)(in_x0 + 0xb0) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0xb0) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: DatatoolHandshakeRequest
Field: DataHeaders
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::DataHeader,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::DataHeader>>,toz::DefaultAllocator<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::DataHeader,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::DataHeader>>>>,void>
  ::Serialize((vector *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleInitialDataNotify
Field: StrongholdBattleSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzStrongholdBattleSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzStrongholdBattleSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErServerAuthenticateInfo
Field: __base__
Code:


Opcode: CovenantRubyShopMerchandiseInfoNotify
Field: MerchandiseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantRubyShopMerchandiseInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: HeadPieceDisplayOptionModifyRequest
Field: IsHeadPieceDisplayed
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CombatTargetOptionInfo
Field: KeepContinuousCombatAndAutoMoveOnManualMove
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xd) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CombatTargetOptionInfo
Field: KeepAutoAttackOnMoveToLocation
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xe) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CombatTargetOptionInfo
Field: KeepAutoAttackOnMoveToDirection
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xf) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CombatTargetOptionInfo
Field: AutoAttackTargetOnKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzAutoAttackTargetKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__n

Opcode: CombatTargetOptionInfo
Field: AutoCounterAttackNpc
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CombatTargetOptionInfo
Field: AutoAttackTargetOnNpcGrades
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzAutoAttackTargetNpcGradeType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x28));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__n

Opcode: CombatTargetOptionInfo
Field: CancelAttackOrFocusTargetButtonVisible
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: CombatTargetOptionInfo
Field: RemoveTargetingByContinuousCombatOff
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x3a) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: CombatTargetOptionInfo
Field: FocusTargetSelfButtonVisible
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x3c) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CombatTargetOptionInfo
Field: IsReservedSkillCancellable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x3d) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CombatTargetOptionInfo
Field: StopContinuousCombatWhenKilledBoss
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x3e) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: ItemIndex
Field: IsStorable
Code:
pcVar11 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar9;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ItemIndex
Field: IsEroded
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar9;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleDeclarePrerequisitesQueryResponse
Field: HavenCuidToTotalTravelDistances
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,float,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,float,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferCheckInfoResponse
Field: RealmTransferInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRealmTransferCheckInfoResponse
Field: PlayerCheckInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferCheckInfoResponse
Field: IsAppliedRealmAccountPresentToRealm
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x88) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerMissionRewardRequest
Field: MissionCuidAndSteps
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerDeathInfo
Field: KillingInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: FollowerDeathInfo
Field: LootedItemIndexWithCount
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: InfoAuthenticateComplete
Field: Success
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: InfoAuthenticateComplete
Field: SessionKey
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x10),(basic_string *)pcVar9);
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: InfoAuthenticateComplete
Field: SessionInitializeInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar10 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar10 = local_198 & 0xff;
  }
  uVar3 = local_190;
  pcVar11 = local_188;
  if ((uVar10 & 1) == 0) {
    uVar3 = uVar10 >> 1;
    pcVar11 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: InfoAuthenticateComplete
Field: FailureReasonData
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar10 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar10 = local_198 & 0xff;
  }
  uVar3 = local_190;
  pcVar11 = local_188;
  if ((uVar10 & 1) == 0) {
    uVar3 = uVar10 >> 1;
    pcVar11 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: NgsNotify
Field: Data
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<unsigned_char,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AutoSellSettingsInfo
Field: Settings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: NpcOccupationInfo
Field: NpcCovenantOccupationInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: NpcOccupationInfo
Field: NpcOccupationScoreCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QueryChatRecordsResponse
Field: ChatMessageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatMessageInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatKillFocusedCharacterRequest
Field: IsSkipDyingAndFinishable
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatSetIgnoreCovenantMarketUsableJoinElapsedTimeResponse
Field: IgnoreCovenantMarketUsableJoinElapsedTime
Code:
bVar8 = *(char *)(in_x0 + 0xc) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: GearEnchantPreserveItemAdditionalInfo
Field: GearEnchantSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnchantSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopMainCategoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopMainCategoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopMainCategoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopSubCategoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopSubCategoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopSubCategoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopMerchandiseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopMerchandiseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopMerchandiseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 200));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopWindowDressingInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCashShopWindowDressingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x118));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopNameTextInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopNameTextInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopNameTextInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x128));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopDescriptionTextInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopDescriptionTextInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopDescriptionTextInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x178));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: RealmTotalMerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x1c8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRecordsResponse
Field: Infos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzServerDrivenPlayRecordsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSupportQueryInfo
Field: BuildingWorkOrderInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzBuildingWorkOrderInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingWorkOrderInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSupportQueryInfo
Field: CovenantSupportInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSupportInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferInfo
Field: CovenantRealmTransferMemberReadyChecks
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleAttackPhaseStartNotify
Field: BattalionMemberStatisticsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberStatisticsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: SquadSharedAttackTargetNotify
Field: SharedAttackTargetInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementResultInfo
Field: ItemInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar4 = (ulong)(uVar8 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementResultInfo
Field: IsConfirmedEnhancement
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x2c) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementResultInfo
Field: IsEroded
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x2d) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__pu

Opcode: GearEnhancementResultInfo
Field: IsDestroyed
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x60) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketSellSettleRequest
Field: GoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatApplySpellstonePresetResponse
Field: SpellstoneSlotPageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSpellstoneSlotPageInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSpellstoneSlotPageInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountWarehouseAutoStoreSettingsInfo
Field: Settings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingUpdateBuildingAccessPermissionsResponse
Field: BuildingAccessPermissionKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzBuildingAccessPermissionKindType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzBuildingAccessPermissionKindType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantUpdateCovenantPermissionsInfosRequest
Field: CovenantPermissionsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillGroundTargetingInfo
Field: IsOriginatedAtCasterLocationProxy
Code:
bVar9 = *(char *)(in_x0 + 0x18) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: DeathRecordInfo
Field: AffectSourceInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: OccupiableNpcSummaryBulkUpdateDataNotify
Field: OccupiableNpcSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzOccupiableNpcSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailQueryResponse
Field: Mails
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMailInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  pcVar10 = (char *)((ulong)&local_198 | 1);
  uVar3 = (ulong)((byte)local_198 >> 1);
  pcVar9 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk

Opcode: MailQueryResponse
Field: HasMore
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: FavoriteStatKindChangeRequest
Field: IsRegistered
Code:
bVar9 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerCovenantInfo
Field: InvitedCovenantGuidAndInvitedDateTimes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCovenantInfo
Field: JoinAppliedCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerAutoUseInfo
Field: ItemCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerAutoUseInfo
Field: RootSkillCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatTestGearEnchantOptionResponse
Field: GearEnchantOptionGrades
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,ETzGearEnchantGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,ETzGearEnchantGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatTestGearEnchantOptionResponse
Field: GearEnchantSlotToStatKindToAmountToCount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,TMap<ETzAdjustableStatKindType,TMap<float,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<float,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,TMap<float,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<float,int,false>>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,TMap<ETzAdjustableStatKindType,TMap<float,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<float,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,TMap<float,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<float,int,false>>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x90));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: SeamlessNpcInfo
Field: IsInVillage
Code:
bVar7 = *(char *)(in_x0 + 0x38) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SeamlessNpcInfo
Field: IsPublicResurrector
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MailReservedStrongholdProtectionFailLayoutInfo
Field: AttackCovenantNames
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FString,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: CheatAcceptQuestRequest
Field: TeleportToQuestMissionLocation
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAcceptQuestRequest
Field: ReceivePrecedingQuestReward
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x29) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: FissionedStateUpdateNotify
Field: IsFissioned
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketGoodsSummaryInfoQueryResponse
Field: MarketGoodsSummaryQueryInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ErosionInstalledWithoutPermissionAddNotify
Field: ErosionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzErosionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: NavMeshTileCheckResponse
Field: CheckedTiles
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantJoinAtFrontNotify
Field: CovenantMemberRoleInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: MailInfo
Field: IsRead
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: MailInfo
Field: IsAttachmentsReceived
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put

Opcode: MailInfo
Field: LayoutInfo
Code:
if (*(long **)(in_x0 + 0x78) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x78) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar10 >> 1);
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatChangeCashShopCheckBuyLimitOptionRequest
Field: IsIgnoreToCheckBuyLimit
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: WorldMapPvpBattleInitialDataNotify
Field: PvpBattleInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<long_long,TSharedPtr<FTzPvpBattleInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPvpBattleInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<long_long,TSharedPtr<FTzPvpBattleInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPvpBattleInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CollisionFreeSynchronizeNotify
Field: IsCollisionFree
Code:
bVar8 = *(char *)(in_x0 + 0x10) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CharacterRotateInfo
Field: IsClockwise
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantHistoryShowArrivalNotify
Field: CovenantHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzCovenantHistoryCategoryType,TArray<TSharedPtr<FTzCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzCovenantHistoryCategoryType,TArray<TSharedPtr<FTzCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleAttackResourceInfo
Field: SiegeWeaponCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: HeadPieceDisplayOptionModifyResponse
Field: IsHeadPieceDisplayed
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleCampaignConditionProgressSynchronizeNotify
Field: CampaignConditionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCampaignConditionProgressInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionVolunteerParticipationNotify
Field: VolunteerParticipationInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatUpdateAchievementMissionProgressCountsRequest
Field: MissionProgressCounts
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BattalionMemberLootNotify
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: BattalionMemberLootNotify
Field: IsErosionInstallerReward
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountRealmTransferExecuteResponse
Field: RealmTransferInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountRealmTransferExecuteResponse
Field: PlayerCheckInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantTradeGoodsDealInfo
Field: BuyerInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: IsEnteredInField
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: EquipmentPresetInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzEquipmentPresetIndexType,TSharedPtr<FTzEquipmentPresetInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzEquipmentPresetIndexType,TSharedPtr<FTzEquipmentPresetInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x68));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: QuickSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: QuickSlotPageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStanceType,TSharedPtr<FTzQuickSlotPageInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStanceType,TSharedPtr<FTzQuickSlotPageInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x108));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: OpenFogsByDistrictCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,unsigned_long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,unsigned_long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x158));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PushNotificationOptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzPushNotificationOptionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzPushNotificationOptionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1b8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: FavoriteCraftRecipeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavoriteCraftRecipeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x218));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: CompletedTutorialCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x238));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: PlayerInitializeInfo
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 600) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 600) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: InGameNotificationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzInGameNotificationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x268));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AmityInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x278));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: UsableItemCooldownExpireDateTimeRangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,TSharedPtr<FTzDateTimeRangeInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,TSharedPtr<FTzDateTimeRangeInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x318));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: MountSkillSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzMountSkillSlotIndexType,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzMountSkillSlotIndexType,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x368));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PointCurrencyContainerInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x3b8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: ActivatedCollectionCategoryCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x428));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: CollectionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCollectionProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCollectionProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x478));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: BasicOrGrowthGuideAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBasicOrGrowthGuideAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x4c8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AnniversaryAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzAnniversaryAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzAnniversaryAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x4d8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AnniversaryAchievementPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x528));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: DiscoveredSelfieDoodadSpawnerCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x538));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: LastDeathRecordInfo
Code:
if (*(long **)(in_x0 + 0x588) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x588) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: DeathPenaltyRecordInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzDeathPenaltyRecordInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x598));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: DeathPenaltyFreeRecoveryInfo
Code:
if (*(long **)(in_x0 + 0x5a8) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x5a8) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: TransmutationProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzItemCategoryType,TMap<ETzItemGradeType,short,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,short,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemCategoryType,TMap<ETzItemGradeType,short,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,short,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x5b8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: MissionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzMissionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzMissionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x608));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AlertPlayers
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x668));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: CrossRealmAlertPlayers
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FTzCrossRealmAlertPlayerRegisterInfo,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FTzCrossRealmAlertPlayerRegisterInfo,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x6b8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PlayerLocationMonitoringInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerLocationMonitoringInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x708));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PlayerHarmfulTextOnChatViolationInfo
Code:
if (*(long **)(in_x0 + 0x718) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x718) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: PlayerAutoUseInfo
Code:
if (*(long **)(in_x0 + 0x740) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x740) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: UnSettledGoodsGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x760));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: PlayerInitializeInfo
Field: ExpiredGoodsGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x770));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: PlayerInitializeInfo
Field: GiftBoxInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantGiftBoxInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantGiftBoxInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x790));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AccountAffectInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzAccountAffectInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzAccountAffectInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x7e0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: RegisteredFavoriteAdjustableStatKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzAdjustableStatKindType,DefaultKeyFuncs<ETzAdjustableStatKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x840));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: WorldMapMarkerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzWorldMapMarkerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x8b0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: FavoriteCollectionCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x8c0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: SkillUseOptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSkillUseOptionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSkillUseOptionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x910));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: RegionContentPlayInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzRegionContentKindType,TSharedPtr<FTzRegionContentPlayInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzRegionContentKindType,TSharedPtr<FTzRegionContentPlayInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x960));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: TransmutationRecords
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<TTuple<FTzCuid,ETzItemCategoryType,ETzItemGradeType>,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<TTuple<FTzCuid,ETzItemCategoryType,ETzItemGradeType>,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x9c0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PlayerCampaignInfo
Code:
if (*(long **)(in_x0 + 0xa10) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0xa10) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: VolunteerParticipationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBattalionContentsKindType,TSharedPtr<FTzVolunteerParticipationInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBattalionContentsKindType,TSharedPtr<FTzVolunteerParticipationInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa20));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PaidAttendanceInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPaidAttendanceInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0xa80));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CheatInstallAllArquirunesResponse
Field: InstalledArquiruneCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: DeathPenaltyRecordInfoChangedNotify
Field: GuidToChangedRecordKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,ETzDeathPenaltyRecordKindType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,ETzDeathPenaltyRecordKindType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketTransactionHistoryResponse
Field: MarketTransactionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketTransactionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WorldMapPvpBattlePlayerInfoAddNotify
Field: PvpBattlePlayerInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CashShopMerchandisePaymentInfo
Field: ItemUseParameterInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantItemUseRequest
Field: ParameterInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: WorldMapPvpBattleCovenantInfoAddOrUpdateNotify
Field: PvpBattleCovenantInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ToyMerchandisePaymentInfo
Field: IsSubscription
Code:
bVar8 = *(char *)(in_x0 + 0x68) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleRewardInfo
Field: RewardItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleRewardInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillComboResetNotify
Field: IsExpired
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: GearErodedRestorationResultInfo
Field: IsBound
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x11) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: GearErodedRestorationResultInfo
Field: IsStorable
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x12) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: TozMessageCacheElement
Field: message
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: CovenantUpdateNameNotify
Field: NeedChangeName
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleEndNotify
Field: BattalionMemberCoreInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBattalionMemberCoreInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleEndNotify
Field: BattalionMemberStatisticsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberStatisticsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleEndNotify
Field: BattalionMemberDisplayInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberDisplayInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x50));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: RankingQueryResponse
Field: RankingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRankingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RankingQueryResponse
Field: SelfRankingInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantCampBuildingCraftRequest
Field: IsCompleteImmediately
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillRequest
Field: SkillTargetingInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillRequest
Field: IsToggleBuffSkillOn
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x34) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SquadSharedFocusTargetNotify
Field: SharedFocusTargetInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerItemUseRequest
Field: ParameterInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantStartCampaignRequest
Field: CampaignStartOptionInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryAchievementPointInfo
Field: RewardedGoalPoints
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerLocationMonitoringDeregisterNotify
Field: DeregisterPlayerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatSetInvulnerableResponse
Field: IsInvulnerable
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ChatRoomRecordsInitializationInfo
Field: ChatMessageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatMessageInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleAttackDeclareInfo
Field: IsVolunteerJoinApplicationAutomaticApproval
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x49) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: StrongholdBattleAttackDeclareInfo
Field: IsNotExposeToBattalionList
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x4a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleAttackDeclareInfo
Field: IsDeclarePlunder
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x4b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: MailBuildingRepairLayoutInfo
Field: IsComplete
Code:
bVar8 = *(char *)(in_x0 + 0x31) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RegionContentPlayTimeInfo
Field: RegionContentPlayTimeInfo_sec
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: RegionContentPlayTimeInfo
Field: RegionContentPlayTimeInfo_datetime
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantQuerySummaryInfoListRequest
Field: CovenantGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: DisplayOptionInfo
Field: IsAllianceCovenantVisibleInMiniMap
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: DisplayOptionInfo
Field: ItemAcquireNotifyAnonymityOption
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: DisplayOptionInfo
Field: IsOccupiedStrongholdVisibleInChat
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar2,0x17);
  pcVar11[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: DisplayOptionInfo
Field: IsLivingTotemIconEmphasized
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk1::__put

Opcode: CheatAnniversaryAchievementResetAllResponse
Field: AnniversaryAchievementPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WarehouseMigrationInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WarehouseMigrationInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestCinePlayingSynchronizeNotify
Field: IsQuestCinePlaying
Code:
bVar8 = *(char *)(in_x0 + 0x10) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ErChatServerSessionInitializeInfo
Field: BlockedChatEntityInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBlockedChatEntityInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: NpcSpeechBalloonInfo
Field: NpcSpeechBalloonTextFormatInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ChatMessageNotify
Field: ChatMessageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatMessageInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCovenantPayDividendRequest
Field: DividendInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: QuickSlotUpdateInfo
Field: AddedQuickSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuickSlotUpdateInfo
Field: ModifiedQuickSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuickSlotUpdateInfo
Field: RemovedQuickSlotIndices
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzQuickSlotIndexType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BuildingWorkRequestBaseInfo
Field: IsRecommended
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: BuildingWorkRequestBaseInfo
Field: IsCompleteImmediately
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x29) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__pu

Opcode: CheatAllStancesAcquireResponse
Field: IsStanceInstallFreeChanceEnabled
Code:
bVar8 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__put_c

Opcode: BattalionConfirmJoinApplicationRequest
Field: IsConfirmJoinApplication
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SessionKeyAuthenticateComplete
Field: Success
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantDiplomacyInfo
Field: CovenantDiplomacyAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmInfo
Field: IsInboundRealmTransferable
Code:
bVar9 = *(char *)(in_x0 + 0x70) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CovenantBattalionExpeditionInfo
Field: AnotherBattalionGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: QuestsInfo
Field: RewardedQuests
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: ActiveQuestProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzQuestProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzQuestProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: RepeatQuestCancelRecordInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzQuestCancelRecordInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzQuestCancelRecordInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: ActiveFavorInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzFavorInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzFavorInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: ActiveFavorMissionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzFavorMissionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzFavorMissionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x148));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: LastProceedEpisodeCuidsByEpisodeGroup
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzEpisodeGroupType,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzEpisodeGroupType,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1a0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatEnabledModificationNotify
Field: CheatEnabled
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: NavMeshTileDataResponse
Field: CheckedTiles
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketGoodsInfo
Field: IsStorable
Code:
bVar8 = *(char *)(in_x0 + 0x48) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: MarketGoodsInfo
Field: ItemAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CollectionProgressInfo
Field: RegisteredCollectionSlotItemCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantWarehouseSummaryUpdateInfoNotify
Field: UpdatedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantWarehouseSummaryUpdateInfoNotify
Field: RemovedItemCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatSetLoggingRequest
Field: IsLogging
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FollowerSquadUpdateRequest
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd