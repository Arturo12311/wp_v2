Opcode: AnniversaryAchievementInitializeDataNotify
Field: AnniversaryAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzAnniversaryAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzAnniversaryAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MountItemChangeFailResponse
Field: TypeName
Code:


Opcode: MountItemChangeFailResponse
Field: MountItemChangeFailResponse
Code:


Opcode: PubSubChannelInitialDataNotify
Field: TypeName
Code:


Opcode: PubSubChannelInitialDataNotify
Field: PubSubChannelInitialDataNotify
Code:


Opcode: CovenantCampBuildingCraftCancelResponse
Field: TypeName
Code:


Opcode: CovenantCampBuildingCraftCancelResponse
Field: CovenantCampBuildingCraftCancelResponse
Code:


Opcode: ShopCashMerchandiseReceiveRequest
Field: ReceiveGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: ErosionInstallCancelFailResponse
Field: TypeName
Code:


Opcode: ErosionInstallCancelFailResponse
Field: ErosionInstallCancelFailResponse
Code:


Opcode: PartySharedFocusTargetNotify
Field: SharedFocusTargetInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatRestoreChatCovenantResponse
Field: TypeName
Code:


Opcode: CheatRestoreChatCovenantResponse
Field: CheatRestoreChatCovenantResponse
Code:


Opcode: DeathPenaltyDeleteResponse
Field: DeletedDeathPenaltyRecordGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatResetDiscoveredSelfieDoodadSpawnersRequest
Field: TypeName
Code:


Opcode: CheatResetDiscoveredSelfieDoodadSpawnersRequest
Field: CheatResetDiscoveredSelfieDoodadSpawnersRequest
Code:


Opcode: ThreatListClearNotify
Field: TypeName
Code:


Opcode: ThreatListClearNotify
Field: ThreatListClearNotify
Code:


Opcode: AllRealmInfoPubSubChannelInitialDataNotify
Field: RealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TArray<TSharedPtr<FTzRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SelfieDoodadInfo
Field: TypeName
Code:


Opcode: SelfieDoodadInfo
Field: SelfieDoodadInfo
Code:


Opcode: CheatEnterCovenantCampaignRequest
Field: TypeName
Code:


Opcode: CheatEnterCovenantCampaignRequest
Field: CheatEnterCovenantCampaignRequest
Code:


Opcode: CheatStrongholdApplyTaxResponse
Field: TypeName
Code:


Opcode: CheatStrongholdApplyTaxResponse
Field: CheatStrongholdApplyTaxResponse
Code:


Opcode: RankingViewInfo
Field: TypeName
Code:


Opcode: RankingViewInfo
Field: RankingViewInfo
Code:


Opcode: SpellstoneAdditionalSkillStatsInfo
Field: CharacterStatChangesDuringSkillProgress
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCashShopInfo
Field: MerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSynchronizeLivingTotemInfoNotify
Field: CovenantLivingTotemInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: HandshakeResult
Field: Success
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar4 = 4;
  if (bVar8) {
    lVar4 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar5 = &DAT_0901b5c8;
  if (bVar8) {
    puVar5 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar4 << 1);
  __memcpy_chk(pcVar10,puVar5,lVar4,0x17);
  pcVar10[lVar4] = '\0';
  uVar6 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar6 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: RealmAccountLogoutRequest
Field: TypeName
Code:


Opcode: RealmAccountLogoutRequest
Field: RealmAccountLogoutRequest
Code:


Opcode: RankingQueryByNameResponse
Field: TargetRankingInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RankingQueryByNameResponse
Field: SelfRankingInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdRewardStatNotify
Field: IsOccupiedByNpcCovenant
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatChangeAllFollowersLevelResponse
Field: TypeName
Code:


Opcode: CheatChangeAllFollowersLevelResponse
Field: CheatChangeAllFollowersLevelResponse
Code:


Opcode: CheatPlayerLocationMonitoringDeleteAllRequest
Field: TypeName
Code:


Opcode: CheatPlayerLocationMonitoringDeleteAllRequest
Field: CheatPlayerLocationMonitoringDeleteAllRequest
Code:


Opcode: CovenantUpdateCovenantMemberRoleNameFailResponse
Field: TypeName
Code:


Opcode: CovenantUpdateCovenantMemberRoleNameFailResponse
Field: CovenantUpdateCovenantMemberRoleNameFailResponse
Code:


Opcode: CovenantBattalionExpeditionDeployStopLivingTotemRequest
Field: TypeName
Code:


Opcode: CovenantBattalionExpeditionDeployStopLivingTotemRequest
Field: CovenantBattalionExpeditionDeployStopLivingTotemRequest
Code:


Opcode: CheatAnniversaryAchievementResetResponse
Field: AnniversaryAchievementPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InventoryInfo
Field: ItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketGoodsSummaryInfoQueryNotify
Field: MarketGoodsSummaryQueryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketGoodsSummaryInfoQueryNotify
Field: MarketGoodsSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketGoodsSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantInvitationInfoUpdatedNotify
Field: InvitedCovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatAcquireStanceResponse
Field: IsStanceInstallFreeChanceEnabled
Code:
bVar9 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar9) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar13;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatClearRealmIntegrationBattleScoreResponse
Field: TypeName
Code:


Opcode: CheatClearRealmIntegrationBattleScoreResponse
Field: CheatClearRealmIntegrationBattleScoreResponse
Code:


Opcode: CovenantUpdateIntroductionFailResponse
Field: TypeName
Code:


Opcode: CovenantUpdateIntroductionFailResponse
Field: CovenantUpdateIntroductionFailResponse
Code:


Opcode: StrongholdBattleInfo
Field: BuildingStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzStrongholdBattleBuildingStateInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzStrongholdBattleBuildingStateInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleInfo
Field: DefenseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStrongholdBattleDeploymentKindType,TSharedPtr<FTzStrongholdBattleDefenseGroupInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStrongholdBattleDeploymentKindType,TSharedPtr<FTzStrongholdBattleDefenseGroupInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x80));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleInfo
Field: AttackInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStrongholdBattleDeploymentKindType,TSharedPtr<FTzStrongholdBattleAttackInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStrongholdBattleDeploymentKindType,TSharedPtr<FTzStrongholdBattleAttackInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xd0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantRubyShopMerchandiseResetResponse
Field: TypeName
Code:


Opcode: CovenantRubyShopMerchandiseResetResponse
Field: CovenantRubyShopMerchandiseResetResponse
Code:


Opcode: CovenantBattalionSummaryInfo
Field: ExpeditionSummaryInfo
Code:
if (*(long **)(in_x0 + 0x90) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x90) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayWaitingForResupplyStateInfo
Field: TypeName
Code:


Opcode: ServerDrivenPlayWaitingForResupplyStateInfo
Field: ServerDrivenPlayWaitingForResupplyStateInfo
Code:


Opcode: GearBatchCraftRequest
Field: CraftTargetGrades
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzItemGradeType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearBatchCraftRequest
Field: CraftTargetGearCategories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearCategoryKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRankingViewInfo
Field: OccupiedStrongholdCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: MarketSellReregisterResponse
Field: IsSuccessByGoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacyInfos
Field: RequestInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantDiplomacyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantDiplomacyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacyInfos
Field: ResponseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantDiplomacyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantDiplomacyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantHistoryCheckCompleteArchitectureResponse
Field: CovenantHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerDeathNotify
Field: DeathRecordInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanManageCovenantMember
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanBanishMember
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CovenantPermissionsInfo
Field: CanManageHaven
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanModifyTax
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CovenantPermissionsInfo
Field: CanManageDiplomacy
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xd) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanManageDiplomacyChat
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xe) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CovenantPermissionsInfo
Field: CanDeclareBattle
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xf) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPermissionsInfo
Field: CanStartCampaign
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: CovenantRejectInvitationsRequest
Field: CovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatChangeTerritoryEntanglementGaugeResponse
Field: TypeName
Code:


Opcode: CheatChangeTerritoryEntanglementGaugeResponse
Field: CheatChangeTerritoryEntanglementGaugeResponse
Code:


Opcode: CheatRegisterCheatEnabledPlayerNameResponse
Field: CheatEnabledPlayerNames
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FString,DefaultKeyFuncs<FString,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearRealmIntegrationBattleAllScoreRequest
Field: TypeName
Code:


Opcode: CheatClearRealmIntegrationBattleAllScoreRequest
Field: CheatClearRealmIntegrationBattleAllScoreRequest
Code:


Opcode: DeathPenaltyRecoverResponse
Field: RecoveredDeathPenaltyGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: DeathPenaltyRecoverResponse
Field: DeathPenaltyFreeRecoveryInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookExperiencePointsItemConsumeRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionInfo
Field: ExpeditionInfo
Code:
if (*(long **)(in_x0 + 0x178) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x178) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatChangeSpiritualBondPowerResponse
Field: TypeName
Code:


Opcode: CheatChangeSpiritualBondPowerResponse
Field: CheatChangeSpiritualBondPowerResponse
Code:


Opcode: HonorableDieRequest
Field: TypeName
Code:


Opcode: HonorableDieRequest
Field: HonorableDieRequest
Code:


Opcode: CovenantLivingTotemWithStatsInfo
Field: CharacterPublicStatsInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantLivingTotemWithStatsInfo
Field: CharacterPrivateStatsInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: NavMeshTileCheckRequest
Field: CheckRequestedTiles
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRecordsRequest
Field: TypeName
Code:


Opcode: ServerDrivenPlayRecordsRequest
Field: ServerDrivenPlayRecordsRequest
Code:


Opcode: CheatResetGoodsBuyCountRequest
Field: TypeName
Code:


Opcode: CheatResetGoodsBuyCountRequest
Field: CheatResetGoodsBuyCountRequest
Code:


Opcode: RealmInfoListResponse
Field: RealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TArray<TSharedPtr<FTzRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmInfoListResponse
Field: RealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzUniverseAccountRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmInfoListResponse
Field: AppliedRealmAccountGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BattalionCreateNotify
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatDetachAllBuffsResponse
Field: TypeName
Code:


Opcode: CheatDetachAllBuffsResponse
Field: CheatDetachAllBuffsResponse
Code:


Opcode: WarpReturnResponse
Field: TypeName
Code:


Opcode: WarpReturnResponse
Field: WarpReturnResponse
Code:


Opcode: QuestAcceptNotify
Field: StartByItem
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x48) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: QuestAcceptNotify
Field: FavorInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__p

Opcode: QuestAcceptNotify
Field: FavorMissionInfo
Code:
if (*(long **)(in_x0 + 0x60) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x60) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleAttackInfo
Field: TargetBuildingSpawnerCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStrongholdBattleAttackPhaseType,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStrongholdBattleAttackPhaseType,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CrossRealmCovenantDiplomacyWithdrawAllianceFailResponse
Field: TypeName
Code:


Opcode: CrossRealmCovenantDiplomacyWithdrawAllianceFailResponse
Field: CrossRealmCovenantDiplomacyWithdrawAllianceFailResponse
Code:


Opcode: CovenantGiftBoxInfo
Field: IsReceived
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x58) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantGiftBoxInfo
Field: ReceiveRewardInfo
Code:
if (*(long **)(in_x0 + 0x60) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x60) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantWatchSynchronizeNotify
Field: TargetPlayerGuidToCreateDateTimes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFollowerInfo
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFollowerInfo
Field: FollowerDispatchOverallInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzFollowerDispatchOverallInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzFollowerDispatchOverallInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFollowerInfo
Field: FollowerCollectionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFavorInfo
Field: DistrictFavorDatabaseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzDistrictFavorDatabaseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzDistrictFavorDatabaseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerFavorInfo
Field: ActiveFavorDatabaseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzFavorDatabaseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzFavorDatabaseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GuiseUnequipFailResponse
Field: TypeName
Code:


Opcode: GuiseUnequipFailResponse
Field: GuiseUnequipFailResponse
Code:


Opcode: RPCExceptionMessage
Field: ErrorString
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x10),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: CovenantRealmTransferRegisterResponse
Field: TypeName
Code:


Opcode: CovenantRealmTransferRegisterResponse
Field: CovenantRealmTransferRegisterResponse
Code:


Opcode: AutoBuySettingsInfo
Field: Settings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CovenantRecommendResourceKindFailResponse
Field: RecommendedResourceKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzResourceKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearCollectionByCollectionCategoryCuidFailResponse
Field: TypeName
Code:


Opcode: CheatClearCollectionByCollectionCategoryCuidFailResponse
Field: CheatClearCollectionByCollectionCategoryCuidFailResponse
Code:


Opcode: ContaminationInfo
Field: ContaminationNaturalDecreaseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzContaminationNaturalDecreaseType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzContaminationNaturalDecreaseType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdSettleAccountInfo
Field: GoldHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FDateTime,TSharedPtr<FTzGoldHistoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FDateTime,TSharedPtr<FTzGoldHistoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionExpeditionDeployStopLivingTotemFailResponse
Field: TypeName
Code:


Opcode: CovenantBattalionExpeditionDeployStopLivingTotemFailResponse
Field: CovenantBattalionExpeditionDeployStopLivingTotemFailResponse
Code:


Opcode: HavenOrganizationStatsDetailInfo
Field: Stats
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzHavenOrganizationStatSourceType,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzHavenOrganizationStatSourceType,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationBattleWarpReturnResponse
Field: TypeName
Code:


Opcode: RealmIntegrationBattleWarpReturnResponse
Field: RealmIntegrationBattleWarpReturnResponse
Code:


Opcode: FollowerCollectionUpdateNotify
Field: CollectionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearDeathPenaltyRecordResponse
Field: TypeName
Code:


Opcode: CheatClearDeathPenaltyRecordResponse
Field: CheatClearDeathPenaltyRecordResponse
Code:


Opcode: CovenantRealmTransferReadyToRealmTransferRequest
Field: UseItem
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantRealmTransferReadyToRealmTransferRequest
Field: UseCurrency
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ErosionInstallCancelRequest
Field: TypeName
Code:


Opcode: ErosionInstallCancelRequest
Field: ErosionInstallCancelRequest
Code:


Opcode: CrossRealmCovenantDiplomacyDeclareHostilityFailResponse
Field: TypeName
Code:


Opcode: CrossRealmCovenantDiplomacyDeclareHostilityFailResponse
Field: CrossRealmCovenantDiplomacyDeclareHostilityFailResponse
Code:


Opcode: UpdateLastViewedChatRecordsIndexRequest
Field: ChatRecordsIndices
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatRecordsIndex,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferLimitedItemCountResponse
Field: ItemCountByCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferLimitedItemCountResponse
Field: ItemCountByItemGradeAndItemCategory
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzItemCategoryType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemCategoryType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferLimitedItemCountResponse
Field: GearCountByItemGradeAndGearKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGearKindType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGearKindType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferLimitedItemCountResponse
Field: AffectItemCountByItemGradeAndAffectItemKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAffectItemKindType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAffectItemKindType,TMap<ETzItemGradeType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,long_long,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x100));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatAcquireAndSetToSquadFollowerResponse
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationSelectRealmAccountResponse
Field: PlayerSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationSelectRealmAccountResponse
Field: CanCheatCommand
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x80) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmIntegrationSelectRealmAccountResponse
Field: RealmIntegrationRealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x88));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: UniverseAccountLogoutResponse
Field: TypeName
Code:


Opcode: UniverseAccountLogoutResponse
Field: UniverseAccountLogoutResponse
Code:


Opcode: OccupiableNpcRandomBuffStateUpdateNotify
Field: IsRandomBuffNpc
Code:
bVar7 = *(char *)(in_x0 + 0x50) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: OccupiableNpcRandomBuffStateUpdateNotify
Field: NxLogBaseParameterInfo
Code:
if (*(long **)(in_x0 + 0x58) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x58) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ContaminationActionInfo
Field: TypeName
Code:


Opcode: ContaminationActionInfo
Field: ContaminationActionInfo
Code:


Opcode: ChatOptionInfo
Field: ChatTabFilter
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzChatKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar4 = (ulong)((byte)local_198 >> 1);
  pcVar1 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk

Opcode: ChatOptionInfo
Field: CovenantRewardAcquireNotifyDisplayOption
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ChatOptionInfo
Field: ChatMacros
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,FString,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,FString,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__nd

Opcode: GearSlotPresetModifyRequest
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearSlotPresetModifyRequest
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatInitializeQuestDataRequest
Field: TypeName
Code:


Opcode: CheatInitializeQuestDataRequest
Field: CheatInitializeQuestDataRequest
Code:


Opcode: NpcSpeechBalloonTextFormatInfo
Field: TextFormatParameters
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FString,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__n

Opcode: CovenantDiplomacyConfirmReinforcementInvitationResponse
Field: TypeName
Code:


Opcode: CovenantDiplomacyConfirmReinforcementInvitationResponse
Field: CovenantDiplomacyConfirmReinforcementInvitationResponse
Code:


Opcode: AutoDonateSettingOptionInfo
Field: ItemFilterCuidToItemGrade
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar4 = (ulong)((byte)local_198 >> 1);
  pcVar1 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk

Opcode: AutoDonateSettingOptionInfo
Field: IsContainEnchantedItem
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x59) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: AutoDonateSettingOptionInfo
Field: IsContainBasicCollectableItem
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x5a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: AllRealmInfoPubSubChannelUpdateDataNotify
Field: RealmStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TutorialsInfo
Field: CompletedTutorialCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatSpawnTerritoryBossResponse
Field: TypeName
Code:


Opcode: CheatSpawnTerritoryBossResponse
Field: CheatSpawnTerritoryBossResponse
Code:


Opcode: CheatUnlockAllContentsRequest
Field: TypeName
Code:


Opcode: CheatUnlockAllContentsRequest
Field: CheatUnlockAllContentsRequest
Code:


Opcode: RankingInfo
Field: ViewInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RegionContentPlayInfoRequest
Field: TypeName
Code:


Opcode: RegionContentPlayInfoRequest
Field: RegionContentPlayInfoRequest
Code:


Opcode: GearSlotPresetModifyResponse
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearSlotPresetModifyResponse
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRecommendBuildingWorkResponse
Field: TypeName
Code:


Opcode: CovenantRecommendBuildingWorkResponse
Field: CovenantRecommendBuildingWorkResponse
Code:


Opcode: CheatFillHealthPointsAndManaPointsToFullResponse
Field: TypeName
Code:


Opcode: CheatFillHealthPointsAndManaPointsToFullResponse
Field: CheatFillHealthPointsAndManaPointsToFullResponse
Code:


Opcode: BattalionSummaryInfo
Field: IsJoinable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x88) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatRemoveAllWorldMapMarkerResponse
Field: RemovedGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: RealmAccountLoginRequest
Field: IsFastLogin
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerStrongholdBattleStatisticsInfo
Field: SkillUseStatisticsNxLogInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerSkillUseStatisticsNxLogInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayStateNotify
Field: StateInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSpawnFromSpawnerResponse
Field: TypeName
Code:


Opcode: CheatSpawnFromSpawnerResponse
Field: CheatSpawnFromSpawnerResponse
Code:


Opcode: CheatCancelAllStrongholdProtectionResponse
Field: TypeName
Code:


Opcode: CheatCancelAllStrongholdProtectionResponse
Field: CheatCancelAllStrongholdProtectionResponse
Code:


Opcode: CheatAccomplishAchievementResponse
Field: TypeName
Code:


Opcode: CheatAccomplishAchievementResponse
Field: CheatAccomplishAchievementResponse
Code:


Opcode: DeleteFromChatBlockListResponse
Field: TypeName
Code:


Opcode: DeleteFromChatBlockListResponse
Field: DeleteFromChatBlockListResponse
Code:


Opcode: InteractionResponse
Field: TypeName
Code:


Opcode: InteractionResponse
Field: InteractionResponse
Code:


Opcode: CheatResetAllAetherOptionResponse
Field: TypeName
Code:


Opcode: CheatResetAllAetherOptionResponse
Field: CheatResetAllAetherOptionResponse
Code:


Opcode: CheatChangeFollowerLevelResponse
Field: TypeName
Code:


Opcode: CheatChangeFollowerLevelResponse
Field: CheatChangeFollowerLevelResponse
Code:


Opcode: CovenantJoinedStrongholdBattleInfoRemoveNotify
Field: CovenantJoinedStrongholdBattleInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatEnterCovenantCampaignResponse
Field: TypeName
Code:


Opcode: CheatEnterCovenantCampaignResponse
Field: CheatEnterCovenantCampaignResponse
Code:


Opcode: CheatClearSeasonPassAchievementsRequest
Field: TypeName
Code:


Opcode: CheatClearSeasonPassAchievementsRequest
Field: CheatClearSeasonPassAchievementsRequest
Code:


Opcode: ContentsRelockNotify
Field: ContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzContentsUnlockKindType,DefaultKeyFuncs<ETzContentsUnlockKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCraftCovenantLivingTotemResponse
Field: TypeName
Code:


Opcode: CheatCraftCovenantLivingTotemResponse
Field: CheatCraftCovenantLivingTotemResponse
Code:


Opcode: BattalionChangeJoinableNotify
Field: IsJoinable
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBuildingCraftResponse
Field: TypeName
Code:


Opcode: StrongholdBuildingCraftResponse
Field: StrongholdBuildingCraftResponse
Code:


Opcode: ErFrontServerSessionCancelWaitingQueueResponse
Field: TypeName
Code:


Opcode: ErFrontServerSessionCancelWaitingQueueResponse
Field: ErFrontServerSessionCancelWaitingQueueResponse
Code:


Opcode: ChatFailResponse
Field: TypeName
Code:


Opcode: ChatFailResponse
Field: ChatFailResponse
Code:


Opcode: KickPreexistingSessionConfirmRequest
Field: TypeName
Code:


Opcode: KickPreexistingSessionConfirmRequest
Field: KickPreexistingSessionConfirmRequest
Code:


Opcode: ErLoginServerInitialDevBotAuthenticateInfo
Field: TypeName
Code:


Opcode: ErLoginServerInitialDevBotAuthenticateInfo
Field: ErLoginServerInitialDevBotAuthenticateInfo
Code:


Opcode: SkillShieldWallAffectInfo
Field: IsHit
Code:
bVar7 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SkillShieldWallAffectInfo
Field: IsAffectingTargetStats
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x29) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SpawnLayerInfo
Field: IsActivated
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantPayDividendResponse
Field: DividendResultInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatChangeCovenantNameResponse
Field: TypeName
Code:


Opcode: CheatChangeCovenantNameResponse
Field: CheatChangeCovenantNameResponse
Code:


Opcode: RealmAccountPresentRegisterResponse
Field: TypeName
Code:


Opcode: RealmAccountPresentRegisterResponse
Field: RealmAccountPresentRegisterResponse
Code:


Opcode: PubSubChannelUpdateDataNotify
Field: TypeName
Code:


Opcode: PubSubChannelUpdateDataNotify
Field: PubSubChannelUpdateDataNotify
Code:


Opcode: QueryChatRoomRecordsInitializationInfoResponse
Field: ChatRoomRecordsInitializationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatRoomRecordsInitializationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatUninstallAllArquirunesResponse
Field: TypeName
Code:


Opcode: CheatUninstallAllArquirunesResponse
Field: CheatUninstallAllArquirunesResponse
Code:


Opcode: CovenantGiftReceiveInfo
Field: ReceiveRewardInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRubyShopBuyRequest
Field: MerchandiseBuyInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCreateAndEquipGearsResponse
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCreateAndEquipGearsResponse
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PaidAttendanceInfo
Field: IsVisibleNotificationMarker
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CashShopRefundableMerchandiseStorageBoxInfo
Field: SlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCashShopRefundableMerchandiseStorageBoxSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: TozTimeAdjustment
Field: Adjustment
Code:
TozSerializableMessageLibNative::JsonSerializer<TozSerializableMessageLibNative::TimeSpan,void>::
  Serialize((TimeSpan *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__n

Opcode: CrossRealmSeasonEntryUpdateDataNotify
Field: TypeName
Code:


Opcode: CrossRealmSeasonEntryUpdateDataNotify
Field: CrossRealmSeasonEntryUpdateDataNotify
Code:


Opcode: MountRendezvousInfo
Field: IsImmediateBoarding
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 100) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar8;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: MountRendezvousInfo
Field: IsMovingBoarding
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x65) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar8;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar8 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__put

Opcode: PowerSavingModeEndRequest
Field: TypeName
Code:


Opcode: PowerSavingModeEndRequest
Field: PowerSavingModeEndRequest
Code:


Opcode: CheatCheckServerTimeRequest
Field: TypeName
Code:


Opcode: CheatCheckServerTimeRequest
Field: CheatCheckServerTimeRequest
Code:


Opcode: StrongholdBattleSummaryInfo
Field: StrongholdBattleJoinedCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleJoinedCovenantInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryInfo
Field: AnniversaryStrongholdOccupationCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryStrongholdOccupationCovenantInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryStrongholdOccupationCovenantInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionCompleteAssembleNotify
Field: TypeName
Code:


Opcode: BattalionCompleteAssembleNotify
Field: BattalionCompleteAssembleNotify
Code:


Opcode: ChatRoomListUpdateNotify
Field: AddedChatRoomRecordsInitializationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatRoomRecordsInitializationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ChatRoomListUpdateNotify
Field: DeletedChatRoomGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SpawnLayerActionInfo
Field: TypeName
Code:


Opcode: SpawnLayerActionInfo
Field: SpawnLayerActionInfo
Code:


Opcode: CheatAcquireAllUsableSkillsRequest
Field: TypeName
Code:


Opcode: CheatAcquireAllUsableSkillsRequest
Field: CheatAcquireAllUsableSkillsRequest
Code:


Opcode: RewardInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: RewardInfo
Field: RewardItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: RewardInfo
Field: SortedRewardItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRewardItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x78));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: RewardInfo
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x90));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: RewardInfo
Field: IsUpgradeSlayingGrade
Code:
bVar8 = *(char *)(in_x0 + 0xe4) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RewardInfo
Field: AnniversaryRewardCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf0));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: CheatEnchantItemRequest
Field: GearEnchantSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnchantSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: ItemLockSwitchResponse
Field: IsInRealmAccountWarehouse
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemLockSwitchResponse
Field: IsLocked
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: MountBoardingRequest
Field: IsLeftBoarding
Code:
bVar6 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar6) {
    lVar1 = 5;
  }
  pcVar8 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar6) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MountBoardingRequest
Field: IsImmediateBoarding
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x24) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAcquireAllUsableSkillsResponse
Field: AcquiredSkillCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: StrongholdBattleCovenantBattalionConfirmConveneRequest
Field: TypeName
Code:


Opcode: StrongholdBattleCovenantBattalionConfirmConveneRequest
Field: StrongholdBattleCovenantBattalionConfirmConveneRequest
Code:


Opcode: FavoriteCraftRecipeRegisterRequest
Field: IsRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: QuickSlotInfo
Field: QuickSlotDetailInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatResetContentsUnlockRequest
Field: TypeName
Code:


Opcode: CheatResetContentsUnlockRequest
Field: CheatResetContentsUnlockRequest
Code:


Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsOwnCovenantNameDisplayed
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsOwnHealthBarDisplayed
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsOtherCovenantNameDisplayed
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsSameCovenantHealthBarDisplayed
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: NameTagHealthBarDisplayOptionDetailInfo
Field: IsSamePartyOrBattalionHealthBarDisplayed
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xd) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SeamlessEntityInfo
Field: EntityInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BuildingWorkSummaryInfo
Field: IsCovenantRecommended
Code:
bVar9 = *(char *)(in_x0 + 0x19) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_c

Opcode: StrongholdBattleJoinNotify
Field: StrongholdBattleInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantGoodsRegistrationManagementModeCommandResponse
Field: RegisteredGoodsList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AlertPlayerRegisterResponse
Field: RegisteredPlayerInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DeathPenaltyRecoveryInfo
Field: DeathPenaltyFreeRecoveryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DeathPenaltyRecoveryInfo
Field: LastDeathPenaltyAutoRecoveryInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BaseGameOptionInfo
Field: TypeName
Code:


Opcode: BaseGameOptionInfo
Field: BaseGameOptionInfo
Code:


Opcode: TargetScanShareRequest
Field: ScannedTargetGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatBatchBossSpawnTimeResponse
Field: TypeName
Code:


Opcode: CheatBatchBossSpawnTimeResponse
Field: CheatBatchBossSpawnTimeResponse
Code:


Opcode: CovenantWatchInfo
Field: CovenantWatchKillingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantWatchKillingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ItemLockSwitchRequest
Field: IsInRealmAccountWarehouse
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemLockSwitchRequest
Field: IsLocked
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x11) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: RealmAccountPresentQueryResponse
Field: RealmAccountPresentInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmAccountPresentSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ExpeditionInfo
Field: JoinedBattalionCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x48));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InteractionCancelResponse
Field: TypeName
Code:


Opcode: InteractionCancelResponse
Field: InteractionCancelResponse
Code:


Opcode: TozPong
Field: ServerUtcNow
Code:
TozSerializableMessageLibNative::JsonSerializer<TozSerializableMessageLibNative::DateTime,void>::
  Serialize((DateTime *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatStrongholdBattleAttackDeclareResponse
Field: TypeName
Code:


Opcode: CheatStrongholdBattleAttackDeclareResponse
Field: CheatStrongholdBattleAttackDeclareResponse
Code:


Opcode: CheatSummonNpcResponse
Field: TypeName
Code:


Opcode: CheatSummonNpcResponse
Field: CheatSummonNpcResponse
Code:


Opcode: RealmIntegrationBattleScoreUpdateNotify
Field: ScoreInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SchemaDataTable
Field: SchemaTable
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: SchemaDataTable
Field: DataTable
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: CheatTestGearEnchantOptionGradeResponse
Field: UpgradeCountsByEnchantSlot
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatSetRealmAccountPresentRegisterBlockResponse
Field: TypeName
Code:


Opcode: CheatSetRealmAccountPresentRegisterBlockResponse
Field: CheatSetRealmAccountPresentRegisterBlockResponse
Code:


Opcode: PartyConfirmJoinApplicationResponse
Field: IsApproved
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSetIgnoreCovenantMarketUsableJoinElapsedTimeRequest
Field: IgnoreCovenantMarketUsableJoinElapsedTime
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantDiplomacyInviteReinforcementRequest
Field: RewardCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ItemAcquireSourceInfo
Field: AcquireSourceAdditionalParameter
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantSynchronizeMemberRefreshedContributionInfosNotify
Field: CovenantMemberContributionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantMemberContributionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PowerSavingModeRewardInfo
Field: TypeName
Code:


Opcode: PowerSavingModeRewardInfo
Field: PowerSavingModeRewardInfo
Code:


Opcode: CovenantRealmTransferRegisterRequest
Field: PlayerGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: WorldEventInfo
Field: TypeName
Code:


Opcode: WorldEventInfo
Field: WorldEventInfo
Code:


Opcode: PlayerSkillAcquireResponse
Field: AutoUseRootSkillCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerCovenantSupportInfo
Field: HasCovenantSupportableFollower
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: BattalionLeaveFailResponse
Field: TypeName
Code:


Opcode: BattalionLeaveFailResponse
Field: BattalionLeaveFailResponse
Code:


Opcode: BattalionCreateResponse
Field: TypeName
Code:


Opcode: BattalionCreateResponse
Field: BattalionCreateResponse
Code:


Opcode: InstanceEventAffectSourceInfo
Field: TypeName
Code:


Opcode: InstanceEventAffectSourceInfo
Field: InstanceEventAffectSourceInfo
Code:


Opcode: CovenantPayDividendRequest
Field: DividendInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StackableItemMultipleUseResponse
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x48));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: StackableItemMultipleUseResponse
Field: PlayerInventoryItemAddInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x98));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: StackableItemMultipleUseResponse
Field: IsUpgradeSlayingGrade
Code:
bVar8 = *(char *)(in_x0 + 0xb0) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StackableItemMultipleUseResponse
Field: AmityDelta
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb8));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__n

Opcode: ItemAdditionalInfo
Field: TypeName
Code:


Opcode: ItemAdditionalInfo
Field: ItemAdditionalInfo
Code:


Opcode: CheatAcquireAllFollowersResponse
Field: TypeName
Code:


Opcode: CheatAcquireAllFollowersResponse
Field: CheatAcquireAllFollowersResponse
Code:


Opcode: ItemAcquireNotify
Field: ItemIndices
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndex,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: BasicAchievementPrivateChannelOpenRequest
Field: TypeName
Code:


Opcode: BasicAchievementPrivateChannelOpenRequest
Field: BasicAchievementPrivateChannelOpenRequest
Code:


Opcode: PartySharedAttackTargetNotify
Field: SharedAttackTargetInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CharacterRecordInfo
Field: IsPvpStatsAffectedCharacter
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x90) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: ChatEntityInfo
Field: PlayerHarmfulTextOnChatViolationInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantDiplomacySummaryInfo
Field: AllianceCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacySummaryInfo
Field: HostilityCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionInitializeInfo
Field: RealmHasSpaceAvailable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ErFrontServerSessionInitializeInfo
Field: PopupCommunityAutomatically
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: CovenantLivingTotemStatsInfoQueryResponse
Field: LivingTotemStatsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantLivingTotemWithStatsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TimeCreviceCovenantPvpScoreRankingViewInfo
Field: AdditionalSourceInfo
Code:
if (*(long **)(in_x0 + 0x68) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x68) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: BattalionTargetLocationSetFailResponse
Field: TypeName
Code:


Opcode: BattalionTargetLocationSetFailResponse
Field: BattalionTargetLocationSetFailResponse
Code:


Opcode: CovenantCampBuildingCraftResponse
Field: TypeName
Code:


Opcode: CovenantCampBuildingCraftResponse
Field: CovenantCampBuildingCraftResponse
Code:


Opcode: BattalionBattalionWarpRequest
Field: TypeName
Code:


Opcode: BattalionBattalionWarpRequest
Field: BattalionBattalionWarpRequest
Code:


Opcode: CheatOverwriteCrossRealmRankingBoardResponse
Field: TypeName
Code:


Opcode: CheatOverwriteCrossRealmRankingBoardResponse
Field: CheatOverwriteCrossRealmRankingBoardResponse
Code:


Opcode: LastDeathRecordDeleteResponse
Field: TypeName
Code:


Opcode: LastDeathRecordDeleteResponse
Field: LastDeathRecordDeleteResponse
Code:


Opcode: CheatChangeLastLevelForLevelUpNotifyResponse
Field: TypeName
Code:


Opcode: CheatChangeLastLevelForLevelUpNotifyResponse
Field: CheatChangeLastLevelForLevelUpNotifyResponse
Code:


Opcode: CovenantSynchronizeMemberContributionInfoNotify
Field: CovenantMemberContributionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantMemberContributionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PushNotificationOptionModifyRequest
Field: IsEnabled
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: PushNotificationOptionModifyRequest
Field: IsNotifiedEvenWhenConnected
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: CheatApplyCollectionSetFailResponse
Field: TypeName
Code:


Opcode: CheatApplyCollectionSetFailResponse
Field: CheatApplyCollectionSetFailResponse
Code:


Opcode: CharacterMoveNotify
Field: CharacterMoveInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookInfoUpdateNotify
Field: CategoryCuidToNodeStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookInfoUpdateNotify
Field: CategoryCuidToCollectionInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzMonsterBookCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzMonsterBookCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCovenantRubyShopResetMerchandiseBuyCountResponse
Field: TypeName
Code:


Opcode: CheatCovenantRubyShopResetMerchandiseBuyCountResponse
Field: CheatCovenantRubyShopResetMerchandiseBuyCountResponse
Code:


Opcode: DeathPenaltyRecordInfoAddNotify
Field: DeathPenaltyRecordInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: LootNotify
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: LootNotify
Field: IsErosionInstallerReward
Code:
bVar8 = *(char *)(in_x0 + 0xa8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FollowerDispatchOrderInfo
Field: UseDispatchAutomation
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SeasonPassAchievementUpdateNotify
Field: SeasonPassAchievementInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmIntegrationBattleResultInitialDataNotify
Field: RealmResults
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationBattleRealmResult,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionLeaderChangeRequest
Field: IsAccept
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: DatatoolHandshakeResponse
Field: ClientData
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: CheatAccountAffectDetachAllResponse
Field: TypeName
Code:


Opcode: CheatAccountAffectDetachAllResponse
Field: CheatAccountAffectDetachAllResponse
Code:


Opcode: ShopCashMerchandiseBuyRequest
Field: MerchandisePaymentInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatDeleteChatCovenantResponse
Field: TypeName
Code:


Opcode: CheatDeleteChatCovenantResponse
Field: CheatDeleteChatCovenantResponse
Code:


Opcode: SessionKickNotify
Field: BanInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BuildingWorkOrderInfo
Field: IsRecommended
Code:
bVar9 = *(char *)(in_x0 + 0x34) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatDiscoverAllSelfieDoodadSpawnersResponse
Field: TypeName
Code:


Opcode: CheatDiscoverAllSelfieDoodadSpawnersResponse
Field: CheatDiscoverAllSelfieDoodadSpawnersResponse
Code:


Opcode: StrongholdTaxUpdateResponse
Field: TypeName
Code:


Opcode: StrongholdTaxUpdateResponse
Field: StrongholdTaxUpdateResponse
Code:


Opcode: SpellstoneAdditionalBuffStatsInfo
Field: IsImmuneToHealthPointsGain
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: IsImmuneToManaPointsLoss
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: IsImmuneToManaPointsGain
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: CharacterStatChangesByStatKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAdjustableStatKindType,TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__nd

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: StatChangeIncreaseRatiosByStatKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAdjustableStatKindType,float,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,float,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x88));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__nd

Opcode: SpellstoneAdditionalBuffStatsInfo
Field: ProtectHealthPointsSettingStatKindByStatKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAdjustableStatKindType,float,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,float,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xe0));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__nd

Opcode: ZlibCompressHandshakeResult
Field: TypeName
Code:


Opcode: ZlibCompressHandshakeResult
Field: TozNetwork.Handshake.Compressor.ZlibCompressHandshakeResult
Code:


Opcode: CoreMaterialItemInfo
Field: TypeName
Code:


Opcode: CoreMaterialItemInfo
Field: CoreMaterialItemInfo
Code:


Opcode: TargetScanShareNotify
Field: ScannedTargetInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,TSharedPtr<FTzSharedTargetCharacterInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,TSharedPtr<FTzSharedTargetCharacterInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionCancelWaitingQueueRequest
Field: TypeName
Code:


Opcode: ErFrontServerSessionCancelWaitingQueueRequest
Field: ErFrontServerSessionCancelWaitingQueueRequest
Code:


Opcode: SpellstoneAdditionalInfo
Field: SubOptionCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: MailAttachmentsInfo
Field: Items
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailAttachmentsInfo
Field: Currencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMailAttachmentCurrencyInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantDiplomacyAddOrUpdateNotify
Field: CovenantDiplomacyInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountWarehouseItemRetrieveRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ExpeditionInitialDataNotify
Field: ExpeditionSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzExpeditionSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzExpeditionSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCampaignInfo
Field: ActiveCampaignProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<FTzCuid,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<FTzCuid,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCampaignInfo
Field: CampaignTicketInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCampaignTicketInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCampaignTicketInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerMovePathInfo
Field: RoadJunctionIds
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FollowerMovePathInfo
Field: PathToFirstRoadJunction
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FollowerMovePathInfo
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x50));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: PlayerFieldEnterNotify
Field: TypeName
Code:


Opcode: PlayerFieldEnterNotify
Field: PlayerFieldEnterNotify
Code:


Opcode: PlayerMarketTransactionDelayedSellRegisterProcessNotify
Field: TypeName
Code:


Opcode: PlayerMarketTransactionDelayedSellRegisterProcessNotify
Field: PlayerMarketTransactionDelayedSellRegisterProcessNotify
Code:


Opcode: CovenantJoinApplyInfoUpdatedNotify
Field: TypeName
Code:


Opcode: CovenantJoinApplyInfoUpdatedNotify
Field: CovenantJoinApplyInfoUpdatedNotify
Code:


Opcode: ShopCashMerchandiseReceiveResponse
Field: ReceiveGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FollowerCoreInfo
Field: ReturnReasonAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x60) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x60) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: ErFrontServerSessionReinitializeInfo
Field: PlayerSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionReinitializeInfo
Field: PopupCommunityAutomatically
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x78) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: PartySummaryInfo
Field: IsEnabled
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: PartySummaryInfo
Field: PartyMemberCoreInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPartyMemberCoreInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: PartySummaryInfo
Field: TargetLocationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzTargetLocationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: CovenantCampaignInfo
Field: ActiveCampaignProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<FTzCuid,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<FTzCuid,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCampaignInfo
Field: CovenantCampaignProgressInfo
Code:
if (*(long **)(in_x0 + 0x60) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x60) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatPvpScoreRankingSourceInfoChangeResponse
Field: TypeName
Code:


Opcode: CheatPvpScoreRankingSourceInfoChangeResponse
Field: CheatPvpScoreRankingSourceInfoChangeResponse
Code:


Opcode: CheatRealmIntegrationPreprocessingRequest
Field: TypeName
Code:


Opcode: CheatRealmIntegrationPreprocessingRequest
Field: CheatRealmIntegrationPreprocessingRequest
Code:


Opcode: CheatAccomplishQuestRequest
Field: ReceiveReward
Code:
bVar8 = *(char *)(in_x0 + 0x2c) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RealmAccountWarehouseAutoStoreSettingUpdateResponse
Field: TypeName
Code:


Opcode: RealmAccountWarehouseAutoStoreSettingUpdateResponse
Field: RealmAccountWarehouseAutoStoreSettingUpdateResponse
Code:


Opcode: CovenantBattalionExpeditionFailNotify
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillStageInfo
Field: SkillAffectTargetGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SkillStageInfo
Field: SkillAffectTargetAffectInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSkillAffectTargetAffectInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillStageInfo
Field: SkillShieldWallAffectInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSkillShieldWallAffectInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x48));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillStageInfo
Field: SkillTargetingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSkillTargetingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StanceAcquireNotify
Field: IsStanceInstallFreeChanceEnabled
Code:
bVar10 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar10) {
    lVar1 = 5;
  }
  pcVar14 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar10) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar14,puVar3,lVar1,0x17);
  pcVar14[lVar1] = '\0';
  uVar13 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar14;
  if ((local_198 & 1) != 0) {
    uVar13 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantSupportApplyResponse
Field: CovenantSupportedFollowerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BasicAchievementPrivateChannelCloseResponse
Field: TypeName
Code:


Opcode: BasicAchievementPrivateChannelCloseResponse
Field: BasicAchievementPrivateChannelCloseResponse
Code:


Opcode: SchemaColumn
Field: DeployType
Code:
auVar11 = DatatoolReferenceNative::to_string(*(DeployType *)(in_x0 + 0x10));
  TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize(auVar11._0_8_,auVar11._8_8_);
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: SchemaColumn
Field: DataType
Code:
auVar11 = DatatoolReferenceNative::to_string(*(DataType *)(in_x0 + 0x14));
  TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize(auVar11._0_8_,auVar11._8_8_);
  uVar3 = (ulong)((byte)local_198 >> 1);
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: SchemaColumn
Field: Key
Code:
bVar7 = *(char *)(in_x0 + 0x18) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SchemaColumn
Field: Comment
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x20),(basic_string *)pcVar9);
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: SchemaColumn
Field: Name
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x38),(basic_string *)pcVar10);
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: MonsterBookInfo
Field: CategoryCuidToNodeStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookInfo
Field: CategoryCuidToCollectionInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzMonsterBookCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzMonsterBookCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookInfo
Field: CategoryCuidToFreeAnalysisCount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookInfo
Field: CategoryCuidToAnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyQuerySummaryInfoListResponse
Field: PartySummaryInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPartySummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingAccessPermissionNotify
Field: BuildingSubscriptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzBuildingSubscriptionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingSubscriptionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ReceivedRewardInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x50));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: ReceivedRewardInfo
Field: IsAnyRewardSentByMail
Code:
bVar6 = *(char *)(in_x0 + 0xa0) == '\0';
  lVar1 = 4;
  if (bVar6) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar6) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: ReceivedRewardInfo
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xe8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: ReceivedRewardInfo
Field: IsUpgradeSlayingGrade
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x138) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAcquireFollowerSetResponse
Field: TypeName
Code:


Opcode: CheatAcquireFollowerSetResponse
Field: CheatAcquireFollowerSetResponse
Code:


Opcode: CheatSetStrongholdOccupyingCovenantResponse
Field: TypeName
Code:


Opcode: CheatSetStrongholdOccupyingCovenantResponse
Field: CheatSetStrongholdOccupyingCovenantResponse
Code:


Opcode: FollowerSquadResetRequest
Field: TypeName
Code:


Opcode: FollowerSquadResetRequest
Field: FollowerSquadResetRequest
Code:


Opcode: BasicAchievementPrivateChannelCloseRequest
Field: TypeName
Code:


Opcode: BasicAchievementPrivateChannelCloseRequest
Field: BasicAchievementPrivateChannelCloseRequest
Code:


Opcode: MountInteractionStateNotify
Field: Info
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: BuffStatsInfo
Field: CharacterStatChanges
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: CheatDetachAllBuffsRequest
Field: TypeName
Code:


Opcode: CheatDetachAllBuffsRequest
Field: CheatDetachAllBuffsRequest
Code:


Opcode: ContentsUnlockInitializeNotify
Field: UnusedContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzContentsUnlockKindType,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzContentsUnlockKindType,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionInitializeInfoNotify
Field: PlayerSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: ErFrontServerSessionInitializeInfoNotify
Field: CanCheatCommand
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x78) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ErFrontServerSessionInitializeInfoNotify
Field: RealmIntegrationRealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x80));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingConstructResponse
Field: TypeName
Code:


Opcode: StrongholdBuildingConstructResponse
Field: StrongholdBuildingConstructResponse
Code:


Opcode: FollowerCollectionInfo
Field: CollectionStatus
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzFollowerCollectionTopExperienceInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzFollowerCollectionTopExperienceInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TerritoryErosionItemConfigurationModifyResponse
Field: TypeName
Code:


Opcode: TerritoryErosionItemConfigurationModifyResponse
Field: TerritoryErosionItemConfigurationModifyResponse
Code:


Opcode: CharacterMoveOrbitalToLocationParameterInfo
Field: IsClockwise
Code:
bVar8 = *(char *)(in_x0 + 0x14) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MarketStrongholdTaxInfoResponse
Field: MarketStrongholdTaxInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketStrongholdTaxInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearCovenantResearchResponse
Field: TypeName
Code:


Opcode: CheatClearCovenantResearchResponse
Field: CheatClearCovenantResearchResponse
Code:


Opcode: ReinforcementInfo
Field: IsInBattle
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ReinforcementInfo
Field: RewardCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ArquiAttunementInfo
Field: LevelByArquiAttunementCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ArquiAttunementInfo
Field: AetherOptionLevelByCategoryCuidAndOptionCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketTransactionProcessInfo
Field: IsStorable
Code:
bVar7 = *(char *)(in_x0 + 0x40) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar7) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__put_c

Opcode: PlayerMarketTransactionProcessInfo
Field: ItemAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar13 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerMarketTransactionProcessInfo
Field: IsDirty
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x120) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayRecoveringHealthPointsStateInfo
Field: TypeName
Code:


Opcode: ServerDrivenPlayRecoveringHealthPointsStateInfo
Field: ServerDrivenPlayRecoveringHealthPointsStateInfo
Code:


Opcode: ServerDrivenPlayStartRequest
Field: ResupplyOnStart
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ErInterServerMigrationAuthenticateInfo
Field: TypeName
Code:


Opcode: ErInterServerMigrationAuthenticateInfo
Field: ErInterServerMigrationAuthenticateInfo
Code:


Opcode: CovenantBattalionQuerySummaryInfoListRequest
Field: TypeName
Code:


Opcode: CovenantBattalionQuerySummaryInfoListRequest
Field: CovenantBattalionQuerySummaryInfoListRequest
Code:


Opcode: ExpeditionNpcSummonWaveInfo
Field: NpcDeathCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketStrongholdTaxInfoRequest
Field: TypeName
Code:


Opcode: MarketStrongholdTaxInfoRequest
Field: MarketStrongholdTaxInfoRequest
Code:


Opcode: MailsReceiveAttachmentsInTabResponse
Field: ReceivedMailGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: StrongholdBattleStatisticsUpdateInfo
Field: StrongholdBattleStatisticsInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatFinishFollowerWorkResponse
Field: TypeName
Code:


Opcode: CheatFinishFollowerWorkResponse
Field: CheatFinishFollowerWorkResponse
Code:


Opcode: AlertPlayerQueryRequest
Field: TypeName
Code:


Opcode: AlertPlayerQueryRequest
Field: AlertPlayerQueryRequest
Code:


Opcode: RealmIntegrationHidePopupRequest
Field: TypeName
Code:


Opcode: RealmIntegrationHidePopupRequest
Field: RealmIntegrationHidePopupRequest
Code:


Opcode: CovenantWatchDetailInfoQueryResponse
Field: CovenantWatchDetailInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantWatchDetailInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DeathPenaltyAutoRecoveryInfo
Field: IsFreeRecovery
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantSynchronizeMemberInfosRequest
Field: TypeName
Code:


Opcode: CovenantSynchronizeMemberInfosRequest
Field: CovenantSynchronizeMemberInfosRequest
Code:


Opcode: ErTozInitializeMessage
Field: TypeName
Code:


Opcode: ErTozInitializeMessage
Field: ErTozInitializeMessage
Code:


Opcode: PvpScoreRankingViewInfo
Field: AdditionalSourceInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAddServerTimeResponse
Field: TypeName
Code:


Opcode: CheatAddServerTimeResponse
Field: CheatAddServerTimeResponse
Code:


Opcode: PlayerMarketSaleGoodsListResponse
Field: MarketSellerGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationQueryRealmAccountInfoResponse
Field: RealmIntegrationRealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCurrencyInfo
Field: PointCurrencyContainerInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantMemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x88));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: OccupiedStrongholdInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzStrongholdInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzStrongholdInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x128));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: HavenOrganizationStatsDetailInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzHavenOrganizationStatsDetailInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzHavenOrganizationStatsDetailInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x178));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantMemberRoleInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantMemberRoleInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x1e8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantHighestUpgradedBuildingLevelInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1f8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantLivingTotemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantLivingTotemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x250));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantResearchInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCovenantResearchInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCovenantResearchInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x260));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: PlayerLocationMonitoringInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerLocationMonitoringInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x2c0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantOutLinkInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzCovenantOutLinkKindType,TSharedPtr<FTzCovenantOutLinkInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzCovenantOutLinkKindType,TSharedPtr<FTzCovenantOutLinkInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x2d0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: CovenantInfo
Field: CovenantCampaignInfo
Code:
if (*(long **)(in_x0 + 0x328) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x328) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantInfo
Field: NeedChangeName
Code:
bVar7 = *(char *)(in_x0 + 0x380) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar7) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: TlsLikeEncryptPremasterSecret
Field: PremasterSecret
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseBuyResponse
Field: MerchandisePaymentInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: NpcOccupationViewInfo
Field: NpcOccupationScoreCovenantViewInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantViewInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantViewInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingPurifyResponse
Field: TypeName
Code:


Opcode: StrongholdBuildingPurifyResponse
Field: StrongholdBuildingPurifyResponse
Code:


Opcode: CheatSkillTableReloadRequest
Field: TypeName
Code:


Opcode: CheatSkillTableReloadRequest
Field: CheatSkillTableReloadRequest
Code:


Opcode: PartyOptionInfo
Field: CanInviteOrJoinApplyOnlyFriendOrSameCovenant
Code:
bVar9 = *(char *)(in_x0 + 0x36) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar2,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar13;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PartyOptionInfo
Field: IsAutomatedNewComerApproval
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x37) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar2,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAnniversaryAchievementAccomplishAllResponse
Field: TypeName
Code:


Opcode: CheatAnniversaryAchievementAccomplishAllResponse
Field: CheatAnniversaryAchievementAccomplishAllResponse
Code:


Opcode: PlayerSlotExpandRequest
Field: TypeName
Code:


Opcode: PlayerSlotExpandRequest
Field: PlayerSlotExpandRequest
Code:


Opcode: CovenantSearchInfo
Field: OccupiedStrongholdCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar12 = local_198 >> 1 & 0x7f;
  pcVar13 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__n

Opcode: CovenantSearchInfo
Field: IsJoinApplied
Code:
bVar9 = *(char *)(in_x0 + 0x98) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar9) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CheatClearCollectionRequest
Field: TypeName
Code:


Opcode: CheatClearCollectionRequest
Field: CheatClearCollectionRequest
Code:


Opcode: CheatUpdateAchievementMissionProgressCountsResponse
Field: TypeName
Code:


Opcode: CheatUpdateAchievementMissionProgressCountsResponse
Field: CheatUpdateAchievementMissionProgressCountsResponse
Code:


Opcode: FavoriteCollectionRegisterResponse
Field: IsRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantSupportApplyRequest
Field: FollowerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerStanceInfo
Field: AcquiredStances
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzStanceType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: PlayerStanceInfo
Field: IsStanceInstallFreeChanceEnabled
Code:
bVar9 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar9) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CheatUpgradeBuildingResponse
Field: TypeName
Code:


Opcode: CheatUpgradeBuildingResponse
Field: CheatUpgradeBuildingResponse
Code:


Opcode: OccupiableNpcInfoBulkUpdateNotify
Field: OccupiableNpcInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzOccupiableNpcInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcInfoBulkUpdateNotify
Field: NxLogBaseParameterInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantReturnHavenChangeFailResponse
Field: TypeName
Code:


Opcode: CovenantReturnHavenChangeFailResponse
Field: CovenantReturnHavenChangeFailResponse
Code:


Opcode: CovenantDiplomacyWithdrawAllianceFailResponse
Field: TypeName
Code:


Opcode: CovenantDiplomacyWithdrawAllianceFailResponse
Field: CovenantDiplomacyWithdrawAllianceFailResponse
Code:


Opcode: CheatResetDiscoveredSelfieDoodadSpawnersResponse
Field: TypeName
Code:


Opcode: CheatResetDiscoveredSelfieDoodadSpawnersResponse
Field: CheatResetDiscoveredSelfieDoodadSpawnersResponse
Code:


Opcode: RealmIntegrationBattleWarpRequest
Field: TypeName
Code:


Opcode: RealmIntegrationBattleWarpRequest
Field: RealmIntegrationBattleWarpRequest
Code:


Opcode: SpawnLayerDeactivateNotify
Field: IsPermanentSpawnLayer
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerDeleteConditionCheckResponse
Field: IsInCovenant
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: PlayerDeleteConditionCheckResponse
Field: HasSaleGoodsInMarket
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FollowerMovePathInfoResponse
Field: MovePathInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzFollowerMovePathInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzFollowerMovePathInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionJoinNotify
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatClearGearResponse
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzEquipmentPresetIndexType,TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzEquipmentPresetIndexType,TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerReturnReasonAdditionalInfo
Field: TypeName
Code:


Opcode: FollowerReturnReasonAdditionalInfo
Field: FollowerReturnReasonAdditionalInfo
Code:


Opcode: PowerSavingModeEndNotify
Field: TypeName
Code:


Opcode: PowerSavingModeEndNotify
Field: PowerSavingModeEndNotify
Code:


Opcode: InGameNotificationDeleteCategoryNotify
Field: DeletedGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: StrongholdBattleCovenantBattalionStrategicObjectiveResetFailResponse
Field: TypeName
Code:


Opcode: StrongholdBattleCovenantBattalionStrategicObjectiveResetFailResponse
Field: StrongholdBattleCovenantBattalionStrategicObjectiveResetFailResponse
Code:


Opcode: SingleItemSelector
Field: TypeName
Code:


Opcode: SingleItemSelector
Field: SingleItemSelector
Code:


Opcode: FieldEnterCompleteRequest
Field: CharacterMoveInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DiplomacyChatCovenantSummaryInfoUpdateNotify
Field: DiplomacyChatCovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzDiplomacyChatCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillAffectInfo
Field: TypeName
Code:


Opcode: SkillAffectInfo
Field: SkillAffectInfo
Code:


Opcode: CovenantQueryJoinAppliedCovenantSummaryInfoListResponse
Field: CovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingDemolishRequest
Field: IsCompleteImmediately
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBuildingRepairResponse
Field: TypeName
Code:


Opcode: StrongholdBuildingRepairResponse
Field: StrongholdBuildingRepairResponse
Code:


Opcode: WorldMapPvpBattleKillDeathInfoUpdateNotify
Field: VictimPvpBattleKillDeathCountInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: WorldMapPvpBattleKillDeathInfoUpdateNotify
Field: KillerPvpBattleKillDeathCountInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayEndedNotify
Field: RewardInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookNodeAcquirableStateInfo
Field: NpcCuidToKillCount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatAccountAffectDetachAllRequest
Field: TypeName
Code:


Opcode: CheatAccountAffectDetachAllRequest
Field: CheatAccountAffectDetachAllRequest
Code:


Opcode: RealmIntegrationRealmAccountInfo
Field: PlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationPlayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopRegisteredGoodsUpdateNotify
Field: RegisteredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatChangeBulkCharacterMoveNotifyIntervalResponse
Field: TypeName
Code:


Opcode: CheatChangeBulkCharacterMoveNotifyIntervalResponse
Field: CheatChangeBulkCharacterMoveNotifyIntervalResponse
Code:


Opcode: StrongholdBuildingDowngradeRequest
Field: IsCompleteImmediately
Code:
bVar8 = *(char *)(in_x0 + 0x1c) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ResourceHistoryInfo
Field: IncomeHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzResourceKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzResourceKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ResourceHistoryInfo
Field: ExpenseHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzResourceKindType,TMap<ETzResourceExpenseKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzResourceExpenseKindType,long_long,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzResourceKindType,TMap<ETzResourceExpenseKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzResourceExpenseKindType,long_long,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErosionInfo
Field: IsWithoutPermission
Code:
bVar8 = *(char *)(in_x0 + 0xf8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantLeaveRequest
Field: TypeName
Code:


Opcode: CovenantLeaveRequest
Field: CovenantLeaveRequest
Code:


Opcode: CheatChangeStrongholdTaxRateResponse
Field: TypeName
Code:


Opcode: CheatChangeStrongholdTaxRateResponse
Field: CheatChangeStrongholdTaxRateResponse
Code:


Opcode: CspSupporterInfo
Field: ChannelInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCspChannelInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: ExpeditionBossNpcLocationInfoSynchronizeNotify
Field: IsAlive
Code:
bVar7 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: BuildingWorkRequestInfo
Field: BaseInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantTradeCategoryQueryResponse
Field: CategoryItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeCategoryItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CraftRequest
Field: MaterialGroupOrderList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CraftRequest
Field: MaterialCuidToItemSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzItemSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzItemSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillUseOptionInfo
Field: UseCycle
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: SkillUseOptionInfo
Field: UseCycleInPvp
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1c) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar8 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantJoinedStrongholdBattleInfoAddNotify
Field: JoinedStrongholdBattleInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantJoinedStrongholdBattleInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailUnreadNotify
Field: UnreadCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzMailTabType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzMailTabType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearEquippedSpellstonesRequest
Field: TypeName
Code:


Opcode: CheatClearEquippedSpellstonesRequest
Field: CheatClearEquippedSpellstonesRequest
Code:


Opcode: OccupiableNpcSummaryUpdateDataNotify
Field: OccupiableNpcSummaryInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: GearMultipleEnhanceResponse
Field: GearEnhancementResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnhancementResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InGameNotificationInfo
Field: AdditionalCuidParams
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: CovenantTradeSalesListUpdateNotify
Field: AddedOrUpdatedGoodsSalesInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: NpcKillCountActionInfo
Field: TypeName
Code:


Opcode: NpcKillCountActionInfo
Field: NpcKillCountActionInfo
Code:


Opcode: CostumeInfo
Field: HasPreviouslyEquippedGuise
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CostumeInfo
Field: IsWearUniform
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x31) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__pu

Opcode: CrossRealmCovenantSearchResponse
Field: CovenantSearchInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSearchInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantUpdateJoinKindFailResponse
Field: TypeName
Code:


Opcode: CovenantUpdateJoinKindFailResponse
Field: CovenantUpdateJoinKindFailResponse
Code:


Opcode: CovenantLeaderDividendResultInfo
Field: TypeName
Code:


Opcode: CovenantLeaderDividendResultInfo
Field: CovenantLeaderDividendResultInfo
Code:


Opcode: SeasonPassLevelRewardParameter
Field: RewardedLevels
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookNodeAnalysisLockSwitchRequest
Field: IsAnalysisLocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PreregistrationInfo
Field: IsAnyPlayerCreated
Code:
bVar7 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PreregistrationInfo
Field: IsReservedPlayerCreated
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x29) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantUpdateCovenantPermissionsInfosResponse
Field: CovenantPermissionsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSkillTableReloadResponse
Field: TypeName
Code:


Opcode: CheatSkillTableReloadResponse
Field: CheatSkillTableReloadResponse
Code:


Opcode: CheatResurrectAllFollowerResponse
Field: TypeName
Code:


Opcode: CheatResurrectAllFollowerResponse
Field: CheatResurrectAllFollowerResponse
Code:


Opcode: RealmAccountIntegrationInfo
Field: HidePopup
Code:
bVar7 = *(char *)(in_x0 + 0x38) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RealmAccountIntegrationInfo
Field: Deleted
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantBattalionExpeditionCompleteNotify
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatInventoryIncreaseWeightLimitResponse
Field: TypeName
Code:


Opcode: CheatInventoryIncreaseWeightLimitResponse
Field: CheatInventoryIncreaseWeightLimitResponse
Code:


Opcode: PartyLeaveFailResponse
Field: TypeName
Code:


Opcode: PartyLeaveFailResponse
Field: PartyLeaveFailResponse
Code:


Opcode: CheatGetEnvironmentVariablesResponse
Field: Variables
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,FString,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,FString,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TlsLikeEncryptClientHello
Field: 
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CheatTestGearEnchantGradeResponse
Field: UpgradeCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGearEnchantGradeType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGearEnchantGradeType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TlsLikeEncryptServerCompleted
Field: TypeName
Code:


Opcode: TlsLikeEncryptServerCompleted
Field: TozNetwork.Handshake.TlsLikeEncryptor.TlsLikeEncryptServerCompleted
Code:


Opcode: CovenantBattalionExpeditionLivingTotemDepartureFailResponse
Field: TypeName
Code:


Opcode: CovenantBattalionExpeditionLivingTotemDepartureFailResponse
Field: CovenantBattalionExpeditionLivingTotemDepartureFailResponse
Code:


Opcode: GuiseUnequipRequest
Field: TypeName
Code:


Opcode: GuiseUnequipRequest
Field: GuiseUnequipRequest
Code:


Opcode: InventoryOptionInfo
Field: IsEquippedItemVisible
Code:
bVar9 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleAttackSpireStartNotify
Field: TypeName
Code:


Opcode: StrongholdBattleAttackSpireStartNotify
Field: StrongholdBattleAttackSpireStartNotify
Code:


Opcode: PushNotificationOptionModifyResponse
Field: ModifiedPushNotificationOptionIsEnabled
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleUseSiegeWeaponSlotNotify
Field: StrongholdBattleAttackSiegeWeaponSlotInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleUseSiegeWeaponSlotNotify
Field: SiegeWeaponCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRecordsInfo
Field: GainedItems
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x50));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRecordsInfo
Field: ConsumedAffectItems
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzAffectItemKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAffectItemKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatFavorDailyCheckDateTimeResetRequest
Field: TypeName
Code:


Opcode: CheatFavorDailyCheckDateTimeResetRequest
Field: CheatFavorDailyCheckDateTimeResetRequest
Code:


Opcode: FieldMigrationReadyResponse
Field: TypeName
Code:


Opcode: FieldMigrationReadyResponse
Field: FieldMigrationReadyResponse
Code:


Opcode: MountCallingInfo
Field: IsImmediateBoarding
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MountCallingInfo
Field: IsMovingBoarding
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put

Opcode: CheatAddCovenantGiftSpecialGiftBoxPointsResponse
Field: TypeName
Code:


Opcode: CheatAddCovenantGiftSpecialGiftBoxPointsResponse
Field: CheatAddCovenantGiftSpecialGiftBoxPointsResponse
Code:


Opcode: StrongholdBuildingConstructRequest
Field: IsCompleteImmediately
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: MarketRecommendedItemQueryResponse
Field: RecommendedGearCuidByGearKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGearKindType,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGearKindType,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: MarketRecommendedItemQueryResponse
Field: RecommendedCoreMaterialCuidByGearKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGearKindType,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGearKindType,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CollectionSlotItemInfo
Field: IsEroded
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1c) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillAffectTargetStatsAffectInfo
Field: IsBlocked
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x11) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar2,0x17);
  pcVar11[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillAffectTargetStatsAffectInfo
Field: IsGlancingBlow
Code:
pcVar11 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x12) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar2,0x17);
  pcVar11[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk1::__put

Opcode: StrongholdBattleDefenseGunAttackStartNotify
Field: TypeName
Code:


Opcode: StrongholdBattleDefenseGunAttackStartNotify
Field: StrongholdBattleDefenseGunAttackStartNotify
Code:


Opcode: ChatQueryEntityInfoResponse
Field: LoggedIn
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantDiplomacyDeleteNotify
Field: CovenantDiplomacyInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MailCustomerServiceReplyLayoutInfo
Field: TypeName
Code:


Opcode: MailCustomerServiceReplyLayoutInfo
Field: MailCustomerServiceReplyLayoutInfo
Code:


Opcode: HavenOperationInfo
Field: RecommendedResourceKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzResourceKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatFavorDailyCheckDateTimeResetResponse
Field: TypeName
Code:


Opcode: CheatFavorDailyCheckDateTimeResetResponse
Field: CheatFavorDailyCheckDateTimeResetResponse
Code:


Opcode: CrossRealmSeasonEntryInitialDataNotify
Field: TypeName
Code:


Opcode: CrossRealmSeasonEntryInitialDataNotify
Field: CrossRealmSeasonEntryInitialDataNotify
Code:


Opcode: CheatCloseAllFogResponse
Field: TypeName
Code:


Opcode: CheatCloseAllFogResponse
Field: CheatCloseAllFogResponse
Code:


Opcode: AttackerListNotify
Field: AttackerPlayerGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcInfo
Field: IsRandomBuffNpc
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x80) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketSettlementInfo
Field: StrongholdSettlementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSettlementInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSettlementInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InventoryOverflowInfo
Field: OverflowedItemInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: ContentsUnlockNotify
Field: ContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzContentsUnlockKindType,DefaultKeyFuncs<ETzContentsUnlockKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferCheckInfo
Field: CovenantTradeGoodsSalesInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeGoodsSalesInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar4 = (ulong)((byte)local_198 >> 1);
  pcVar1 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk

Opcode: CovenantRealmTransferCheckInfo
Field: HasRegisteredShopGoodsInGeneralShop
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CovenantRealmTransferCheckInfo
Field: HasJoinedStrongholdBattle
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRealmTransferCheckInfo
Field: HasJoinedExpedition
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__pu

Opcode: CheatCovenantCompleteCampaignResponse
Field: TypeName
Code:


Opcode: CheatCovenantCompleteCampaignResponse
Field: CheatCovenantCompleteCampaignResponse
Code:


Opcode: StrongholdSummonWaveDefenseInfo
Field: CurrentWaveNpcKnockOutProgress
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xe0));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SessionLogoutResponse
Field: TypeName
Code:


Opcode: SessionLogoutResponse
Field: SessionLogoutResponse
Code:


Opcode: CheatAccomplishAllFavorRequest
Field: TypeName
Code:


Opcode: CheatAccomplishAllFavorRequest
Field: CheatAccomplishAllFavorRequest
Code:


Opcode: ExpeditionJoinedBattalionsInitialDataNotify
Field: ExpeditionJoinedBattalionList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantBattalionPublicSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSynchronizeJoinAppliedPlayerIsConnectedNotify
Field: IsConnected
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmSeasonTimeCreviceEntryUpdateDataNotify
Field: IsFull
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: HandshakeFailMessage
Field: Result
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: CheatAddStrongholdTaxAmountResponse
Field: TypeName
Code:


Opcode: CheatAddStrongholdTaxAmountResponse
Field: CheatAddStrongholdTaxAmountResponse
Code:


Opcode: CheatChangeRankingResponse
Field: TypeName
Code:


Opcode: CheatChangeRankingResponse
Field: CheatChangeRankingResponse
Code:


Opcode: MountBoardingInfo
Field: IsImmediateBoarding
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x34) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: MountBoardingInfo
Field: IsMovingBoarding
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x35) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatClearGearRequest
Field: TypeName
Code:


Opcode: CheatClearGearRequest
Field: CheatClearGearRequest
Code:


Opcode: ArquiruneInfo
Field: TypeName
Code:


Opcode: ArquiruneInfo
Field: ArquiruneInfo
Code:


Opcode: SpecialMovePointsExhaustionAffectSourceInfo
Field: TypeName
Code:


Opcode: SpecialMovePointsExhaustionAffectSourceInfo
Field: SpecialMovePointsExhaustionAffectSourceInfo
Code:


Opcode: CheatResetAllCooldownRequest
Field: TypeName
Code:


Opcode: CheatResetAllCooldownRequest
Field: CheatResetAllCooldownRequest
Code:


Opcode: CheatClearRealmIntegrationBattleScoreRequest
Field: TypeName
Code:


Opcode: CheatClearRealmIntegrationBattleScoreRequest
Field: CheatClearRealmIntegrationBattleScoreRequest
Code:


Opcode: CheatRemoveVeilResponse
Field: TypeName
Code:


Opcode: CheatRemoveVeilResponse
Field: CheatRemoveVeilResponse
Code:


Opcode: MountUpdateSkillSlotInfoResponse
Field: IsUsedForContinuousCombat
Code:
bVar9 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ServerDrivenPlayLootNotify
Field: RewardInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: OccupiableNpcSummaryInitialDataNotify
Field: OccupiableNpcSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzOccupiableNpcSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzOccupiableNpcSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerItemUseNotify
Field: Amity
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x40));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: PlayerItemUseNotify
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x90));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: PlayerItemUseNotify
Field: IsUpgradeSlayingGrade
Code:
bVar8 = *(char *)(in_x0 + 0xa8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerItemUseNotify
Field: AmityDelta
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb0));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__n

Opcode: CheatUpdatePlayerMissionCountResponse
Field: TypeName
Code:


Opcode: CheatUpdatePlayerMissionCountResponse
Field: CheatUpdatePlayerMissionCountResponse
Code:


Opcode: CovenantStartCampaignNotify
Field: CovenantCampaignProgressInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrategicObjectiveInfo
Field: SquadOrderList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatCovenantCreateRequest
Field: TypeName
Code:


Opcode: CheatCovenantCreateRequest
Field: CheatCovenantCreateRequest
Code:


Opcode: CraftQueryRequest
Field: TypeName
Code:


Opcode: CraftQueryRequest
Field: CraftQueryRequest
Code:


Opcode: PlayerLocationMonitoringRegisterResponse
Field: PlayerLocationMonitoringInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantCancelInvitationRequest
Field: PlayerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: GoldHistoryInfo
Field: IncomeHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGoldIncomeKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGoldIncomeKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GoldHistoryInfo
Field: ExpenseHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzGoldExpenseKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzGoldExpenseKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatTutorialResetAllResponse
Field: TypeName
Code:


Opcode: CheatTutorialResetAllResponse
Field: CheatTutorialResetAllResponse
Code:


Opcode: PartyMemberLootNotify
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: PartyMemberLootNotify
Field: IsErosionInstallerReward
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantCompleteCampaignNotify
Field: IsSuccess
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantCompleteCampaignNotify
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x38));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleCovenantBattalionStrategicObjectiveSetFailResponse
Field: TypeName
Code:


Opcode: StrongholdBattleCovenantBattalionStrategicObjectiveSetFailResponse
Field: StrongholdBattleCovenantBattalionStrategicObjectiveSetFailResponse
Code:


Opcode: ItemTransmuteResponse
Field: ItemTransmutationResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemTransmutationResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: AnniversaryRecordHistoryQueryResponse
Field: AnniversaryRecordHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAnniversaryRecordHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcUnOccupationUpdateDataNotify
Field: TypeName
Code:


Opcode: OccupiableNpcUnOccupationUpdateDataNotify
Field: OccupiableNpcUnOccupationUpdateDataNotify
Code:


Opcode: MarketFavoriteItemInfoQueryResponse
Field: MarketFavoriteItemInfosOnSale
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketFavoriteItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: MarketFavoriteItemInfoQueryResponse
Field: MarketFavoriteItemInfosNotOnSale
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketFavoriteItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantAddInvitationsNotify
Field: CovenantInvitationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantInvitationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CharacterMoveToLocationInfo
Field: MoveToDestinationParameterInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CharacterMoveToLocationInfo
Field: MoveToNextDestinationParameterInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ReturnPlaceDoodadInfo
Field: TypeName
Code:


Opcode: ReturnPlaceDoodadInfo
Field: ReturnPlaceDoodadInfo
Code:


Opcode: GearBatchCraftResponse
Field: CraftResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCraftResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearBatchCraftResponse
Field: CraftCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCraftCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCraftCountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x50));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRubyShopInitialDataNotify
Field: ShopInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCovenantRubyShopInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCovenantRubyShopInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRubyShopInitialDataNotify
Field: ShopMerchandiseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzCovenantRubyShopMerchandiseInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzCovenantRubyShopMerchandiseInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSetLocalServerPushRequest
Field: IsEnabled
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RealmAccountPresentCancelResponse
Field: TypeName
Code:


Opcode: RealmAccountPresentCancelResponse
Field: RealmAccountPresentCancelResponse
Code:


Opcode: ItemUpdateInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ItemUpdateInfo
Field: RemovedItemCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatTerritoryContaminationChangeResponse
Field: TypeName
Code:


Opcode: CheatTerritoryContaminationChangeResponse
Field: CheatTerritoryContaminationChangeResponse
Code:


Opcode: CovenantCampInfoListRequest
Field: TypeName
Code:


Opcode: CovenantCampInfoListRequest
Field: CovenantCampInfoListRequest
Code:


Opcode: StrongholdBattleUpdateSiegeWeaponSlotNotify
Field: StrongholdBattleAttackSiegeWeaponSlotInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleTeleportToSpireResponse
Field: TypeName
Code:


Opcode: StrongholdBattleTeleportToSpireResponse
Field: StrongholdBattleTeleportToSpireResponse
Code:


Opcode: CheatClearSeasonPassAchievementsResponse
Field: TypeName
Code:


Opcode: CheatClearSeasonPassAchievementsResponse
Field: CheatClearSeasonPassAchievementsResponse
Code:


Opcode: CovenantDonationRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar3 = (ulong)((byte)local_198 >> 1);
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk

Opcode: CovenantDonationRequest
Field: DonateEvenIfHavenInventoryIsFull
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ResurrectorSelectionExpiredNotify
Field: TypeName
Code:


Opcode: ResurrectorSelectionExpiredNotify
Field: ResurrectorSelectionExpiredNotify
Code:


Opcode: CheatCollectionUpdateNotify
Field: ActivatedCollectionCategoryCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCollectionUpdateNotify
Field: CollectionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCollectionProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCollectionProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x68));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillAutoUseInfoUpdateNotify
Field: RootSkillCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatChangeCashShopCheckBuyLimitOptionResponse
Field: IsIgnoreToCheckBuyLimit
Code:
bVar8 = *(char *)(in_x0 + 0xc) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleDefenseGunBulletNotEnoughNotify
Field: TypeName
Code:


Opcode: StrongholdBattleDefenseGunBulletNotEnoughNotify
Field: StrongholdBattleDefenseGunBulletNotEnoughNotify
Code:


Opcode: BossSpawnInfoUpdatedNotify
Field: BossSpawnInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAddRegionContentRechargedPlayTimeResponse
Field: TypeName
Code:


Opcode: CheatAddRegionContentRechargedPlayTimeResponse
Field: CheatAddRegionContentRechargedPlayTimeResponse
Code:


Opcode: PartyInfo
Field: PartyMemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPartyMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPartyMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyInfo
Field: TargetLocationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzTargetLocationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x78));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyInfo
Field: SharedAttackTargetInfo
Code:
if (*(long **)(in_x0 + 0x88) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x88) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PartyInfo
Field: SharedFocusTargetInfo
Code:
if (*(long **)(in_x0 + 0x98) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x98) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PartyTargetLocationSetFailResponse
Field: TypeName
Code:


Opcode: PartyTargetLocationSetFailResponse
Field: PartyTargetLocationSetFailResponse
Code:


Opcode: QuestProgressInfo
Field: StartByItem
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: QuestProgressInfo
Field: QuestMissionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzQuestMissionProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzQuestMissionProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__n

Opcode: ServerDrivenPlayOptionInfo
Field: SwitchAtCurrentLocationInsideHuntingSite
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayOptionInfo
Field: AutoSwitchOnDisconnected
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayOptionInfo
Field: UseAutoResupply
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ServerDrivenPlayOptionInfo
Field: UseAutoResupplyWhenDead
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ServerDrivenPlayOptionInfo
Field: UseHealthPointsRecovery
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ServerDrivenPlayOptionInfo
Field: EndWhenDeadInPvp
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountWarehouseAutoStoreSettingUpdateRequest
Field: AutoStoreSettings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SeasonPassAchievementInitializeDataNotify
Field: SeasonPassAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSeasonPassAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DefaultPreprocessResult
Field: Success
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar4 = 4;
  if (bVar8) {
    lVar4 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar5 = &DAT_0901b5c8;
  if (bVar8) {
    puVar5 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar4 << 1);
  __memcpy_chk(pcVar10,puVar5,lVar4,0x17);
  pcVar10[lVar4] = '\0';
  uVar6 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar6 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CheatCreateAndEquipGearResponse
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatCreateAndEquipGearResponse
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: FavoriteCollectionRegisterRequest
Field: IsRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: BulkCharacterMoveNotify
Field: CharacterMoveInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TArray<TSharedPtr<FTzCharacterMoveInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TArray<TSharedPtr<FTzCharacterMoveInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozTimeReconcile
Field: TypeName
Code:


Opcode: TozTimeReconcile
Field: TozNetwork.Protocol.TozTimeReconcile
Code:


Opcode: CovenantSettleAccountInfoQueryResponse
Field: CovenantSettleAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCovenantSettleAccountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCovenantSettleAccountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSettleAccountInfoQueryResponse
Field: StrongholdSettleAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzStrongholdSettleAccountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzStrongholdSettleAccountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ItemUseParameterInfo
Field: TypeName
Code:


Opcode: ItemUseParameterInfo
Field: ItemUseParameterInfo
Code:


Opcode: FindShortestTravelPathResponse
Field: PathToNearestRoadJunctionToStartLocation
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FindShortestTravelPathResponse
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x88));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FindShortestTravelPathResponse
Field: PathNotByRoad
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x98));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: FindShortestTravelPathResponse
Field: PathNotByRoadOneShotSpecialMoveIndices
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 200));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: CheatChangeActivationSpawnLayerRequest
Field: IsActivated
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FavorMissionDatabaseInfo
Field: TypeName
Code:


Opcode: FavorMissionDatabaseInfo
Field: FavorMissionDatabaseInfo
Code:


Opcode: CheatClearDeathPenaltyRecordRequest
Field: TypeName
Code:


Opcode: CheatClearDeathPenaltyRecordRequest
Field: CheatClearDeathPenaltyRecordRequest
Code:


Opcode: SessionInitializeInfo
Field: TypeName
Code:


Opcode: SessionInitializeInfo
Field: 
Code:


Opcode: SkillStageFlowCancelNotify
Field: IsCanceledStageAffectApplied
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatCovenantRealmTransferBlockResponse
Field: TypeName
Code:


Opcode: CheatCovenantRealmTransferBlockResponse
Field: CheatCovenantRealmTransferBlockResponse
Code:


Opcode: CheatBatchBossSpawnTimeRollbackRequest
Field: TypeName
Code:


Opcode: CheatBatchBossSpawnTimeRollbackRequest
Field: CheatBatchBossSpawnTimeRollbackRequest
Code:


Opcode: FollowerDispatchOverallInfoSynchronizeNotify
Field: DispatchOverallInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzFollowerDispatchOverallInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzFollowerDispatchOverallInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SendChatMessageFailResponse
Field: TypeName
Code:


Opcode: SendChatMessageFailResponse
Field: SendChatMessageFailResponse
Code:


Opcode: ChatNotify
Field: ChatInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BattalionQueryMemberCandidateListResponse
Field: BattalionMemberCandidateList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBattalionMemberSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailBuildingCraftLayoutInfo
Field: CraftItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCancelAllStrongholdProtectionRequest
Field: TypeName
Code:


Opcode: CheatCancelAllStrongholdProtectionRequest
Field: CheatCancelAllStrongholdProtectionRequest
Code:


Opcode: StrongholdBuildingQueryInfosResponse
Field: BuildingInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBuildingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatFissionPointsChangeResponse
Field: TypeName
Code:


Opcode: CheatFissionPointsChangeResponse
Field: CheatFissionPointsChangeResponse
Code:


Opcode: StrongholdReserveProtectionResponse
Field: TypeName
Code:


Opcode: StrongholdReserveProtectionResponse
Field: StrongholdReserveProtectionResponse
Code:


Opcode: CovenantSummaryInfo
Field: OccupiedStrongholdCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: CovenantSummaryInfo
Field: MainLivingTotemInfo
Code:
if (*(long **)(in_x0 + 0xb8) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0xb8) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatChangeBuildingHealthPointsResponse
Field: TypeName
Code:


Opcode: CheatChangeBuildingHealthPointsResponse
Field: CheatChangeBuildingHealthPointsResponse
Code:


Opcode: SkillCancelChargingRequest
Field: TypeName
Code:


Opcode: SkillCancelChargingRequest
Field: SkillCancelChargingRequest
Code:


Opcode: CheatSetExperiencePointsBlockedRequest
Field: IsExperiencePointsBlocked
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RegionContentPlayInfoNotify
Field: RegionPlayTimeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzRegionContentKindType,TSharedPtr<FTzRegionContentPlayInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzRegionContentKindType,TSharedPtr<FTzRegionContentPlayInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatDespawnBuildingResponse
Field: TypeName
Code:


Opcode: CheatDespawnBuildingResponse
Field: CheatDespawnBuildingResponse
Code:


Opcode: MarketFavoriteItemRegisterResponse
Field: IsOnSaleMarketFavoriteItemInfo
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmIntegrationBattleResultUpdateDataNotify
Field: RealmResults
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationBattleRealmResult,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSpawnGuardTowersAtOccupyingStrongholdsResponse
Field: TypeName
Code:


Opcode: CheatSpawnGuardTowersAtOccupyingStrongholdsResponse
Field: CheatSpawnGuardTowersAtOccupyingStrongholdsResponse
Code:


Opcode: BattalionInfo
Field: AllianceCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x28));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: CovenantGrantedSkillCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x78));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: SquadInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSquadInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0xe0));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: MemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzBattalionMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzBattalionMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf0));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: BattalionInfo
Field: IsJoinable
Code:
bVar7 = *(char *)(in_x0 + 0x160) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_c

Opcode: RPCInvokingMessage
Field: Param
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar9 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar9 = local_198 & 0xff;
  }
  uVar2 = local_190;
  pcVar10 = local_188;
  if ((uVar9 & 1) == 0) {
    uVar2 = uVar9 >> 1;
    pcVar10 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: RPCInvokingMessage
Field: FireAndForget
Code:
bVar7 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar7) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RPCInvokingMessage
Field: HasCancellationToken
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdCampaignBattleInfo
Field: CampaignProgressInfo
Code:
if (*(long **)(in_x0 + 0x120) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x120) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdCampaignBattleInfo
Field: TargetMissionCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x130));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: StrongholdCampaignBattleInfo
Field: CampaignConditionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCampaignConditionProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCampaignConditionProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x140));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSynchronizeHighestUpgradedBuildingLevelInfosNotify
Field: CovenantHighestUpgradedBuildingLevelInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionBattalionWarpConfirmRequest
Field: TypeName
Code:


Opcode: BattalionBattalionWarpConfirmRequest
Field: BattalionBattalionWarpConfirmRequest
Code:


Opcode: ItemAutoUseInfoUpdateNotify
Field: ItemCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatUnOccupyOccupiableNpcResponse
Field: TypeName
Code:


Opcode: CheatUnOccupyOccupiableNpcResponse
Field: CheatUnOccupyOccupiableNpcResponse
Code:


Opcode: CovenantSynchronizeMemberInfosResponse
Field: CovenantMemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BasicOrGrowthGuideAchievementUpdateNotify
Field: BasicOrGrowthGuideAchievementInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayEndRequest
Field: TypeName
Code:


Opcode: ServerDrivenPlayEndRequest
Field: ServerDrivenPlayEndRequest
Code:


Opcode: CovenantRealmTransferExecuteResponse
Field: TypeName
Code:


Opcode: CovenantRealmTransferExecuteResponse
Field: CovenantRealmTransferExecuteResponse
Code:


Opcode: CovenantTradeGoodsInfo
Field: ItemIndexWithCount
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantTradeGoodsInfo
Field: SellerInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemTransmuteRequest
Field: ItemGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: CheatTestGearEnchantOptionRequest
Field: GearEnchantOptionGrades
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,ETzGearEnchantGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,ETzGearEnchantGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: BattalionLeaderChangeFailResponse
Field: TypeName
Code:


Opcode: BattalionLeaderChangeFailResponse
Field: BattalionLeaderChangeFailResponse
Code:


Opcode: CheatAddDeathPenaltyRecordResponse
Field: TypeName
Code:


Opcode: CheatAddDeathPenaltyRecordResponse
Field: CheatAddDeathPenaltyRecordResponse
Code:


Opcode: ChatServerLoginRequest
Field: TypeName
Code:


Opcode: ChatServerLoginRequest
Field: ChatServerLoginRequest
Code:


Opcode: ExpeditionJoinedBattalionsAddOrUpdateNotify
Field: CovenantBattalionPublicSummaryInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatClearRealmIntegrationBattleAllScoreResponse
Field: TypeName
Code:


Opcode: CheatClearRealmIntegrationBattleAllScoreResponse
Field: CheatClearRealmIntegrationBattleAllScoreResponse
Code:


Opcode: InGameNotificationNotify
Field: InGameNotificationInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: FindRoadPathResultInfo
Field: RoadPathInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<FTzRoadPathInfo,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: FindRoadPathResultInfo
Field: PathNodeInfosToFirstRoadJunctionInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<FTzPathNodeInfo,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: BlockBuildingNotify
Field: IsBlock
Code:
bVar8 = *(char *)(in_x0 + 0x10) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: PvpRecordQueryRequest
Field: TypeName
Code:


Opcode: PvpRecordQueryRequest
Field: PvpRecordQueryRequest
Code:


Opcode: CheatClearSkillSlotQuickSlotAutoUseResponse
Field: AppliedPlayerSkillSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerSkillSlotUpdateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatAnniversaryAchievementResetAllRequest
Field: TypeName
Code:


Opcode: CheatAnniversaryAchievementResetAllRequest
Field: CheatAnniversaryAchievementResetAllRequest
Code:


Opcode: GatheringSiteInfo
Field: GatheringFollowerWorkInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzFollowerWorkOverallInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzFollowerWorkOverallInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1c0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErServerSessionInitializeInfo
Field: __base__
Code:


Opcode: RealmTransferRealmInfoListResponse
Field: RealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TArray<TSharedPtr<FTzRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmTransferRealmInfoListResponse
Field: RealmAccountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzUniverseAccountRealmAccountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmTransferRealmInfoListResponse
Field: AppliedRealmAccountGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: RewardItemIndexWithCount
Field: IsCovenantReward
Code:
bVar7 = *(char *)(in_x0 + 0x40) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CheatInstanceEventRunActionsResponse
Field: TypeName
Code:


Opcode: CheatInstanceEventRunActionsResponse
Field: CheatInstanceEventRunActionsResponse
Code:


Opcode: StrongholdBuildingCraftRequest
Field: IsCompleteImmediately
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRubyShopBuyResponse
Field: TypeName
Code:


Opcode: CovenantRubyShopBuyResponse
Field: CovenantRubyShopBuyResponse
Code:


Opcode: AlertPlayerRemoveNotify
Field: DeletedPlayerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: ErLoginServerAuthenticateInfo
Field: TypeName
Code:


Opcode: ErLoginServerAuthenticateInfo
Field: ErLoginServerAuthenticateInfo
Code:


Opcode: TlsLikeEncryptHandshakeResult
Field: TypeName
Code:


Opcode: TlsLikeEncryptHandshakeResult
Field: TozNetwork.Handshake.TlsLikeEncryptor.TlsLikeEncryptHandshakeResult
Code:


Opcode: ClanSponsorRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountPresentQueryRequest
Field: TypeName
Code:


Opcode: RealmAccountPresentQueryRequest
Field: RealmAccountPresentQueryRequest
Code:


Opcode: CheatRemoveRankingDummyDataResponse
Field: TypeName
Code:


Opcode: CheatRemoveRankingDummyDataResponse
Field: CheatRemoveRankingDummyDataResponse
Code:


Opcode: CovenantRealmTransferExecuteRequest
Field: UseItem
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantRealmTransferExecuteRequest
Field: UseCurrency
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdPlayerCancelTeleportNotify
Field: TypeName
Code:


Opcode: StrongholdPlayerCancelTeleportNotify
Field: StrongholdPlayerCancelTeleportNotify
Code:


Opcode: CheatClearOccupiableNpcOccupationScoreResponse
Field: TypeName
Code:


Opcode: CheatClearOccupiableNpcOccupationScoreResponse
Field: CheatClearOccupiableNpcOccupationScoreResponse
Code:


Opcode: OneShotSpecialMoveDoodadInfo
Field: TypeName
Code:


Opcode: OneShotSpecialMoveDoodadInfo
Field: OneShotSpecialMoveDoodadInfo
Code:


Opcode: StrongholdBuildingDemolishResponse
Field: TypeName
Code:


Opcode: StrongholdBuildingDemolishResponse
Field: StrongholdBuildingDemolishResponse
Code:


Opcode: CovenantRewardInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRewardInfo
Field: DiscardedIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayStartWithResupplyStateInfo
Field: TypeName
Code:


Opcode: ServerDrivenPlayStartWithResupplyStateInfo
Field: ServerDrivenPlayStartWithResupplyStateInfo
Code:


Opcode: CheatSetUrfModeResponse
Field: IsUrfMode
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatChangeCrossRealmMaintenanceRequest
Field: IsUnderMaintenance
Code:
bVar9 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: QuickSlotModifyFailResponse
Field: TypeName
Code:


Opcode: QuickSlotModifyFailResponse
Field: QuickSlotModifyFailResponse
Code:


Opcode: PvpRecordKillerPlayerInfo
Field: HasTeased
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xa0) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: TlsLikeEncryptServerHello
Field: ServerRandom
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TlsLikeEncryptServerHello
Field: Exponent
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TlsLikeEncryptServerHello
Field: Modulus
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RoadLinkInfo
Field: IsOneShotSpecialMove
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantJoinNotify
Field: CovenantBattalionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionNotifyInfo
Field: IsNotExposeToBattalionList
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: RPCCancellingMessage
Field: TypeName
Code:


Opcode: RPCCancellingMessage
Field: TozRPC.RPCCancellingMessage
Code:


Opcode: CovenantUpdateCovenantPermissionsInfosNotify
Field: CovenantPermissionsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozTcpHello
Field: EngineData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozTcpHello
Field: UserData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerEquipmentInfo
Field: EquipmentPresetInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzEquipmentPresetIndexType,TSharedPtr<FTzEquipmentPresetInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzEquipmentPresetIndexType,TSharedPtr<FTzEquipmentPresetInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  pcVar12 = (char *)((ulong)&local_198 | 1);
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk

Opcode: PlayerEquipmentInfo
Field: HasPreviouslyEquippedGuise
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x70) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CastAffectSourceInfo
Field: TypeName
Code:


Opcode: CastAffectSourceInfo
Field: CastAffectSourceInfo
Code:


Opcode: CheatTerritoryContaminationDecrementChangeResponse
Field: TypeName
Code:


Opcode: CheatTerritoryContaminationDecrementChangeResponse
Field: CheatTerritoryContaminationDecrementChangeResponse
Code:


Opcode: SquadInfo
Field: MemberGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SquadInfo
Field: TargetLocationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzTargetLocationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SquadInfo
Field: SharedAttackTargetInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SquadInfo
Field: SharedFocusTargetInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAnniversaryAchievementAccomplishRequest
Field: MissionProgressCounts
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatRankingResetResponse
Field: TypeName
Code:


Opcode: CheatRankingResetResponse
Field: CheatRankingResetResponse
Code:


Opcode: ItemInfoUpdateNotify
Field: ItemInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSpawnStrongholdBuildingResponse
Field: TypeName
Code:


Opcode: CheatSpawnStrongholdBuildingResponse
Field: CheatSpawnStrongholdBuildingResponse
Code:


Opcode: CovenantMarketHistoryInfo
Field: IsRegister
Code:
bVar8 = *(char *)(in_x0 + 0x46) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: InventoryUpdateInfo
Field: AddedItemInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: InventoryUpdateInfo
Field: RemovedItemGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: InventoryUpdateInfo
Field: StackableItemUpdateInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStackableItemUpdateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferExecuteRequest
Field: UseItem
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountRealmTransferExecuteRequest
Field: UseCurrency
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: PvpRecordDeadPlayerInfo
Field: HasPlayerLocationMonitoringRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x88) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: NavMeshTileDataRequest
Field: CheckRequestedTiles
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSetCovenantWithdrawalDateTimeResponse
Field: TypeName
Code:


Opcode: CheatSetCovenantWithdrawalDateTimeResponse
Field: CheatSetCovenantWithdrawalDateTimeResponse
Code:


Opcode: CheatMonsterBookSetAcquisitionProgressResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CharacterPublicStatsInfoSynchronizeNotify
Field: CharacterPublicStatsInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerSkillSlotSetInfo
Field: PlayerSkillSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzPlayerSkillSlotIndexType,TSharedPtr<FTzPlayerSkillSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzPlayerSkillSlotIndexType,TSharedPtr<FTzPlayerSkillSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: NpcInfo
Field: IsInSeekHidingAttackTargetState
Code:
bVar9 = *(char *)(in_x0 + 0x220) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: NpcInfo
Field: AttackerPlayerGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x228));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__n

Opcode: CovenantDiplomacyInviteReinforcementResponse
Field: TypeName
Code:


Opcode: CovenantDiplomacyInviteReinforcementResponse
Field: CovenantDiplomacyInviteReinforcementResponse
Code:


Opcode: ErosionItemUseParameterInfo
Field: IsWithoutPermission
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x14) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: TimeTriggerWorldActionInfo
Field: TypeName
Code:


Opcode: TimeTriggerWorldActionInfo
Field: TimeTriggerWorldActionInfo
Code:


Opcode: OccupiableNpcSummaryInfo
Field: IsRandomBuffNpc
Code:
bVar8 = *(char *)(in_x0 + 0x80) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CovenantQueryJoinAppliedCovenantSummaryInfoListRequest
Field: TypeName
Code:


Opcode: CovenantQueryJoinAppliedCovenantSummaryInfoListRequest
Field: CovenantQueryJoinAppliedCovenantSummaryInfoListRequest
Code:


Opcode: CheatClearRealmIntegrationBattleDeathCountRequest
Field: TypeName
Code:


Opcode: CheatClearRealmIntegrationBattleDeathCountRequest
Field: CheatClearRealmIntegrationBattleDeathCountRequest
Code:


Opcode: InfoAuthenticate
Field: AuthenticateInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: MailStrongholdBattleEndResultLogLayoutInfo
Field: StrongholdBattleJoinedCovenantHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleJoinedCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatOpenAllFogResponse
Field: TypeName
Code:


Opcode: CheatOpenAllFogResponse
Field: CheatOpenAllFogResponse
Code:


Opcode: CheatCovenantRealmTransferBlockRequest
Field: ApplyAll
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PartyQuickJoinFailResponse
Field: TypeName
Code:


Opcode: PartyQuickJoinFailResponse
Field: PartyQuickJoinFailResponse
Code:


Opcode: CheatSetUrfModeRequest
Field: IsUrfMode
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StackableItemQuickSlotDetailInfo
Field: TypeName
Code:


Opcode: StackableItemQuickSlotDetailInfo
Field: StackableItemQuickSlotDetailInfo
Code:


Opcode: CheatSetLoggingResponse
Field: IsLogging
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatPlayerRealmTransferBlockResponse
Field: TypeName
Code:


Opcode: CheatPlayerRealmTransferBlockResponse
Field: CheatPlayerRealmTransferBlockResponse
Code:


Opcode: CrossRealmSeasonTimeCreviceEntryInitialDataNotify
Field: IsFull
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleAttackLadderCarSiegeWeaponSlotInfo
Field: LadderCarPillarNpcGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerRealmIntegrationBattleInfo
Field: SeasonInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzPlayerRealmIntegrationBattleSeasonInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzPlayerRealmIntegrationBattleSeasonInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: AnniversaryPointRankingRecordQueryResponse
Field: RankingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRankingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x38));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryPointRankingRecordQueryResponse
Field: CovenantRankingInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryPointRankingRecordQueryResponse
Field: CovenantMemberAnniversaryPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantMemberAnniversaryPointInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TerritoryBossActionInfo
Field: TypeName
Code:


Opcode: TerritoryBossActionInfo
Field: TerritoryBossActionInfo
Code:


Opcode: DisplayRealmTransferQueryRequest
Field: TypeName
Code:


Opcode: DisplayRealmTransferQueryRequest
Field: DisplayRealmTransferQueryRequest
Code:


Opcode: CovenantRubyShopInfo
Field: BuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: EnvironmentVariablesNotify
Field: Variables
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,FString,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,FString,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantReinforcementInfoSynchronizeNotify
Field: ReinforcementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzReinforcementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantReinforcementInfoSynchronizeNotify
Field: ReceivedReinforcementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzReinforcementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatStrongholdBattleCancelAttackResponse
Field: TypeName
Code:


Opcode: CheatStrongholdBattleCancelAttackResponse
Field: CheatStrongholdBattleCancelAttackResponse
Code:


Opcode: ThreatPointsNotify
Field: ThreatPoints
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionBattalionWarpFailResponse
Field: TypeName
Code:


Opcode: BattalionBattalionWarpFailResponse
Field: BattalionBattalionWarpFailResponse
Code:


Opcode: PartyQueryMemberCandidateListResponse
Field: PartyMemberCandidateList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPartyMemberCoreInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantDonationResponse
Field: IsAnyRewardSentByMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x50) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: TozMessage
Field: TypeName
Code:


Opcode: TozMessage
Field: TozNetwork.Protocol.TozMessage
Code:


Opcode: CheatTutorialCompleteAllResponse
Field: TypeName
Code:


Opcode: CheatTutorialCompleteAllResponse
Field: CheatTutorialCompleteAllResponse
Code:


Opcode: SeasonPassQueryResponse
Field: SeasonPassAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSeasonPassAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatStrongholdBattleCarriageLivingTotemTeleportToPlayerRequest
Field: TypeName
Code:


Opcode: CheatStrongholdBattleCarriageLivingTotemTeleportToPlayerRequest
Field: CheatStrongholdBattleCarriageLivingTotemTeleportToPlayerRequest
Code:


Opcode: CheatOccupyOccupiableNpcResponse
Field: TypeName
Code:


Opcode: CheatOccupyOccupiableNpcResponse
Field: CheatOccupyOccupiableNpcResponse
Code:


Opcode: CheatAcquireAllCovenantResearchRequest
Field: TypeName
Code:


Opcode: CheatAcquireAllCovenantResearchRequest
Field: CheatAcquireAllCovenantResearchRequest
Code:


Opcode: CovenantGiftReceiveResponse
Field: ReceiveGiftInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantGiftReceiveInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DataTable
Field: DataHeader
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: DataTable
Field: RegDate
Code:
TozSerializableMessageLibNative::JsonSerializer<TozSerializableMessageLibNative::DateTime,void>::
  Serialize((DateTime *)(in_x0 + 0x18));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: DataTable
Field: Rows
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::vector<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,toz::DefaultAllocator<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>>>,toz::DefaultAllocator<std::__ndk1::vector<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,toz::DefaultAllocator<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>>>>>,void>
  ::Serialize((vector *)(in_x0 + 0x28));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookNodeStateInfo
Field: IsAnalysisLocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantUpdateOutLinkFailResponse
Field: TypeName
Code:


Opcode: CovenantUpdateOutLinkFailResponse
Field: CovenantUpdateOutLinkFailResponse
Code:


Opcode: SkillAffectTargetAffectInfo
Field: IsHit
Code:
bVar7 = *(char *)(in_x0 + 0x18) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: SkillAffectTargetAffectInfo
Field: SkillAffectTargetStateAffectInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatApplySkillSlotQuickSlotAutoUsePresetResponse
Field: AppliedPlayerSkillSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerSkillSlotUpdateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FavorRefreshResponse
Field: FavorList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavorInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FavorRefreshResponse
Field: FavorMissionList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavorMissionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: NpcActionNotify
Field: NpcSpeechBalloonInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatDeleteChatEntityResponse
Field: TypeName
Code:


Opcode: CheatDeleteChatEntityResponse
Field: CheatDeleteChatEntityResponse
Code:


Opcode: SpellstoneSlotPageInfo
Field: SpellstoneSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzSpellstoneSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzSpellstoneSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CheatResetCovenantCampaignTicketCountResponse
Field: TypeName
Code:


Opcode: CheatResetCovenantCampaignTicketCountResponse
Field: CheatResetCovenantCampaignTicketCountResponse
Code:


Opcode: FollowerDispatchInfo
Field: BuildingWorkObjectiveInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmCovenantQuerySummaryInfoListRequest
Field: CovenantGuidRealmCuidList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleAttackOuterGateStartNotify
Field: TypeName
Code:


Opcode: StrongholdBattleAttackOuterGateStartNotify
Field: StrongholdBattleAttackOuterGateStartNotify
Code:


Opcode: MountDeboardingFailResponse
Field: TypeName
Code:


Opcode: MountDeboardingFailResponse
Field: MountDeboardingFailResponse
Code:


Opcode: CheatAcquireAllFollowerPieceResponse
Field: TypeName
Code:


Opcode: CheatAcquireAllFollowerPieceResponse
Field: CheatAcquireAllFollowerPieceResponse
Code:


Opcode: CharacterInfo
Field: CharacterPublicStatsInfo
Code:
if (*(long **)(in_x0 + 0xb0) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0xb0) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CharacterInfo
Field: BuffInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<TSharedPtr<FTzBuffInfo,(ESPMode)1>,DefaultKeyFuncs<TSharedPtr<FTzBuffInfo,(ESPMode)1>,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0xc0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CharacterInfo
Field: CharacterMoveInfo
Code:
if (*(long **)(in_x0 + 0x110) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x110) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CharacterInfo
Field: ParticipatingContentsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x140));
  pcVar12 = (char *)((ulong)&local_198 | 1);
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk

Opcode: CharacterInfo
Field: IsHarmfulSkillTargetableInAnyFactionRelation
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 400) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: TargetScanShareResponse
Field: TypeName
Code:


Opcode: TargetScanShareResponse
Field: TargetScanShareResponse
Code:


Opcode: DiplomacyChatRoomKickCovenantsRequest
Field: CovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: RedrawableItemInventoryInfo
Field: RedrawableItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRedrawableItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: MailSendConfirmRequest
Field: TypeName
Code:


Opcode: MailSendConfirmRequest
Field: MailSendConfirmRequest
Code:


Opcode: CheatForceSynchronizeBuildingWorkResponse
Field: TypeName
Code:


Opcode: CheatForceSynchronizeBuildingWorkResponse
Field: CheatForceSynchronizeBuildingWorkResponse
Code:


Opcode: CheatResetAllCooldownResponse
Field: TypeName
Code:


Opcode: CheatResetAllCooldownResponse
Field: CheatResetAllCooldownResponse
Code:


Opcode: CheatResetCashShopMerchandiseTotalBuyLimitCountResponse
Field: TypeName
Code:


Opcode: CheatResetCashShopMerchandiseTotalBuyLimitCountResponse
Field: CheatResetCashShopMerchandiseTotalBuyLimitCountResponse
Code:


Opcode: DeathPenaltyDeleteRequest
Field: DeathPenaltyRecordGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BattalionCheckReadyRequest
Field: TypeName
Code:


Opcode: BattalionCheckReadyRequest
Field: BattalionCheckReadyRequest
Code:


Opcode: FollowerSquadUpdateResponse
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BoundAndErodedInheritanceBatchCraftRequest
Field: MaterialGroupOrderList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatCommandPresetEndNotify
Field: TypeName
Code:


Opcode: CheatCommandPresetEndNotify
Field: CheatCommandPresetEndNotify
Code:


Opcode: CheatClearFollowerRequest
Field: TypeName
Code:


Opcode: CheatClearFollowerRequest
Field: CheatClearFollowerRequest
Code:


Opcode: GuiseEquipFailResponse
Field: TypeName
Code:


Opcode: GuiseEquipFailResponse
Field: GuiseEquipFailResponse
Code:


Opcode: CheatChangeLevelRequest
Field: ShowAllLevelUpEffect
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: BattalionConfirmInvitationResponse
Field: IsApproved
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleEndRewardNotify
Field: IsAnyRewardSentByMail
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: StrongholdBattleCarriageLivingTotemCombatStateSynchronizeNotify
Field: IsInCombatInProgressState
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PointCurrencyContainerOverflowInfo
Field: CuidToOverflowCount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: MountStateInfo
Field: TypeName
Code:


Opcode: MountStateInfo
Field: MountStateInfo
Code:


Opcode: RankingAdditionalSourceInfo
Field: TypeName
Code:


Opcode: RankingAdditionalSourceInfo
Field: RankingAdditionalSourceInfo
Code:


Opcode: SkillItemUseParameterInfo
Field: SkillTargetingInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatClearRealmIntegrationBattleDeathCountResponse
Field: TypeName
Code:


Opcode: CheatClearRealmIntegrationBattleDeathCountResponse
Field: CheatClearRealmIntegrationBattleDeathCountResponse
Code:


Opcode: PlayerInfo
Field: IsFissioned
Code:
pcVar13 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x259) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar10;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__pu

Opcode: PlayerInfo
Field: IsCollisionFree
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x270) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar10;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar14,puVar3,lVar1,0x17);
  pcVar14[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar14 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInfo
Field: IsQuestCinePlaying
Code:
pcVar13 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x271) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar10;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  pcVar14 = pcVar13;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar14 = local_188;
  }
  std::__ndk1::__put

Opcode: PlayerInfo
Field: IsHeadPieceDisplayed
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x272) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar10;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__p

Opcode: WeeklyContributionPointsDividendInfo
Field: TypeName
Code:


Opcode: WeeklyContributionPointsDividendInfo
Field: WeeklyContributionPointsDividendInfo
Code:


Opcode: CovenantAcquireCovenantMemberRoleRewardRequest
Field: TypeName
Code:


Opcode: CovenantAcquireCovenantMemberRoleRewardRequest
Field: CovenantAcquireCovenantMemberRoleRewardRequest
Code:


Opcode: StanceInstallResponse
Field: IsStanceInstallFreeChanceEnabled
Code:
lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x48) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__p

Opcode: ShopAutoBuySettingUpdateRequest
Field: AutoBuyInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAutoBuyInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CollectionCompleteNotify
Field: IsAnyRewardSentByMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ChatServerReadyNotify
Field: TypeName
Code:


Opcode: ChatServerReadyNotify
Field: ChatServerReadyNotify
Code:


Opcode: BattalionBattalionWarpConfirmFailResponse
Field: TypeName
Code:


Opcode: BattalionBattalionWarpConfirmFailResponse
Field: BattalionBattalionWarpConfirmFailResponse
Code:


Opcode: ExpeditionJoinRequestInfo
Field: IsAllowVolunteerJoinApply
Code:
bVar7 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ExpeditionJoinRequestInfo
Field: IsVolunteerJoinApplicationAutomaticApproval
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MountDeboardedInfo
Field: IsImmediateMountDespawn
Code:
bVar8 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatCancelStrongholdProtectionResponse
Field: TypeName
Code:


Opcode: CheatCancelStrongholdProtectionResponse
Field: CheatCancelStrongholdProtectionResponse
Code:


Opcode: CheatMonsterBookSetNodeLevelResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PaidAttendanceInfosUpdateNotify
Field: PaidAttendanceInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPaidAttendanceInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopShoppingModeCommandResponse
Field: RegisteredGoodsList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: ShopShoppingModeCommandResponse
Field: BuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: ShopShoppingModeCommandResponse
Field: RegisteredGoodsBuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x70));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: ShopShoppingModeCommandResponse
Field: AutoBuySettings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAutoBuyInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0xc0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar9 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: EqualDistributionDividendInfo
Field: TypeName
Code:


Opcode: EqualDistributionDividendInfo
Field: EqualDistributionDividendInfo
Code:


Opcode: CovenantOrganizationStatsDetailInfo
Field: Stats
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzCovenantOrganizationStatSourceType,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzCovenantOrganizationStatSourceType,TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CheatOpenSeasonPassAchievementsResponse
Field: TypeName
Code:


Opcode: CheatOpenSeasonPassAchievementsResponse
Field: CheatOpenSeasonPassAchievementsResponse
Code:


Opcode: PlayerInitializeInfoNotify
Field: CovenantBattalionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfoNotify
Field: ContentsActivationFlags
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<bool,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x98));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatSetEnvironmentVariableResponse
Field: TypeName
Code:


Opcode: CheatSetEnvironmentVariableResponse
Field: CheatSetEnvironmentVariableResponse
Code:


Opcode: TerritoryErosionItemConfigurationInfo
Field: IsPermitted
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: VeilAffectSourceInfo
Field: TypeName
Code:


Opcode: VeilAffectSourceInfo
Field: VeilAffectSourceInfo
Code:


Opcode: DestroyerInfoUpdateNotify
Field: DestroyerInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBuildingRepairRequest
Field: IsCompleteImmediately
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmSeasonInfo
Field: IsUnderMaintenance
Code:
bVar9 = *(char *)(in_x0 + 0x19) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CrossRealmSeasonInfo
Field: MatchedRealmCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x50));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: CheatRankingBuffApplySwitchRequest
Field: IsApplied
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ShopCashMerchandiseUpdateRealmTotalBuyCountInfoNotify
Field: UpdatedRealmTotalMerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatRestoreChatCovenantRequest
Field: TypeName
Code:


Opcode: CheatRestoreChatCovenantRequest
Field: CheatRestoreChatCovenantRequest
Code:


Opcode: CheatSetStatResponse
Field: TypeName
Code:


Opcode: CheatSetStatResponse
Field: CheatSetStatResponse
Code:


Opcode: DeathPenaltyRecoverRequest
Field: DeathPenaltyRecordGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: StrongholdBuildingUpgradeRequest
Field: IsCompleteImmediately
Code:
bVar8 = *(char *)(in_x0 + 0x1c) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatInstallAllArquirunesRequest
Field: TypeName
Code:


Opcode: CheatInstallAllArquirunesRequest
Field: CheatInstallAllArquirunesRequest
Code:


Opcode: FavorSummaryInfoQueryResponse
Field: FavorBossInfosByDistrictCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzDistrictFavorBossInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzDistrictFavorBossInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ChatBanNotify
Field: BanInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CachedMessages
Field: Container
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::unordered_map<int,std::__ndk1::unique_ptr<TozNetworkNative::MessageCacheElement,std::__ndk1::default_delete<TozNetworkNative::MessageCacheElement>>,std::__ndk1::hash<int>,std::__ndk1::equal_to<int>,toz::DefaultAllocator<std::__ndk1::pair<int_const,std::__ndk1::unique_ptr<TozNetworkNative::MessageCacheElement,std::__ndk1::default_delete<TozNetworkNative::MessageCacheElement>>>>>,void>
  ::Serialize((unordered_map *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: StrongholdSummonWaveDefenseNpcSummonWaveProgressSynchronizeNotify
Field: CurrentWaveNpcKnockOutProgress
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuickSlotPageUpdateResponse
Field: TypeName
Code:


Opcode: QuickSlotPageUpdateResponse
Field: QuickSlotPageUpdateResponse
Code:


Opcode: CrossRealmCovenantQueryResponse
Field: IsJoinApplied
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmCovenantQueryResponse
Field: IsInvited
Code:
pcVar11 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__pu

Opcode: ErInterServerMigrationSessionInitializeInfo
Field: TypeName
Code:


Opcode: ErInterServerMigrationSessionInitializeInfo
Field: ErInterServerMigrationSessionInitializeInfo
Code:


Opcode: PlayerLimitedCounterInfo
Field: LimitedCountingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzPlayerLimitedCountingKindType,TSharedPtr<FTzLimitedCountingInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzPlayerLimitedCountingKindType,TSharedPtr<FTzLimitedCountingInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: MultipleItemSelector
Field: TypeName
Code:


Opcode: MultipleItemSelector
Field: MultipleItemSelector
Code:


Opcode: EntityRemoveBulkNotify
Field: EntityGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: CovenantHistoryQueryResponse
Field: CovenantHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CrossRealmCovenantQuerySummaryInfoListResponse
Field: CovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSearchResponse
Field: CovenantSearchInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSearchInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopAutoSellSettingUpdateResponse
Field: TypeName
Code:


Opcode: ShopAutoSellSettingUpdateResponse
Field: ShopAutoSellSettingUpdateResponse
Code:


Opcode: UniverseAccountRealmAccountInfo
Field: UniverseAccountPlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzUniverseAccountPlayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionExpeditionJoinNotify
Field: AnotherBattalionGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: CovenantBattalionExpeditionJoinNotify
Field: BattalionExpeditionInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: OrganizationStatsInfo
Field: Stats
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzOrganizationStatPrimaryKey,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzOrganizationStatPrimaryKey,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: AccountAffectAttachNotify
Field: AccountAffectInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: IntraRegionPathResultInfo
Field: PathToNearestRoadJunctionToStartLocation
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: IntraRegionPathResultInfo
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: IntraRegionPathResultInfo
Field: PathNotByRoad
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x88));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: IntraRegionPathResultInfo
Field: PathNotByRoadOneShotSpecialMoveIndices
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0xb8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: RegisteredGoodsInfo
Field: IsBound
Code:
bVar7 = *(char *)(in_x0 + 0x38) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RegisteredGoodsInfo
Field: IsStorable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryAchievementPrivateChannelKeepaliveFailResponse
Field: TypeName
Code:


Opcode: AnniversaryAchievementPrivateChannelKeepaliveFailResponse
Field: AnniversaryAchievementPrivateChannelKeepaliveFailResponse
Code:


Opcode: CheatChangeCampaignConditionResponse
Field: TypeName
Code:


Opcode: CheatChangeCampaignConditionResponse
Field: CheatChangeCampaignConditionResponse
Code:


Opcode: CheatKillSurroundingCharactersRequest
Field: IsSkipDyingAndFinishable
Code:
bVar9 = *(char *)(in_x0 + 0xd) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantGiftSynchronizeNotify
Field: AddedGiftBoxInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantGiftBoxInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantGiftSynchronizeNotify
Field: RemovedGiftBoxInfos
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantGiftSynchronizeNotify
Field: UpdateGiftBoxInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantGiftBoxInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdInitialDataNotify
Field: BuildingSubscriptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBuildingSubscriptionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantTradeSalesListQueryResponse
Field: GoodsSalesInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeGoodsSalesInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketTransactionInfo
Field: ItemAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryStrongholdOccupationCovenantInfo
Field: OccupyingCovenantInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar10 >> 1);
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryStrongholdOccupationCovenantInfo
Field: IsOccupyAltarPhaseInProgress
Code:
bVar8 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: AnniversaryStrongholdOccupationCovenantInfo
Field: AttackGroupInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantDisplayInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__n

Opcode: ServerDrivenPlayMovingToHuntingLocationStateInfo
Field: TypeName
Code:


Opcode: ServerDrivenPlayMovingToHuntingLocationStateInfo
Field: ServerDrivenPlayMovingToHuntingLocationStateInfo
Code:


Opcode: CheatUninstallAllArquirunesRequest
Field: TypeName
Code:


Opcode: CheatUninstallAllArquirunesRequest
Field: CheatUninstallAllArquirunesRequest
Code:


Opcode: CheatCastVeilResponse
Field: TypeName
Code:


Opcode: CheatCastVeilResponse
Field: CheatCastVeilResponse
Code:


Opcode: CovenantResearchResponse
Field: TypeName
Code:


Opcode: CovenantResearchResponse
Field: CovenantResearchResponse
Code:


Opcode: CheatStartCovenantCampaignResponse
Field: TypeName
Code:


Opcode: CheatStartCovenantCampaignResponse
Field: CheatStartCovenantCampaignResponse
Code:


Opcode: CheatClearFollowerResponse
Field: CollectionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzFollowerCollectionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TerritoryErosionInitialDataNotify
Field: ErosionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<TSharedPtr<FTzErosionInfo,(ESPMode)1>,DefaultKeyFuncs<TSharedPtr<FTzErosionInfo,(ESPMode)1>,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferCheckInfoResponse
Field: RealmTransferInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountRealmTransferCheckInfoResponse
Field: PlayerCheckInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleCovenantBattalionConfirmConveneFailResponse
Field: TypeName
Code:


Opcode: StrongholdBattleCovenantBattalionConfirmConveneFailResponse
Field: StrongholdBattleCovenantBattalionConfirmConveneFailResponse
Code:


Opcode: CovenantQueryRecommendCovenantSummaryInfoListRequest
Field: TypeName
Code:


Opcode: CovenantQueryRecommendCovenantSummaryInfoListRequest
Field: CovenantQueryRecommendCovenantSummaryInfoListRequest
Code:


Opcode: CovenantQueryResponse
Field: IsJoinApplied
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantQueryResponse
Field: IsInvited
Code:
pcVar11 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__pu

Opcode: StrongholdBattleCovenantBattalionInfo
Field: StrategicObjectiveInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzStrategicObjectiveInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzStrategicObjectiveInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x198));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleCovenantBattalionInfo
Field: NotJoinedMemberInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzBattalionMemberInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzBattalionMemberInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1e8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleCovenantBattalionInfo
Field: MemberStatisticsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberStatisticsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberStatisticsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x238));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: NavMeshTileInfo
Field: LayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileLayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantResearchResetNotify
Field: CovenantResearchInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCovenantResearchInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCovenantResearchInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerGroupAuthenticateInfo
Field: __base__
Code:


Opcode: ServerGroupAuthenticateInfo
Field: Ip
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: DestroyedGearInfoByEnhancement
Field: IsBound
Code:
bVar8 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: DestroyedGearInfoByEnhancement
Field: IsStorable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x22) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatDeregisterCheatEnabledPlayerNameResponse
Field: CheatEnabledPlayerNames
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FString,DefaultKeyFuncs<FString,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketSellSettleResponse
Field: IsSuccessByGoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatMonsterBookSetAnalysisInfoResponse
Field: NodeStateInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatMonsterBookSetAnalysisInfoResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailFollowerGatheringWorkLayoutInfo
Field: GainedRewardItemIndexWithCount
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: DeathPenaltyLastAutoRecoveryNotify
Field: DeathPenaltyAutoRecoveryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatCovenantGiftPaidItemResponse
Field: TypeName
Code:


Opcode: CheatCovenantGiftPaidItemResponse
Field: CheatCovenantGiftPaidItemResponse
Code:


Opcode: PlayerSummaryInfo
Field: IsInServerDrivenPlay
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x100) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar9;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: PlayerSummaryInfo
Field: PlayerHarmfulTextOnChatViolationInfo
Code:
if (*(long **)(in_x0 + 0x108) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x108) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerSummaryInfo
Field: IsHeadPieceDisplayed
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x128) == '\0') {
    lVar1 = 5;
    puVar3 = (undefined8 *)pcVar9;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: FollowerKillingNotify
Field: LootedItemIndexWithCount
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: MarketGoodsInfoQueryResponse
Field: MarketGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryAchievementPrivateChannelOpenRequest
Field: TypeName
Code:


Opcode: AnniversaryAchievementPrivateChannelOpenRequest
Field: AnniversaryAchievementPrivateChannelOpenRequest
Code:


Opcode: QuestCinePlayEndNotify
Field: TypeName
Code:


Opcode: QuestCinePlayEndNotify
Field: QuestCinePlayEndNotify
Code:


Opcode: RealmAccountWarehouseItemStoreRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBuildingUpdateBuildingAccessPermissionsRequest
Field: BuildingAccessPermissionKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzBuildingAccessPermissionKindType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzBuildingAccessPermissionKindType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayResurrectingStateInfo
Field: TypeName
Code:


Opcode: ServerDrivenPlayResurrectingStateInfo
Field: ServerDrivenPlayResurrectingStateInfo
Code:


Opcode: FollowerMovePathInfoRequest
Field: FollowerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatAddRegionContentBasePlayTimeResponse
Field: TypeName
Code:


Opcode: CheatAddRegionContentBasePlayTimeResponse
Field: CheatAddRegionContentBasePlayTimeResponse
Code:


Opcode: StrongholdBattleCovenantBattalionMemberDisplayInfo
Field: IsHeadPieceDisplayed
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleDeclareAttackResponse
Field: TypeName
Code:


Opcode: StrongholdBattleDeclareAttackResponse
Field: StrongholdBattleDeclareAttackResponse
Code:


Opcode: CovenantGiftReceiveRequest
Field: ReceiveGiftGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatClearSkillSlotQuickSlotAutoUseRequest
Field: TypeName
Code:


Opcode: CheatClearSkillSlotQuickSlotAutoUseRequest
Field: CheatClearSkillSlotQuickSlotAutoUseRequest
Code:


Opcode: CheatRealmIntegrationPreprocessingResponse
Field: TypeName
Code:


Opcode: CheatRealmIntegrationPreprocessingResponse
Field: CheatRealmIntegrationPreprocessingResponse
Code:


Opcode: CovenantRecommendBuildingWorkRequest
Field: IsRecommended
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleOccupyAltarStartNotify
Field: TypeName
Code:


Opcode: StrongholdBattleOccupyAltarStartNotify
Field: StrongholdBattleOccupyAltarStartNotify
Code:


Opcode: FavorSummaryInfoQueryRequest
Field: TypeName
Code:


Opcode: FavorSummaryInfoQueryRequest
Field: FavorSummaryInfoQueryRequest
Code:


Opcode: FollowerDispatchReservationInfo
Field: BuildingWorkObjectiveInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar11 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar11 = (uint)(byte)local_198;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  uVar3 = (ulong)(uVar11 >> 1);
  pcVar10 = pcVar12;
  if ((uVar11 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: FollowerDispatchReservationInfo
Field: IsBuildingWorkRecommended
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x40) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSendSampleMailToMeResponse
Field: TypeName
Code:


Opcode: CheatSendSampleMailToMeResponse
Field: CheatSendSampleMailToMeResponse
Code:


Opcode: PartyConfirmInvitationResponse
Field: IsApproved
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemExpireNotify
Field: ExpiredItemCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatChangeCrossRealmMaintenanceResponse
Field: TypeName
Code:


Opcode: CheatChangeCrossRealmMaintenanceResponse
Field: CheatChangeCrossRealmMaintenanceResponse
Code:


Opcode: CovenantResearchRequest
Field: IsCompleteImmediately
Code:
bVar8 = *(char *)(in_x0 + 0x28) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CharacterStatsInfo
Field: TypeName
Code:


Opcode: CharacterStatsInfo
Field: CharacterStatsInfo
Code:


Opcode: RoadJunctionDetailedInfo
Field: RoadLinks
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<FTzRoadLinkInfo,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerExperiencePointsItemConsumeRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayResupplyingStateInfo
Field: IsAutoResupplying
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ServerDrivenPlayResupplyingStateInfo
Field: IsResupplyingWithTeleport
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantSettleAccountInfoQueryRequest
Field: TypeName
Code:


Opcode: CovenantSettleAccountInfoQueryRequest
Field: CovenantSettleAccountInfoQueryRequest
Code:


Opcode: SkillResponse
Field: IsExecutingBegun
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatClearSeasonPassLevelResponse
Field: TypeName
Code:


Opcode: CheatClearSeasonPassLevelResponse
Field: CheatClearSeasonPassLevelResponse
Code:


Opcode: WorldMapPvpBattlePublishNotify
Field: PvpBattleInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: BattalionCovenantGrantedSkillNotify
Field: CovenantGrantedSkillCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerSquadSlotExpandRequest
Field: TypeName
Code:


Opcode: FollowerSquadSlotExpandRequest
Field: FollowerSquadSlotExpandRequest
Code:


Opcode: CampaignStartOptionInfo
Field: IsVolunteerJoinApplicationAutomaticApproval
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CampaignStartOptionInfo
Field: IsNotExposeToBattalionList
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CampaignStartOptionInfo
Field: IsBattalionAutoInviteCovenantMembers
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: LastDeathRecordDeleteRequest
Field: TypeName
Code:


Opcode: LastDeathRecordDeleteRequest
Field: LastDeathRecordDeleteRequest
Code:


Opcode: CheatResetCashShopMerchandiseBuyLimitCountResponse
Field: UpdatedMerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBuildingWorkInitialDataNotify
Field: BuildingWorkInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: UpdateLastViewedChatRecordsIndexResponse
Field: TypeName
Code:


Opcode: UpdateLastViewedChatRecordsIndexResponse
Field: UpdateLastViewedChatRecordsIndexResponse
Code:


Opcode: PlayerSkillInfo
Field: RootSkillCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: SkillCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: PlayerSkillSlotSetInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStanceType,TSharedPtr<FTzPlayerSkillSlotSetInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStanceType,TSharedPtr<FTzPlayerSkillSlotSetInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: PlayerSkillCooldownExpireDateTimeRangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzDateTimeRangeInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzDateTimeRangeInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: InstalledArquiruneInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<FTzCuid,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,bool,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<FTzCuid,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,bool,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x148));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: SpellstoneSlotPageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSpellstoneSlotPageInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSpellstoneSlotPageInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x198));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerSkillInfo
Field: ReplacementSkillCuidsByRootSkillCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1e8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatGetCheatEnabledPlayerNamesResponse
Field: CheatEnabledPlayerNames
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FString,DefaultKeyFuncs<FString,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopBuyResponse
Field: BuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopBuyResponse
Field: RegisteredGoodsBuyCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TArray<TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x80));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopBuyResponse
Field: RegisterShopBuyFailItems
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xd0));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopBuyResponse
Field: MostExpensiveGoodsItemIndex
Code:
if (*(long **)(in_x0 + 0x120) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x120) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CrossRealmRankingQueryResponse
Field: RankingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRankingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantLeaderDividendInfo
Field: TypeName
Code:


Opcode: CovenantLeaderDividendInfo
Field: CovenantLeaderDividendInfo
Code:


Opcode: MissionInfo
Field: RewardAcquiredDateTimes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,TozSerializableMessageLibNative::Nullable<FDateTime>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,TozSerializableMessageLibNative::Nullable<FDateTime>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ProtocolCheckResponse
Field: TypeName
Code:


Opcode: ProtocolCheckResponse
Field: TozNetwork.Handshake.ProtocolChecker.ProtocolCheckResponse
Code:


Opcode: CheatResetContentsUnlockResponse
Field: UnusedContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzContentsUnlockKindType,DefaultKeyFuncs<ETzContentsUnlockKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdSummaryInitialDataNotify
Field: BuildingSubscriptionSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBuildingSubscriptionSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x70));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: MultipleHandshakeMessage
Field: HandshakeMessages
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::unique_ptr<TozSerializableMessageLibNative::IMessage,std::__ndk1::default_delete<TozSerializableMessageLibNative::IMessage>>,toz::DefaultAllocator<std::__ndk1::unique_ptr<TozSerializableMessageLibNative::IMessage,std::__ndk1::default_delete<TozSerializableMessageLibNative::IMessage>>>>,void>
  ::Serialize((vector *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CovenantGoodsRegistrationRegisteredGoodsInfoUpdateDataNotify
Field: RegisteredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountPresentCheckResponse
Field: PlayersInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,TTuple<ETzClasseType,int>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,TTuple<ETzClasseType,int>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCampInitialInfoNotify
Field: BuildingWorkInfoByWorkplaceCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingWorkInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatStartCovenantCampaignRequest
Field: IsAllowVolunteerJoinApply
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatStartCovenantCampaignRequest
Field: IsVolunteerJoinApplicationAutomaticApproval
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: MailFollowerDeathLayoutInfo
Field: LootedRewardItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: CheatUnlockAllContentsResponse
Field: UnusedContentsUnlockKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzContentsUnlockKindType,DefaultKeyFuncs<ETzContentsUnlockKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcBossBattleRewardNotify
Field: ReceivedRewardInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzReceivedRewardInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FavoriteCraftRecipeRegisterResponse
Field: IsRegistered
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatTestGearEnhancementResponse
Field: SuccessCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatDowngradeBuildingResponse
Field: TypeName
Code:


Opcode: CheatDowngradeBuildingResponse
Field: CheatDowngradeBuildingResponse
Code:


Opcode: VolunteerParticipationInfo
Field: ParticipationCountInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatExpeditionLivingTotemTeleportToPlayerRequest
Field: TypeName
Code:


Opcode: CheatExpeditionLivingTotemTeleportToPlayerRequest
Field: CheatExpeditionLivingTotemTeleportToPlayerRequest
Code:


Opcode: FavorMissionInfo
Field: HuntingSiteCuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x48));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FavorMissionInfo
Field: TargetCuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatForceSynchronizeBuildingWorkRequest
Field: TypeName
Code:


Opcode: CheatForceSynchronizeBuildingWorkRequest
Field: CheatForceSynchronizeBuildingWorkRequest
Code:


Opcode: CovenantWatchDetailInfoQueryRequest
Field: TypeName
Code:


Opcode: CovenantWatchDetailInfoQueryRequest
Field: CovenantWatchDetailInfoQueryRequest
Code:


Opcode: CovenantTradeDealRecordQueryResponse
Field: GoodsDealInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeGoodsDealInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DiplomacyChatRoomRecordsInitializationInfo
Field: DiplomacyChatCovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzDiplomacyChatCovenantSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzDiplomacyChatCovenantSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x70));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: CovenantJoinedStrongholdCampaignBattleInfo
Field: TypeName
Code:


Opcode: CovenantJoinedStrongholdCampaignBattleInfo
Field: CovenantJoinedStrongholdCampaignBattleInfo
Code:


Opcode: AchievementInfo
Field: MissionProgressCounts
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar11 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__n

Opcode: AchievementInfo
Field: IsRewarded
Code:
bVar8 = *(char *)(in_x0 + 0x38) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CheatAbandonStrongholdResponse
Field: TypeName
Code:


Opcode: CheatAbandonStrongholdResponse
Field: CheatAbandonStrongholdResponse
Code:


Opcode: HarmfulTextOnChatViolationUpdateNotify
Field: PlayerHarmfulTextOnChatViolationInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantAssetMigrationInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantAssetMigrationInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantUpdateForbiddenAetherBoxCountResponse
Field: TypeName
Code:


Opcode: CovenantUpdateForbiddenAetherBoxCountResponse
Field: CovenantUpdateForbiddenAetherBoxCountResponse
Code:


Opcode: RealmIntegrationHidePopupResponse
Field: TypeName
Code:


Opcode: RealmIntegrationHidePopupResponse
Field: RealmIntegrationHidePopupResponse
Code:


Opcode: WorldMapPvpBattleMergeNotify
Field: PvpBattleInfo
Code:
if (*(long **)(in_x0 + 0x48) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x48) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: HonorableDieFailResponse
Field: TypeName
Code:


Opcode: HonorableDieFailResponse
Field: HonorableDieFailResponse
Code:


Opcode: CovenantTradeSalesRegisterResponse
Field: TypeName
Code:


Opcode: CovenantTradeSalesRegisterResponse
Field: CovenantTradeSalesRegisterResponse
Code:


Opcode: CheatAddRankingDummyDataResponse
Field: TypeName
Code:


Opcode: CheatAddRankingDummyDataResponse
Field: CheatAddRankingDummyDataResponse
Code:


Opcode: RealmIntegrationBattleScoreInitializeDataNotify
Field: ScoreInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzRealmIntegrationBattleRealmScoreInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzRealmIntegrationBattleRealmScoreInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantJoinApplicationInfo
Field: IsConnected
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryRewardAcquireNotify
Field: AnniversaryPointsByAnniversaryCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PvpBattleInfo
Field: PvpBattleKillDeathInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPvpBattleKillDeathInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: PvpBattleInfo
Field: PvpBattleKillDeathCountInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzPvpBattleCovenantId,TMap<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattleKillDeathCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattleKillDeathCountInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattleCovenantId,TMap<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattleKillDeathCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattleKillDeathCountInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x48));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: PvpBattleInfo
Field: PvpBattlePlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattlePlayerInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattlePlayerId,TSharedPtr<FTzPvpBattlePlayerInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x98));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: PvpBattleInfo
Field: PvpBattleCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzPvpBattleCovenantId,TSharedPtr<FTzPvpBattleCovenantInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzPvpBattleCovenantId,TSharedPtr<FTzPvpBattleCovenantInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xe8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatCovenantPayDividendResponse
Field: TypeName
Code:


Opcode: CheatCovenantPayDividendResponse
Field: CheatCovenantPayDividendResponse
Code:


Opcode: CollectionCategoryActiveNotify
Field: CollectionCategoryCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BattalionChangePurposeNotify
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillCasterAffectInfo
Field: SkillStatsAffectInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ShopAutoSellSettingUpdateRequest
Field: AutoSellSettings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionQuerySummaryInfoListResponse
Field: SummaryInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBattalionSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSetInvulnerableRequest
Field: IsInvulnerable
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerMarketTransactionDelayedSellReregisterProcessNotify
Field: TypeName
Code:


Opcode: PlayerMarketTransactionDelayedSellReregisterProcessNotify
Field: PlayerMarketTransactionDelayedSellReregisterProcessNotify
Code:


Opcode: CheatServerDrivenPlayResupplyResponse
Field: TypeName
Code:


Opcode: CheatServerDrivenPlayResupplyResponse
Field: CheatServerDrivenPlayResupplyResponse
Code:


Opcode: CheatTeleportFollowerResponse
Field: TypeName
Code:


Opcode: CheatTeleportFollowerResponse
Field: CheatTeleportFollowerResponse
Code:


Opcode: BattalionDismissFailResponse
Field: TypeName
Code:


Opcode: BattalionDismissFailResponse
Field: BattalionDismissFailResponse
Code:


Opcode: PlayerLocationMonitoringRegisterNotify
Field: PlayerLocationMonitoringInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PartyLeaveRequest
Field: TypeName
Code:


Opcode: PartyLeaveRequest
Field: PartyLeaveRequest
Code:


Opcode: ErLoginServerInitialToyBotAuthenticateInfo
Field: TypeName
Code:


Opcode: ErLoginServerInitialToyBotAuthenticateInfo
Field: ErLoginServerInitialToyBotAuthenticateInfo
Code:


Opcode: ItemAddInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationRealmInfoNotify
Field: RealmIntegrationRealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatExpeditionLivingTotemTeleportToPlayerResponse
Field: TypeName
Code:


Opcode: CheatExpeditionLivingTotemTeleportToPlayerResponse
Field: CheatExpeditionLivingTotemTeleportToPlayerResponse
Code:


Opcode: DistrictFavorBossInfo
Field: IsFavorBossActivated
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmIntegrationBattleWarpReturnRequest
Field: TypeName
Code:


Opcode: RealmIntegrationBattleWarpReturnRequest
Field: RealmIntegrationBattleWarpReturnRequest
Code:


Opcode: CheatRealmAccountRealmTransferBlockRequest
Field: ApplyAll
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatUnsetStatResponse
Field: TypeName
Code:


Opcode: CheatUnsetStatResponse
Field: CheatUnsetStatResponse
Code:


Opcode: TrustedDeviceRegisterNotify
Field: TypeName
Code:


Opcode: TrustedDeviceRegisterNotify
Field: TrustedDeviceRegisterNotify
Code:


Opcode: RealmAccountOptionInfo
Field: PushNotificationOptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzPushNotificationOptionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzPushNotificationOptionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: CheatSetLocalServerPushResponse
Field: TypeName
Code:


Opcode: CheatSetLocalServerPushResponse
Field: CheatSetLocalServerPushResponse
Code:


Opcode: CovenantWorldMapMarkerRemoveAllNotify
Field: RemovedGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: HeroBossSpawnInfo
Field: TypeName
Code:


Opcode: HeroBossSpawnInfo
Field: HeroBossSpawnInfo
Code:


Opcode: CheatTeleportToQuestMissionLocationResponse
Field: TypeName
Code:


Opcode: CheatTeleportToQuestMissionLocationResponse
Field: CheatTeleportToQuestMissionLocationResponse
Code:


Opcode: PowerSavingModeEndResponse
Field: TypeName
Code:


Opcode: PowerSavingModeEndResponse
Field: PowerSavingModeEndResponse
Code:


Opcode: RsaPublicKeyNotify
Field: PublicKeyXmlString
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar8);
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk

Opcode: CheatRegenerateHealthPointsAndManaPointsResponse
Field: TypeName
Code:


Opcode: CheatRegenerateHealthPointsAndManaPointsResponse
Field: CheatRegenerateHealthPointsAndManaPointsResponse
Code:


Opcode: MarketGoodsDeletedNotify
Field: GoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldMigrationReadyRequest
Field: IsInstanceField
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FieldMigrationReadyRequest
Field: IsTeleport
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FieldMigrationReadyRequest
Field: SeamlessNpcGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: CheatSetExperiencePointsBlockedResponse
Field: IsExperiencePointsBlocked
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleAttackEndDateTimeChangeNotify
Field: IsAffectedFromLivingTotemSkill
Code:
bVar9 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerMarketInfo
Field: WaitingRegistrationOrForSaleGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketInfo
Field: SoldOrExpiredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzMarketSellerGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketInfo
Field: TransactionHistories
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketTransactionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketInfo
Field: FavoriteItemInfosByMarketKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzMarketKindType,TArray<TSharedPtr<FTzMarketFavoriteItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzMarketKindType,TArray<TSharedPtr<FTzMarketFavoriteItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerMarketInfo
Field: PlayerMarketTransactionProcessInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerMarketTransactionProcessInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerMarketTransactionProcessInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x108));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GameOptionModifyRequest
Field: GameOptionInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantBattalionExpeditionJoinResponse
Field: TypeName
Code:


Opcode: CovenantBattalionExpeditionJoinResponse
Field: CovenantBattalionExpeditionJoinResponse
Code:


Opcode: DestroyerInfosInitializeDataNotify
Field: DestroyerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzDestroyerInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzDestroyerInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BuildingRepairRequestInfo
Field: TypeName
Code:


Opcode: BuildingRepairRequestInfo
Field: BuildingRepairRequestInfo
Code:


Opcode: SkillStageFlowNotify
Field: SubTargetingLocations_cm
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SkillStageFlowNotify
Field: AffectExemptLocations_cm
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector2D,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SkillStageFlowNotify
Field: SkillStageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzSkillStageInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x48));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmIntegrationBattleRealmScoreInfo
Field: Scores
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzRealmIntegrationBattleScoreKindType,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzRealmIntegrationBattleScoreKindType,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TerritoryInfo
Field: BuildingLevels
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuildingKindType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuildingKindType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x88));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: TerritoryInfo
Field: StrongholdBuildingAccessPermissionKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuildingKindType,ETzBuildingAccessPermissionKindType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuildingKindType,ETzBuildingAccessPermissionKindType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x128));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: TerritoryInfo
Field: HavenEventInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<FTzCuid,TSharedPtr<FTzHavenEventInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzHavenEventInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<FTzCuid,TSharedPtr<FTzHavenEventInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzHavenEventInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x180));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: EntitySpawnNotify
Field: EntityInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemInfo
Field: IsStorable
Code:
lVar2 = 4;
  puVar4 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar2 = 5;
    puVar4 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar4,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemInfo
Field: IsLocked
Code:
lVar2 = 4;
  puVar4 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x40) == '\0') {
    lVar2 = 5;
    puVar4 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar11,puVar4,lVar2,0x17);
  pcVar11[lVar2] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerSlotExpansionCostCurrencyAmountRequest
Field: TypeName
Code:


Opcode: PlayerSlotExpansionCostCurrencyAmountRequest
Field: PlayerSlotExpansionCostCurrencyAmountRequest
Code:


Opcode: MonsterBookAnalyzeResponse
Field: AnalyzedStateInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMonsterBookNodeStateInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MonsterBookAnalyzeResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantUpdateEmblemInfoFailResponse
Field: TypeName
Code:


Opcode: CovenantUpdateEmblemInfoFailResponse
Field: CovenantUpdateEmblemInfoFailResponse
Code:


Opcode: BattalionChangeOptionResponse
Field: TypeName
Code:


Opcode: BattalionChangeOptionResponse
Field: BattalionChangeOptionResponse
Code:


Opcode: ClasseChangeItemUseParameterInfo
Field: BeforeGearGuidToAfterGearCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ClasseChangeItemUseParameterInfo
Field: BeforeArquiruneCuidToAfterArquiruneCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantQueryRecommendCovenantSummaryInfoListResponse
Field: CovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BuildingBaseBuildingExistenceSynchronizeNotify
Field: IsBaseBuildingExist
Code:
bVar8 = *(char *)(in_x0 + 0x10) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantSynchronizeRecommendedResourceKindNotify
Field: RecommendedResourceKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzResourceKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WarehouseInfo
Field: PointCurrencyContainerInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CashShopMerchandiseInfo
Field: IsAutoUsing
Code:
bVar9 = *(char *)(in_x0 + 0x61) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CashShopSubCategoryInfo
Field: IsShowDateTime
Code:
bVar7 = *(char *)(in_x0 + 0x50) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CashShopSubCategoryInfo
Field: IsHideSubCategory
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x78) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementSuccessNotify
Field: DisplaySystemMessage
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementSuccessNotify
Field: DisplayChatMessage
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x31) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar8 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__put

Opcode: CheatAcquireCovenantLeaderResponse
Field: TypeName
Code:


Opcode: CheatAcquireCovenantLeaderResponse
Field: CheatAcquireCovenantLeaderResponse
Code:


Opcode: ServerDrivenPlayRewardInfo
Field: GainedCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRewardInfo
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ProtocolConstants
Field: TypeName
Code:


Opcode: ProtocolConstants
Field: TozNetwork.Protocol.ProtocolConstants
Code:


Opcode: CheatSpawnDoodadResponse
Field: TypeName
Code:


Opcode: CheatSpawnDoodadResponse
Field: CheatSpawnDoodadResponse
Code:


Opcode: CovenantBanishMemberNotify
Field: UpdatePlayerLastCovenantWithdrawalDateTime
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerLoginRequest
Field: IsFastLogin
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: BoundAndErodedInheritanceBatchCraftResponse
Field: CraftResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCraftResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearCovenantWarehouseResponse
Field: TypeName
Code:


Opcode: CheatClearCovenantWarehouseResponse
Field: CheatClearCovenantWarehouseResponse
Code:


Opcode: CheatClearCovenantResearchRequest
Field: TypeName
Code:


Opcode: CheatClearCovenantResearchRequest
Field: CheatClearCovenantResearchRequest
Code:


Opcode: ServerDrivenPlayAppCloseResponse
Field: TypeName
Code:


Opcode: ServerDrivenPlayAppCloseResponse
Field: ServerDrivenPlayAppCloseResponse
Code:


Opcode: CheatStartOccupiableNpcBossBattleResponse
Field: TypeName
Code:


Opcode: CheatStartOccupiableNpcBossBattleResponse
Field: CheatStartOccupiableNpcBossBattleResponse
Code:


Opcode: PlayerLoginResponse
Field: CanCheatCommand
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerLoginResponse
Field: BanInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__p

Opcode: PotionAutoUsageOptionInfo
Field: IsAutoUse
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatKillFocusedCharacterResponse
Field: TypeName
Code:


Opcode: CheatKillFocusedCharacterResponse
Field: CheatKillFocusedCharacterResponse
Code:


Opcode: PlayerCovenantWatchSynchronizeNotify
Field: CovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CashShopRefundableMerchandiseStorageBoxUpdateInfo
Field: AddSlotInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCashShopRefundableMerchandiseStorageBoxSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CashShopRefundableMerchandiseStorageBoxUpdateInfo
Field: DeleteSlotGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BasicAchievementPrivateChannelKeepaliveRequest
Field: TypeName
Code:


Opcode: BasicAchievementPrivateChannelKeepaliveRequest
Field: BasicAchievementPrivateChannelKeepaliveRequest
Code:


Opcode: CheatResetAchievementResponse
Field: TypeName
Code:


Opcode: CheatResetAchievementResponse
Field: CheatResetAchievementResponse
Code:


Opcode: FavorQueryResponse
Field: FavorList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavorInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: FavorQueryResponse
Field: FavorMissionList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavorMissionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: FavorQueryResponse
Field: IsFavorBossActivated
Code:
bVar7 = *(char *)(in_x0 + 0x48) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: FavorQueryResponse
Field: HasAcceptedFavorBossToday
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x49) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SpawnLayerActivateNotify
Field: IsPermanentSpawnLayer
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ErLoginServerSessionInitializeInfo
Field: RealmIntegrationRealmInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRealmIntegrationRealmInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x60));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: CheatExpeditionRepeatScheduleOpenResponse
Field: TypeName
Code:


Opcode: CheatExpeditionRepeatScheduleOpenResponse
Field: CheatExpeditionRepeatScheduleOpenResponse
Code:


Opcode: ResuscitatePleaRequest
Field: TypeName
Code:


Opcode: ResuscitatePleaRequest
Field: ResuscitatePleaRequest
Code:


Opcode: CovenantGiftReceiveRewardInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantGiftReceiveRewardInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatPlayerLocationChangeResponse
Field: TypeName
Code:


Opcode: CheatPlayerLocationChangeResponse
Field: CheatPlayerLocationChangeResponse
Code:


Opcode: CovenantTradeSalesRegisterRequest
Field: ItemIndexWithCount
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: VersionCheckResult
Field: Code
Code:
auVar8 = Hello::to_string(*(VersionCheckResultCode *)(in_x0 + 8));
  TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize(auVar8._0_8_,auVar8._8_8_);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: VersionCheckResult
Field: AdditionalData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x10),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: WarpCancelRequest
Field: TypeName
Code:


Opcode: WarpCancelRequest
Field: WarpCancelRequest
Code:


Opcode: MarketSellReregisterRequest
Field: RegistrationFeeCurrencyInfoByGoodsGuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCuidAndCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCuidAndCountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantWorldMapMarkerInitialDataNotify
Field: WorldMapMarkerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzWorldMapMarkerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleBuildingCombatStateSynchronizeNotify
Field: IsInCombatInProgressState
Code:
bVar9 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CombatLootOptionInfo
Field: IncludeBuffItem
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CombatLootOptionInfo
Field: DefaultDisplayDropItemName
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xf) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: SeamlessDoodadInfo
Field: TypeName
Code:


Opcode: SeamlessDoodadInfo
Field: SeamlessDoodadInfo
Code:


Opcode: EmergencyEscapeRequest
Field: TypeName
Code:


Opcode: EmergencyEscapeRequest
Field: EmergencyEscapeRequest
Code:


Opcode: SkillEndNotify
Field: IsAllStagesComplete
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x24) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MonsterBookNodeAcquireResponse
Field: AnalysisStatChangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCharacterStatChangeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x50));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleCovenantBattalionStrategicObjectiveSetNotify
Field: StrategicObjectiveTargetGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SkillAutoUseManaPointsRestrictOptionInfo
Field: IsForceUseSkillsInPvp
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: SkillAutoUseManaPointsRestrictOptionInfo
Field: IsForceUseSelfBuffSkills
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xb) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionInfo
Field: IsDisplayModeAutoSelect
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar2,0x17);
  pcVar12[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: NameTagHealthBarDisplayOptionInfo
Field: DetailInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzNameTagHealthBarDisplayModeType,TSharedPtr<FTzNameTagHealthBarDisplayOptionDetailInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzNameTagHealthBarDisplayModeType,TSharedPtr<FTzNameTagHealthBarDisplayOptionDetailInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar12 = local_188;
  }
  std::__nd

Opcode: NameTagHealthBarDisplayOptionInfo
Field: IsAllNpcNamesDisplayed
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x61) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar2,0x17);
  pcVar12[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: NameTagHealthBarDisplayOptionInfo
Field: IsDisplayedFissionStatusFriendlyOrBetter
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x62) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar12,puVar3,lVar2,0x17);
  pcVar12[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAddCovenantGiftLevelExperiencePointsResponse
Field: TypeName
Code:


Opcode: CheatAddCovenantGiftLevelExperiencePointsResponse
Field: CheatAddCovenantGiftLevelExperiencePointsResponse
Code:


Opcode: MountDeboardingInfo
Field: IsImmediateMountDespawn
Code:
bVar8 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantTradeGoodsListQueryResponse
Field: GoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTradeGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcOccupationCovenantInfoUpdateNotify
Field: NxLogBaseParameterInfo
Code:
if (*(long **)(in_x0 + 0x70) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x70) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSpawnBuildingResponse
Field: TypeName
Code:


Opcode: CheatSpawnBuildingResponse
Field: CheatSpawnBuildingResponse
Code:


Opcode: CovenantWarehouseSummaryInitialDataNotify
Field: ItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCuidAndCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCreateCovenantMemberRoleNotify
Field: CovenantMemberRoleInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatChangeStrongholdAllBuildingLevelResponse
Field: TypeName
Code:


Opcode: CheatChangeStrongholdAllBuildingLevelResponse
Field: CheatChangeStrongholdAllBuildingLevelResponse
Code:


Opcode: CheatExpeditionExecuteNextWaveResponse
Field: TypeName
Code:


Opcode: CheatExpeditionExecuteNextWaveResponse
Field: CheatExpeditionExecuteNextWaveResponse
Code:


Opcode: PowerSavingModeStartRequest
Field: TypeName
Code:


Opcode: PowerSavingModeStartRequest
Field: PowerSavingModeStartRequest
Code:


Opcode: StrongholdBattleMarchingStartNotify
Field: TypeName
Code:


Opcode: StrongholdBattleMarchingStartNotify
Field: StrongholdBattleMarchingStartNotify
Code:


Opcode: RedrawableItemInventoryUpdateInfo
Field: AddedRedrawableItemInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRedrawableItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RedrawableItemInventoryUpdateInfo
Field: RemovedRedrawableItemGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: ProtocolCheckRequest
Field: Hash
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar8);
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk

Opcode: PartyConfirmRecommendationForInviteeResponse
Field: IsApproved
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x58) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatDistrictBlockRequest
Field: IsBlocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemTransmutationResultInfo
Field: IsSuccess
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ItemTransmutationResultInfo
Field: FailRewardPointCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: MarketGoodsSummaryInfoQueryRequest
Field: MarketGoodsSummaryQueryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: MailCovenantWeeklyRubyDonationLayoutInfo
Field: CovenantWeeklyRubyDonationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantWeeklyRubyDonationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GameNotificationOptionInfo
Field: DistrictBossSpawnNotifyDisplayOption
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: GameNotificationOptionInfo
Field: ZonePointBossSpawnNotifyDisplayOption
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk1::__put

Opcode: RegionContentPlayInfoFailResponse
Field: TypeName
Code:


Opcode: RegionContentPlayInfoFailResponse
Field: RegionContentPlayInfoFailResponse
Code:


Opcode: InstanceEventActionCompleteNotify
Field: IsSuccess
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryAchievementUpdateNotify
Field: AnniversaryAchievementInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: NxLogBaseParameterInfo
Field: IsByNxCmd
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: BuffAttachNotify
Field: BuffAffectInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBuffAffectInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: KickPreexistingSessionConfirmResponse
Field: KickPreexistingSession
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantSettleAccountInfo
Field: ResourceHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FDateTime,TSharedPtr<FTzResourceHistoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FDateTime,TSharedPtr<FTzResourceHistoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: TutorialBeginFirstOneFailResponse
Field: ResultCodesByTutorialCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzResultCodeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzResultCodeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatRankingBuffApplySwitchResponse
Field: IsApplied
Code:
bVar8 = *(char *)(in_x0 + 0xc) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BattalionLeaveRequest
Field: TypeName
Code:


Opcode: BattalionLeaveRequest
Field: BattalionLeaveRequest
Code:


Opcode: MailServerDrivenPlayLayoutInfo
Field: GainedCurrencies
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MailServerDrivenPlayLayoutInfo
Field: GainedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGainedItemInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x88));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryQueryResponse
Field: AnniversaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAnniversaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryQueryResponse
Field: AnniversaryPointAndRankingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryPointAndRankingInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryPointAndRankingInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryQueryResponse
Field: AnniversaryAchievementPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x70));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantParticipationInfoQueryResponse
Field: CovenantParticipationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantParticipationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FavorBossQuestAllAcceptResponse
Field: TypeName
Code:


Opcode: FavorBossQuestAllAcceptResponse
Field: FavorBossQuestAllAcceptResponse
Code:


Opcode: MovePathInfo
Field: RoadJunctionIds
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: MovePathInfo
Field: PathToFirstRoadJunction
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: MovePathInfo
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: ContentsActivationUpdateNotify
Field: ContentsActivationFlags
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<bool,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PushNotificationOptionInfo
Field: IsEnabled
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: PushNotificationOptionInfo
Field: IsNotifiedEvenWhenConnected
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__pu

Opcode: ServerDrivenPlayStateInfo
Field: TypeName
Code:


Opcode: ServerDrivenPlayStateInfo
Field: ServerDrivenPlayStateInfo
Code:


Opcode: ChatBattalionRequest
Field: IsNotice
Code:
bVar8 = *(char *)(in_x0 + 0x30) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: GracefulShutdownMessage
Field: TypeName
Code:


Opcode: GracefulShutdownMessage
Field: TozNetwork.ServerGroup.GracefulShutdownMessage
Code:


Opcode: MonsterBookNodeAcquireRequest
Field: IsAcquireByItem
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatNpcCombatLogResponse
Field: TypeName
Code:


Opcode: CheatNpcCombatLogResponse
Field: CheatNpcCombatLogResponse
Code:


Opcode: CovenantDiplomacyAdditionalInfo
Field: TypeName
Code:


Opcode: CovenantDiplomacyAdditionalInfo
Field: CovenantDiplomacyAdditionalInfo
Code:


Opcode: CheatCharacterPrivateStatsInfoResponse
Field: CharacterPrivateStatsInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatChangeCovenantLevelResponse
Field: TypeName
Code:


Opcode: CheatChangeCovenantLevelResponse
Field: CheatChangeCovenantLevelResponse
Code:


Opcode: StrongholdBattleAttackAltarStartNotify
Field: TypeName
Code:


Opcode: StrongholdBattleAttackAltarStartNotify
Field: StrongholdBattleAttackAltarStartNotify
Code:


Opcode: CheatShowLocationAndFacingDirectionRequest
Field: TypeName
Code:


Opcode: CheatShowLocationAndFacingDirectionRequest
Field: CheatShowLocationAndFacingDirectionRequest
Code:


Opcode: CovenantDiplomacyDeclareHostilityFailResponse
Field: TypeName
Code:


Opcode: CovenantDiplomacyDeclareHostilityFailResponse
Field: CovenantDiplomacyDeclareHostilityFailResponse
Code:


Opcode: SchemaTable
Field: RegDate
Code:
TozSerializableMessageLibNative::JsonSerializer<TozSerializableMessageLibNative::DateTime,void>::
  Serialize((DateTime *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__n

Opcode: SchemaTable
Field: FileName
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x20),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: SchemaTable
Field: TableName
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x38),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: SchemaTable
Field: Columns
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::SchemaColumn,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::SchemaColumn>>,toz::DefaultAllocator<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::SchemaColumn,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::SchemaColumn>>>>,void>
  ::Serialize((vector *)(in_x0 + 0x50));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: CheatCovenantCompleteCampaignRequest
Field: TypeName
Code:


Opcode: CheatCovenantCompleteCampaignRequest
Field: CheatCovenantCompleteCampaignRequest
Code:


Opcode: EntanglementTriggerWorldActionInfo
Field: TypeName
Code:


Opcode: EntanglementTriggerWorldActionInfo
Field: EntanglementTriggerWorldActionInfo
Code:


Opcode: FavoriteStatKindChangeResponse
Field: IsRegistered
Code:
bVar9 = *(char *)(in_x0 + 0xd) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ClientDrivenQuestMissionCompleteNotify
Field: TargetGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: MountUpdateSkillSlotInfoRequest
Field: IsUsedForContinuousCombat
Code:
bVar9 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: GearMultipleEnhanceRequest
Field: GearGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: GearMultipleEnhanceRequest
Field: MaterialItemGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SpawnLayerAlreadyActivatedNotify
Field: IsPermanentSpawnLayer
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SpawnLayerAlreadyActivatedNotify
Field: SpawnLayerCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__

Opcode: PartyOptionUpdateFailResponse
Field: TypeName
Code:


Opcode: PartyOptionUpdateFailResponse
Field: PartyOptionUpdateFailResponse
Code:


Opcode: CheatChangeFocusTargetHealthPointsResponse
Field: TypeName
Code:


Opcode: CheatChangeFocusTargetHealthPointsResponse
Field: CheatChangeFocusTargetHealthPointsResponse
Code:


Opcode: CharacterStateSynchronizeNotify
Field: AffectSourceInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar11 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar11 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar11 >> 1);
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((uVar11 & 1) != 0) {
    uVar1 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleJoinedCovenantHistoryInfo
Field: IsDismissed
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x48) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantBattalionPublicSummaryInfo
Field: ExpeditionSummaryInfo
Code:
if (*(long **)(in_x0 + 0x58) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x58) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatPlayerLocationMonitoringDeleteAllResponse
Field: TypeName
Code:


Opcode: CheatPlayerLocationMonitoringDeleteAllResponse
Field: CheatPlayerLocationMonitoringDeleteAllResponse
Code:


Opcode: ServerDrivenPlayFleeingStateInfo
Field: TypeName
Code:


Opcode: ServerDrivenPlayFleeingStateInfo
Field: ServerDrivenPlayFleeingStateInfo
Code:


Opcode: DeathPenaltyRecordInfoRemoveNotify
Field: DeathPenaltyRecordGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatChangeCrossRealmSeasonMaxEnterablePlayerCapacityResponse
Field: TypeName
Code:


Opcode: CheatChangeCrossRealmSeasonMaxEnterablePlayerCapacityResponse
Field: CheatChangeCrossRealmSeasonMaxEnterablePlayerCapacityResponse
Code:


Opcode: CheatUpdateCovenantMissionCountResponse
Field: TypeName
Code:


Opcode: CheatUpdateCovenantMissionCountResponse
Field: CheatUpdateCovenantMissionCountResponse
Code:


Opcode: CheatAcquireAllCovenantResearchResponse
Field: TypeName
Code:


Opcode: CheatAcquireAllCovenantResearchResponse
Field: CheatAcquireAllCovenantResearchResponse
Code:


Opcode: KickCovenantsFromDiplomacyChatRoomRequest
Field: CovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: SeekHidingAttackTargetStateNotify
Field: IsSeekHidingAttackTargetState
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleAttackGroupInfo
Field: SiegeWeaponCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleAttackGroupInfo
Field: StrongholdBattleAttackSiegeWeaponSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,TSharedPtr<FTzStrongholdBattleAttackSiegeWeaponSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,TSharedPtr<FTzStrongholdBattleAttackSiegeWeaponSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x108));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerResurrectionResponse
Field: TypeName
Code:


Opcode: PlayerResurrectionResponse
Field: PlayerResurrectionResponse
Code:


Opcode: MountDeboardingRequest
Field: TypeName
Code:


Opcode: MountDeboardingRequest
Field: MountDeboardingRequest
Code:


Opcode: BattalionChatInfo
Field: IsNotice
Code:
bVar8 = *(char *)(in_x0 + 0xb8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantCurrencyDonationResponse
Field: IsAnyRewardSentByMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x40) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatStrongholdBattleCompleteAttackPhaseResponse
Field: TypeName
Code:


Opcode: CheatStrongholdBattleCompleteAttackPhaseResponse
Field: CheatStrongholdBattleCompleteAttackPhaseResponse
Code:


Opcode: SessionKeyAuthenticate
Field: SessionKey
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: PvpRecordInfo
Field: CharacterInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPvpRecordCharacterInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountInfo
Field: PlayedCutSceneCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x48));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatToggleShowQuestDebugRequest
Field: TypeName
Code:


Opcode: CheatToggleShowQuestDebugRequest
Field: CheatToggleShowQuestDebugRequest
Code:


Opcode: CheatChangeLevelResponse
Field: TypeName
Code:


Opcode: CheatChangeLevelResponse
Field: CheatChangeLevelResponse
Code:


Opcode: CovenantCampInfoListResponse
Field: CovenantCampInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantCampInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionCreateNotify
Field: CovenantBattalionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantBattalionNotifyInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionDismissRequest
Field: TypeName
Code:


Opcode: BattalionDismissRequest
Field: BattalionDismissRequest
Code:


Opcode: CheatPlayerRealmTransferBlockRequest
Field: ApplyAll
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatPlayerRealmTransferBlockRequest
Field: Block
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatResetTerritoryBossResponse
Field: TypeName
Code:


Opcode: CheatResetTerritoryBossResponse
Field: CheatResetTerritoryBossResponse
Code:


Opcode: CheatDestroyPointsChangeResponse
Field: TypeName
Code:


Opcode: CheatDestroyPointsChangeResponse
Field: CheatDestroyPointsChangeResponse
Code:


Opcode: BasicOrGrowthGuideAchievementInfo
Field: TypeName
Code:


Opcode: BasicOrGrowthGuideAchievementInfo
Field: BasicOrGrowthGuideAchievementInfo
Code:


Opcode: RealmAccountPresentApplicationCheckInfoResponse
Field: IsLoginedWithSafeDevice
Code:
bVar7 = *(char *)(in_x0 + 0xc) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: RealmAccountPresentApplicationCheckInfoResponse
Field: IsInVillage
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xd) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountPresentApplicationCheckInfoResponse
Field: PlayerCheckInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerRealmAccountPresentApplicationCheckInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerRealmAccountPresentApplicationCheckInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CheatCreateAndEquipGearSetResponse
Field: EquipGearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatFillHealthPointsAndManaPointsToFullRequest
Field: TypeName
Code:


Opcode: CheatFillHealthPointsAndManaPointsToFullRequest
Field: CheatFillHealthPointsAndManaPointsToFullRequest
Code:


Opcode: CovenantRejectInvitationsFailResponse
Field: RejectFailedCovenantGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: LZ4CompressHandshakeResult
Field: __base__
Code:


Opcode: LZ4CompressHandshakeResult
Field: TypeName
Code:


Opcode: LZ4CompressHandshakeResult
Field: TozLZ4.Handshake.LZ4CompressHandshakeResult
Code:


Opcode: BattalionCheckReadyResultNotify
Field: CheckReadyResult
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBattalionMemberReadyKindType,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBattalionMemberReadyKindType,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatRealmAccountRealmTransferBlockResponse
Field: TypeName
Code:


Opcode: CheatRealmAccountRealmTransferBlockResponse
Field: CheatRealmAccountRealmTransferBlockResponse
Code:


Opcode: CovenantDiplomacyConfirmReinforcementInvitationRequest
Field: IsApproved
Code:
bVar8 = *(char *)(in_x0 + 0x20) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BasicAchievementInitializeDataNotify
Field: BasicAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBasicOrGrowthGuideAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CraftResultInfo
Field: ItemInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar1 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatUpsertGoodsBuyCountResponse
Field: TypeName
Code:


Opcode: CheatUpsertGoodsBuyCountResponse
Field: CheatUpsertGoodsBuyCountResponse
Code:


Opcode: CheatAcquireCovenantResearchResponse
Field: TypeName
Code:


Opcode: CheatAcquireCovenantResearchResponse
Field: CheatAcquireCovenantResearchResponse
Code:


Opcode: StrongholdWorldMapGeneralShopInfo
Field: RegisteredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdTeleportToAltarResponse
Field: TypeName
Code:


Opcode: StrongholdTeleportToAltarResponse
Field: StrongholdTeleportToAltarResponse
Code:


Opcode: CovenantDiplomacyReinforcementInvitationRejectNotify
Field: IsCallByExpired
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StackableItemMultipleUseRequest
Field: ParameterInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PartyQuickJoinRequest
Field: TypeName
Code:


Opcode: PartyQuickJoinRequest
Field: PartyQuickJoinRequest
Code:


Opcode: FollowerSquadSlotExpandResponse
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BasicAchievementPrivateChannelKeepaliveFailResponse
Field: TypeName
Code:


Opcode: BasicAchievementPrivateChannelKeepaliveFailResponse
Field: BasicAchievementPrivateChannelKeepaliveFailResponse
Code:


Opcode: PlayerMarketSaleGoodsListRequest
Field: TypeName
Code:


Opcode: PlayerMarketSaleGoodsListRequest
Field: PlayerMarketSaleGoodsListRequest
Code:


Opcode: ShopAutoBuySettingUpdateResponse
Field: TypeName
Code:


Opcode: ShopAutoBuySettingUpdateResponse
Field: ShopAutoBuySettingUpdateResponse
Code:


Opcode: GearAdditionalInfo
Field: IsEroded
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xc) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: GearAdditionalInfo
Field: GearEnchantSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnchantSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: GearAdditionalInfo
Field: GearSubOptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSubOptionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: GearAdditionalInfo
Field: SpecialGearEnhancementUseInfoByCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSpecialGearEnhancementUseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSpecialGearEnhancementUseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: GearAdditionalInfo
Field: ErodedCountByEnhancementGrade
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x80));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__nd

Opcode: BattalionSetAssemblyLocationFailResponse
Field: TypeName
Code:


Opcode: BattalionSetAssemblyLocationFailResponse
Field: BattalionSetAssemblyLocationFailResponse
Code:


Opcode: CovenantTradeSalesManageRequest
Field: GoodsGuidWithItemCuidInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<TSharedPtr<FTzCovenantTradeGoodsGuidWithItemCuidInfo,(ESPMode)1>,DefaultKeyFuncs<TSharedPtr<FTzCovenantTradeGoodsGuidWithItemCuidInfo,(ESPMode)1>,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: RankingSourceInfo
Field: AdditionalInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantQueryInvitedCovenantSummaryInfoListResponse
Field: CovenantSummaryInfoAndInviteDateTimes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCurrencyInitialDataNotify
Field: CovenantTaxAcquireInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantTaxAcquireInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantCurrencyInfoRequest
Field: TypeName
Code:


Opcode: CovenantCurrencyInfoRequest
Field: CovenantCurrencyInfoRequest
Code:


Opcode: CheatResetAllAetherOptionRequest
Field: TypeName
Code:


Opcode: CheatResetAllAetherOptionRequest
Field: CheatResetAllAetherOptionRequest
Code:


Opcode: CheatClearPlayerMissionRewardResponse
Field: TypeName
Code:


Opcode: CheatClearPlayerMissionRewardResponse
Field: CheatClearPlayerMissionRewardResponse
Code:


Opcode: SynchronizeStartNotify
Field: TypeName
Code:


Opcode: SynchronizeStartNotify
Field: SynchronizeStartNotify
Code:


Opcode: CheatAnniversaryAchievementAccomplishAllRequest
Field: TypeName
Code:


Opcode: CheatAnniversaryAchievementAccomplishAllRequest
Field: CheatAnniversaryAchievementAccomplishAllRequest
Code:


Opcode: CheatToggleShowQuestDebugResponse
Field: IsEnabled
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BossSpawnInfoRemovedNotify
Field: BossSpawnInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ItemSelector
Field: TypeName
Code:


Opcode: ItemSelector
Field: ItemSelector
Code:


Opcode: ErTozMessage
Field: __base__
Code:


Opcode: ErTozMessage
Field: TypeName
Code:


Opcode: ErTozMessage
Field: ErTozMessage
Code:


Opcode: CheatTestRewardResponse
Field: RewardItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRewardItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ProtocolCheckHandshakeResult
Field: ClientHash
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x10),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: TutorialBeginFirstOneRequest
Field: TutorialCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantAcquireCovenantMemberRoleRewardResponse
Field: IsAnyRewardSentByMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRecommendResourceKindRequest
Field: RecommendedResourceKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzResourceKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BuildingDemolishRequestInfo
Field: TypeName
Code:


Opcode: BuildingDemolishRequestInfo
Field: BuildingDemolishRequestInfo
Code:


Opcode: SeasonPassLevelRewardAllResponse
Field: RewardedLevels
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SeasonPassInfo
Field: IsPaidRewardUnlocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: SeasonPassInfo
Field: IsPlusRewardUnlocked
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x31) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: SeasonPassInfo
Field: RewardedLevels
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzSeasonPassRewardKindType,TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: FindPathResponse
Field: PathToNearestRoadJunctionToStartLocation
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FindPathResponse
Field: PathFromLastRoadJunctionToDestination
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FindPathResponse
Field: PathNotByRoad
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FVector,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FindPathResponse
Field: PathNotByRoadOneShotSpecialMoveIndices
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<int,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatTutorialResetAllRequest
Field: TypeName
Code:


Opcode: CheatTutorialResetAllRequest
Field: CheatTutorialResetAllRequest
Code:


Opcode: EquipmentPresetInfo
Field: GearSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerSquadResetResponse
Field: TypeName
Code:


Opcode: FollowerSquadResetResponse
Field: FollowerSquadResetResponse
Code:


Opcode: PlayerRealmTransferCheckInfo
Field: IsMarketCheckNeeded
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar8;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put

Opcode: PlayerRealmTransferCheckInfo
Field: HasReceivableAttachmentsMail
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar8;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: RPCReturnMessage
Field: ReturnValue
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: GoodsBuyCountsInfo
Field: GoodsBuyCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TMap<FTzCuid,TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TMap<FTzCuid,TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzGoodsBuyCountInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GoodsBuyCountsInfo
Field: RegisteredGoodsBuyCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBuyOrCraftLimitLevelType,TMap<FTzRegisteredGoodsBuyCountKey,TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzRegisteredGoodsBuyCountKey,TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBuyOrCraftLimitLevelType,TMap<FTzRegisteredGoodsBuyCountKey,TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzRegisteredGoodsBuyCountKey,TSharedPtr<FTzRegisteredGoodsBuyCountInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantGoodsRegistrationInitialDataNotify
Field: RegisteredGoodsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzRegisteredGoodsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: GearEnchantResponse
Field: GearEnchantSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnchantSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CraftResponse
Field: CraftResultInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCraftResultInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCampaignTicketInfoNotify
Field: CampaignTicketInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCampaignTicketInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCampaignTicketInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatDeleteChatEntityRequest
Field: TypeName
Code:


Opcode: CheatDeleteChatEntityRequest
Field: CheatDeleteChatEntityRequest
Code:


Opcode: PlayerMissionRewardResponse
Field: MissionRewardInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMissionRewardInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: TerritoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzTerritoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: ZoneInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzZoneInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: BossSpawnInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzBossSpawnInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzBossSpawnInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: OccupiableNpcBossSpawnInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzOccupiableNpcBossSpawnInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzOccupiableNpcBossSpawnInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FieldInitializeInfo
Field: OccupiableNpcInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzOccupiableNpcInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 200));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatChangeStrongholdBuildingLevelResponse
Field: TypeName
Code:


Opcode: CheatChangeStrongholdBuildingLevelResponse
Field: CheatChangeStrongholdBuildingLevelResponse
Code:


Opcode: BattalionCheckReadyResponse
Field: TypeName
Code:


Opcode: BattalionCheckReadyResponse
Field: BattalionCheckReadyResponse
Code:


Opcode: CheatStrongholdApplyTaxRequest
Field: TypeName
Code:


Opcode: CheatStrongholdApplyTaxRequest
Field: CheatStrongholdApplyTaxRequest
Code:


Opcode: PlayerItemUseFailResponse
Field: ParameterInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PartyDismissRequest
Field: TypeName
Code:


Opcode: PartyDismissRequest
Field: PartyDismissRequest
Code:


Opcode: CheatOverwriteRankingBoardResponse
Field: TypeName
Code:


Opcode: CheatOverwriteRankingBoardResponse
Field: CheatOverwriteRankingBoardResponse
Code:


Opcode: CheatAccomplishAllFavorResponse
Field: TypeName
Code:


Opcode: CheatAccomplishAllFavorResponse
Field: CheatAccomplishAllFavorResponse
Code:


Opcode: StrongholdCancelProtectionReservationResponse
Field: TypeName
Code:


Opcode: StrongholdCancelProtectionReservationResponse
Field: StrongholdCancelProtectionReservationResponse
Code:


Opcode: AddToChatBlockListResponse
Field: TypeName
Code:


Opcode: AddToChatBlockListResponse
Field: AddToChatBlockListResponse
Code:


Opcode: TozTcpWelcome
Field: EngineData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TozTcpWelcome
Field: UserData
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: GearSlotPresetUnequipNotify
Field: UnequipGearSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzGearSlotType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerBattalionOptionInfo
Field: PurposeTexts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,FString,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,FString,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseResetMerchandiseBuyCountInfoNotify
Field: UpdatedMerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: VersionNameInfo
Field: ProjectName
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x20),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: VersionNameInfo
Field: BranchName
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x38),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: VersionNameInfo
Field: LastToken
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x50),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: StrongholdBattleActionInfo
Field: TypeName
Code:


Opcode: StrongholdBattleActionInfo
Field: StrongholdBattleActionInfo
Code:


Opcode: SerializedMessageCacheElement
Field: message
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatStrongholdBattleCarriageLivingTotemTeleportToPlayerResponse
Field: TypeName
Code:


Opcode: CheatStrongholdBattleCarriageLivingTotemTeleportToPlayerResponse
Field: CheatStrongholdBattleCarriageLivingTotemTeleportToPlayerResponse
Code:


Opcode: CheatStrongholdBattlePhaseTransitionEventResponse
Field: TypeName
Code:


Opcode: CheatStrongholdBattlePhaseTransitionEventResponse
Field: CheatStrongholdBattlePhaseTransitionEventResponse
Code:


Opcode: CombinedInventoryInfo
Field: InventoryInfosByInventoryKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzUserInventoryKindType,TSharedPtr<FTzInventoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzUserInventoryKindType,TSharedPtr<FTzInventoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CombinedInventoryInfo
Field: RedrawableItemInventoryInfosByItemCategory
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzItemCategoryType,TSharedPtr<FTzRedrawableItemInventoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemCategoryType,TSharedPtr<FTzRedrawableItemInventoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: DeathPenaltyFreeRecoveryInfoUpdateNotify
Field: DeathPenaltyFreeRecoveryInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CombinedInventoryUpdateInfo
Field: InventoryUpdateInfosByInventoryKind
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzUserInventoryKindType,TSharedPtr<FTzInventoryUpdateInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzUserInventoryKindType,TSharedPtr<FTzInventoryUpdateInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CombinedInventoryUpdateInfo
Field: RedrawableInventoryUpdateInfosByItemCategory
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzItemCategoryType,TSharedPtr<FTzRedrawableItemInventoryUpdateInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemCategoryType,TSharedPtr<FTzRedrawableItemInventoryUpdateInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearRealmIntegrationBattleParticipationResponse
Field: TypeName
Code:


Opcode: CheatClearRealmIntegrationBattleParticipationResponse
Field: CheatClearRealmIntegrationBattleParticipationResponse
Code:


Opcode: CheatReleaseOccupiableNpcInactivityResponse
Field: TypeName
Code:


Opcode: CheatReleaseOccupiableNpcInactivityResponse
Field: CheatReleaseOccupiableNpcInactivityResponse
Code:


Opcode: BuildingInfo
Field: IsBaseBuildingExist
Code:
bVar8 = *(char *)(in_x0 + 0x1d4) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: BuildingInfo
Field: IsBlocked
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1d5) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: SeasonPassQueryRequest
Field: TypeName
Code:


Opcode: SeasonPassQueryRequest
Field: SeasonPassQueryRequest
Code:


Opcode: XorHandshake
Field: xorStaticKey
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<unsigned_char,toz::DefaultAllocator<unsigned_char>>,void>::
  Serialize((vector *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: XorHandshake
Field: PublicKeyXmlString
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x20),(basic_string *)pcVar7);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: XorHandshake
Field: Type
Code:
auVar8 = XorEncryptor::to_string(*(XorHandshakeMessageType *)(in_x0 + 0x38));
  TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize(auVar8._0_8_,auVar8._8_8_);
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk

Opcode: StrongholdBattleSiegeWeaponLocationInfoNotify
Field: StrongholdBattleSiegeWeaponLocationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleSiegeWeaponLocationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: BattalionConfirmInvitationRequest
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatBatchBossSpawnTimeRollbackResponse
Field: TypeName
Code:


Opcode: CheatBatchBossSpawnTimeRollbackResponse
Field: CheatBatchBossSpawnTimeRollbackResponse
Code:


Opcode: RedrawableItemAdditionalInfo
Field: ExcludedItemCuidsWhenRedrawing
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: FollowerSquadUpdateNotify
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatStrongholdBattleCancelAttackRequest
Field: TypeName
Code:


Opcode: CheatStrongholdBattleCancelAttackRequest
Field: CheatStrongholdBattleCancelAttackRequest
Code:


Opcode: CovenantTradeSalesManageResponse
Field: GoodsGuidsAndResultCodes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,ETzResultCodeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,ETzResultCodeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CovenantSupportInfoQueryRequest
Field: TypeName
Code:


Opcode: CovenantSupportInfoQueryRequest
Field: CovenantSupportInfoQueryRequest
Code:


Opcode: PlayerPvpInfo
Field: AlertPlayers
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: PlayerPvpInfo
Field: CrossRealmAlertPlayers
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FTzCrossRealmAlertPlayerRegisterInfo,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FTzCrossRealmAlertPlayerRegisterInfo,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x68));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: RealmAccountRegionContentPlayTimeInfo
Field: RegionContentPlayTimeInfo_sec
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatNpcCombatLogRequest
Field: TypeName
Code:


Opcode: CheatNpcCombatLogRequest
Field: CheatNpcCombatLogRequest
Code:


Opcode: CovenantDiplomacyCancelReinforcementInvitationResponse
Field: TypeName
Code:


Opcode: CovenantDiplomacyCancelReinforcementInvitationResponse
Field: CovenantDiplomacyCancelReinforcementInvitationResponse
Code:


Opcode: ItemBoundAndErodedSelector
Field: IsStorable
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ItemBoundAndErodedSelector
Field: IsEroded
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar9 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: HavenEventApplyNotify
Field: HavenEventInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatPromoteAllFollowerResponse
Field: TypeName
Code:


Opcode: CheatPromoteAllFollowerResponse
Field: CheatPromoteAllFollowerResponse
Code:


Opcode: MarketGoodsExpireDateTimeUpdateNotify
Field: GoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ShopSellRequest
Field: ItemGuidSelectors
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemGuidSelector,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: QueryPlayerBattalionJoinableResponse
Field: IsJoinableBattalion
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FavorInfo
Field: FavorRandomRewardCuidCandidates
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: ErFrontServerSessionWaitingQueueNotify
Field: RealmHasSpaceAvailable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatUpdatePlayerCampaignTicketCountResponse
Field: TypeName
Code:


Opcode: CheatUpdatePlayerCampaignTicketCountResponse
Field: CheatUpdatePlayerCampaignTicketCountResponse
Code:


Opcode: AlertPlayerQueryResponse
Field: AlertPlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAlertPlayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AlertPlayerQueryResponse
Field: CrossRealmAlertPlayerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAlertPlayerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CrossRealmSeasonInfoNotify
Field: CrossRealmSeasonInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzRegionContentKindType,TSharedPtr<FTzCrossRealmSeasonInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzRegionContentKindType,TSharedPtr<FTzCrossRealmSeasonInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ErFrontServerAuthenticateInfo
Field: TypeName
Code:


Opcode: ErFrontServerAuthenticateInfo
Field: ErFrontServerAuthenticateInfo
Code:


Opcode: CovenantSupportInfoChangeNotify
Field: HasCovenantSupportableFollower
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantAddJoinApplicationsNotify
Field: CovenantJoinApplicationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantJoinApplicationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatAddOnScreenDebugMessageNotify
Field: NewerOnTop
Code:
bVar8 = *(char *)(in_x0 + 0x24) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatResetTerritoryBossRequest
Field: TypeName
Code:


Opcode: CheatResetTerritoryBossRequest
Field: CheatResetTerritoryBossRequest
Code:


Opcode: SkillTargetingInfo
Field: TypeName
Code:


Opcode: SkillTargetingInfo
Field: SkillTargetingInfo
Code:


Opcode: CheatClearCovenantWarehouseRequest
Field: TypeName
Code:


Opcode: CheatClearCovenantWarehouseRequest
Field: CheatClearCovenantWarehouseRequest
Code:


Opcode: PointCurrencyContainerUpdateInfo
Field: CuidToAmountDelta
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PointCurrencyContainerUpdateInfo
Field: CuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearRealmIntegrationBattleParticipationRequest
Field: TypeName
Code:


Opcode: CheatClearRealmIntegrationBattleParticipationRequest
Field: CheatClearRealmIntegrationBattleParticipationRequest
Code:


Opcode: ServerDrivenPlayInfo
Field: RewardInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: ServerDrivenPlayInfo
Field: CurrentStateInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: OtherPlayerLootNotify
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  pcVar9 = (char *)((ulong)&local_198 | 1);
  uVar3 = (ulong)((byte)local_198 >> 1);
  pcVar8 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk

Opcode: OtherPlayerLootNotify
Field: IsErosionInstallerReward
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x48) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSetRealmAccountPresentRegisterBlockRequest
Field: Block
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: UnknownAffectSourceInfo
Field: TypeName
Code:


Opcode: UnknownAffectSourceInfo
Field: UnknownAffectSourceInfo
Code:


Opcode: BattalionCovenantDiplomacyNotify
Field: AllianceCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CraftQueryResponse
Field: CraftCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCraftCountInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCraftCountInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatCovenantRubyShopResetUseResetCountResponse
Field: TypeName
Code:


Opcode: CheatCovenantRubyShopResetUseResetCountResponse
Field: CheatCovenantRubyShopResetUseResetCountResponse
Code:


Opcode: DistrictFavorDatabaseInfo
Field: CurrentAvailableFavorDatabaseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzFavorDatabaseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzFavorDatabaseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryStrongholdOccupationRecordInfo
Field: AnniversaryStrongholdOccupationCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAnniversaryStrongholdOccupationCovenantInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FavorBossQuestAllAcceptRequest
Field: TypeName
Code:


Opcode: FavorBossQuestAllAcceptRequest
Field: FavorBossQuestAllAcceptRequest
Code:


Opcode: CheatAcquireCovenantLeaderRequest
Field: TypeName
Code:


Opcode: CheatAcquireCovenantLeaderRequest
Field: CheatAcquireCovenantLeaderRequest
Code:


Opcode: CheatGetEnvironmentVariablesRequest
Field: TypeName
Code:


Opcode: CheatGetEnvironmentVariablesRequest
Field: CheatGetEnvironmentVariablesRequest
Code:


Opcode: CovenantCancelInvitationFailResponse
Field: CancelFailedPlayerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CovenantQuerySummaryInfoListResponse
Field: CovenantSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatDistrictBlockResponse
Field: TypeName
Code:


Opcode: CheatDistrictBlockResponse
Field: CheatDistrictBlockResponse
Code:


Opcode: CheatTeleportToNpcRequest
Field: IsRegularOnly
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: SchemaDataInfo
Field: SchemaDataTables
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::SchemaDataTable,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::SchemaDataTable>>,toz::DefaultAllocator<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::SchemaDataTable,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::SchemaDataTable>>>>,void>
  ::Serialize((vector *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: OccupiableNpcOccupationScoreUpdateDataNotify
Field: NpcOccupationScoreCovenantViewInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantViewInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantViewInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantBattalionExpeditionLivingTotemDepartureRequest
Field: TypeName
Code:


Opcode: CovenantBattalionExpeditionLivingTotemDepartureRequest
Field: CovenantBattalionExpeditionLivingTotemDepartureRequest
Code:


Opcode: RoadPathInfo
Field: IsOneShotSpecialMove
Code:
bVar8 = *(char *)(in_x0 + 0x34) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_c

Opcode: StrongholdBattleStatisticsKnockOutEventInfo
Field: TypeName
Code:


Opcode: StrongholdBattleStatisticsKnockOutEventInfo
Field: StrongholdBattleStatisticsKnockOutEventInfo
Code:


Opcode: CheatStartStrongholdSummonWaveDefenseResponse
Field: TypeName
Code:


Opcode: CheatStartStrongholdSummonWaveDefenseResponse
Field: CheatStartStrongholdSummonWaveDefenseResponse
Code:


Opcode: BaseInfo
Field: Token
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 8),(basic_string *)pcVar8);
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk

Opcode: PvpRecordQueryResponse
Field: PvpRecordInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPvpRecordInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPvpRecordInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar7 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__nd

Opcode: ShopBuyRequest
Field: RegisteredGoodsGuidToCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ShopBuyRequest
Field: SystemGoodsCuidToCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x60));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ShopBuyRequest
Field: MostExpensiveGoodsItemIndex
Code:
if (*(long **)(in_x0 + 0xb0) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0xb0) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: DatatoolHandshakeRequest
Field: DataHeaders
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::vector<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::DataHeader,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::DataHeader>>,toz::DefaultAllocator<std::__ndk1::unique_ptr<DatatoolReferenceNative::Packet::DataHeader,std::__ndk1::default_delete<DatatoolReferenceNative::Packet::DataHeader>>>>,void>
  ::Serialize((vector *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleInitialDataNotify
Field: StrongholdBattleSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzStrongholdBattleSummaryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzStrongholdBattleSummaryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatClearCollectionFailResponse
Field: TypeName
Code:


Opcode: CheatClearCollectionFailResponse
Field: CheatClearCollectionFailResponse
Code:


Opcode: RealmAccountPresentApplicationCheckInfoRequest
Field: TypeName
Code:


Opcode: RealmAccountPresentApplicationCheckInfoRequest
Field: RealmAccountPresentApplicationCheckInfoRequest
Code:


Opcode: CheatChangeFocusTargetManaPointsResponse
Field: TypeName
Code:


Opcode: CheatChangeFocusTargetManaPointsResponse
Field: CheatChangeFocusTargetManaPointsResponse
Code:


Opcode: ErServerAuthenticateInfo
Field: __base__
Code:


Opcode: CovenantRubyShopMerchandiseInfoNotify
Field: MerchandiseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantRubyShopMerchandiseInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x38));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferCheckInfoRequest
Field: TypeName
Code:


Opcode: CovenantRealmTransferCheckInfoRequest
Field: CovenantRealmTransferCheckInfoRequest
Code:


Opcode: QuestTeleportToQuestWayPointResponse
Field: TypeName
Code:


Opcode: QuestTeleportToQuestWayPointResponse
Field: QuestTeleportToQuestWayPointResponse
Code:


Opcode: CheatAcquireFollowerPieceResponse
Field: TypeName
Code:


Opcode: CheatAcquireFollowerPieceResponse
Field: CheatAcquireFollowerPieceResponse
Code:


Opcode: HeadPieceDisplayOptionModifyRequest
Field: IsHeadPieceDisplayed
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRealmTransferReadyToRealmTransferResponse
Field: TypeName
Code:


Opcode: CovenantRealmTransferReadyToRealmTransferResponse
Field: CovenantRealmTransferReadyToRealmTransferResponse
Code:


Opcode: CombatTargetOptionInfo
Field: KeepContinuousCombatAndAutoMoveOnManualMove
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xd) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CombatTargetOptionInfo
Field: KeepAutoAttackOnMoveToLocation
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xe) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CombatTargetOptionInfo
Field: KeepAutoAttackOnMoveToDirection
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0xf) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CombatTargetOptionInfo
Field: AutoAttackTargetOnKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzAutoAttackTargetKindType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__n

Opcode: CombatTargetOptionInfo
Field: AutoCounterAttackNpc
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CombatTargetOptionInfo
Field: AutoAttackTargetOnNpcGrades
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzAutoAttackTargetNpcGradeType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0x28));
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__n

Opcode: CombatTargetOptionInfo
Field: CancelAttackOrFocusTargetButtonVisible
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: CombatTargetOptionInfo
Field: RemoveTargetingByContinuousCombatOff
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x3a) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: CombatTargetOptionInfo
Field: FocusTargetSelfButtonVisible
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x3c) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: CombatTargetOptionInfo
Field: IsReservedSkillCancellable
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x3d) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CombatTargetOptionInfo
Field: StopContinuousCombatWhenKilledBoss
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x3e) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar11;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__pu

Opcode: StrongholdBuildingDowngradeResponse
Field: TypeName
Code:


Opcode: StrongholdBuildingDowngradeResponse
Field: StrongholdBuildingDowngradeResponse
Code:


Opcode: CovenantUpdateNoticeFailResponse
Field: TypeName
Code:


Opcode: CovenantUpdateNoticeFailResponse
Field: CovenantUpdateNoticeFailResponse
Code:


Opcode: ItemIndex
Field: IsStorable
Code:
pcVar11 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x19) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar9;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: ItemIndex
Field: IsEroded
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x1a) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)pcVar9;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatClearSeasonPassLevelRequest
Field: TypeName
Code:


Opcode: CheatClearSeasonPassLevelRequest
Field: CheatClearSeasonPassLevelRequest
Code:


Opcode: StrongholdBattleDeclarePrerequisitesQueryResponse
Field: HavenCuidToTotalTravelDistances
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,float,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,float,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AcquireSourceAdditionalParameter
Field: TypeName
Code:


Opcode: AcquireSourceAdditionalParameter
Field: AcquireSourceAdditionalParameter
Code:


Opcode: CovenantRealmTransferCheckInfoResponse
Field: RealmTransferInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantRealmTransferCheckInfoResponse
Field: PlayerCheckInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CovenantRealmTransferCheckInfoResponse
Field: IsAppliedRealmAccountPresentToRealm
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x88) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: VolatileInGameNotificationInfo
Field: TypeName
Code:


Opcode: VolatileInGameNotificationInfo
Field: VolatileInGameNotificationInfo
Code:


Opcode: PlayerMissionRewardRequest
Field: MissionCuidAndSteps
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,int,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: FollowerDeathInfo
Field: KillingInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: FollowerDeathInfo
Field: LootedItemIndexWithCount
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: InfoAuthenticateComplete
Field: Success
Code:
bVar7 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar9 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: InfoAuthenticateComplete
Field: SessionKey
Code:
TozSerializableMessageLibNative::
  JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
  ::Serialize((JsonSerializer<std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,toz::DefaultAllocator<char>>,void>
               *)(in_x0 + 0x10),(basic_string *)pcVar9);
  uVar10 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar11 = local_188;
  }
  std::__nd

Opcode: InfoAuthenticateComplete
Field: SessionInitializeInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar10 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar10 = local_198 & 0xff;
  }
  uVar3 = local_190;
  pcVar11 = local_188;
  if ((uVar10 & 1) == 0) {
    uVar3 = uVar10 >> 1;
    pcVar11 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: InfoAuthenticateComplete
Field: FailureReasonData
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar10 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar10 = local_198 & 0xff;
  }
  uVar3 = local_190;
  pcVar11 = local_188;
  if ((uVar10 & 1) == 0) {
    uVar3 = uVar10 >> 1;
    pcVar11 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: CheatServerDrivenPlayResupplyRequest
Field: TypeName
Code:


Opcode: CheatServerDrivenPlayResupplyRequest
Field: CheatServerDrivenPlayResupplyRequest
Code:


Opcode: AnniversaryAchievementPrivateChannelCloseResponse
Field: TypeName
Code:


Opcode: AnniversaryAchievementPrivateChannelCloseResponse
Field: AnniversaryAchievementPrivateChannelCloseResponse
Code:


Opcode: NgsNotify
Field: Data
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<unsigned_char,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AutoSellSettingsInfo
Field: Settings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: NpcOccupationInfo
Field: NpcCovenantOccupationInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: NpcOccupationInfo
Field: NpcOccupationScoreCovenantInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzNpcOccupationScoreCovenantInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSpawnNormalDoodadResponse
Field: TypeName
Code:


Opcode: CheatSpawnNormalDoodadResponse
Field: CheatSpawnNormalDoodadResponse
Code:


Opcode: QueryChatRecordsResponse
Field: ChatMessageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatMessageInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatKillFocusedCharacterRequest
Field: IsSkipDyingAndFinishable
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatSetIgnoreCovenantMarketUsableJoinElapsedTimeResponse
Field: IgnoreCovenantMarketUsableJoinElapsedTime
Code:
bVar8 = *(char *)(in_x0 + 0xc) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBuildingWorkCancelResponse
Field: TypeName
Code:


Opcode: StrongholdBuildingWorkCancelResponse
Field: StrongholdBuildingWorkCancelResponse
Code:


Opcode: GearEnchantPreserveItemAdditionalInfo
Field: GearEnchantSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzGearEnchantSlotInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopMainCategoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopMainCategoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopMainCategoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopSubCategoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopSubCategoryInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopSubCategoryInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopMerchandiseInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopMerchandiseInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopMerchandiseInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 200));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopWindowDressingInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCashShopWindowDressingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x118));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopNameTextInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopNameTextInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopNameTextInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x128));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: CashShopDescriptionTextInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCashShopDescriptionTextInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCashShopDescriptionTextInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x178));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ShopCashMerchandiseInitialDataNotify
Field: RealmTotalMerchandiseBuyCountInfoList
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMerchandiseBuyCountInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x1c8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: ServerDrivenPlayRecordsResponse
Field: Infos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzServerDrivenPlayRecordsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSupportQueryInfo
Field: BuildingWorkOrderInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzBuildingWorkOrderInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzBuildingWorkOrderInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantSupportQueryInfo
Field: CovenantSupportInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCovenantSupportInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatApplyCovenantResearchSetResponse
Field: TypeName
Code:


Opcode: CheatApplyCovenantResearchSetResponse
Field: CheatApplyCovenantResearchSetResponse
Code:


Opcode: CovenantRealmTransferInfo
Field: CovenantRealmTransferMemberReadyChecks
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar8 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar8 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleAttackPhaseStartNotify
Field: BattalionMemberStatisticsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberStatisticsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: SquadSharedAttackTargetNotify
Field: SharedAttackTargetInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementResultInfo
Field: ItemInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar4 = (ulong)(uVar8 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementResultInfo
Field: IsConfirmedEnhancement
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x2c) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: GearEnhancementResultInfo
Field: IsEroded
Code:
pcVar9 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x2d) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar9,puVar3,lVar2,0x17);
  pcVar9[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__pu

Opcode: GearEnhancementResultInfo
Field: IsDestroyed
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x60) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: MailSendCountQueryRequest
Field: TypeName
Code:


Opcode: MailSendCountQueryRequest
Field: MailSendCountQueryRequest
Code:


Opcode: CovenantGiftQueryRequest
Field: TypeName
Code:


Opcode: CovenantGiftQueryRequest
Field: CovenantGiftQueryRequest
Code:


Opcode: MarketSellSettleRequest
Field: GoodsGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatApplySpellstonePresetResponse
Field: SpellstoneSlotPageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSpellstoneSlotPageInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSpellstoneSlotPageInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: EndedWorldEventActionInfo
Field: TypeName
Code:


Opcode: EndedWorldEventActionInfo
Field: EndedWorldEventActionInfo
Code:


Opcode: RealmAccountWarehouseAutoStoreSettingsInfo
Field: Settings
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzItemGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzItemGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar4 = (ulong)(local_198[0] >> 1);
  pcVar6 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__nd

Opcode: MountCallingFailResponse
Field: TypeName
Code:


Opcode: MountCallingFailResponse
Field: MountCallingFailResponse
Code:


Opcode: StrongholdBuildingUpdateBuildingAccessPermissionsResponse
Field: BuildingAccessPermissionKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,ETzBuildingAccessPermissionKindType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,ETzBuildingAccessPermissionKindType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantUpdateCovenantPermissionsInfosRequest
Field: CovenantPermissionsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FString,TSharedPtr<FTzCovenantPermissionsInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatStrongholdBattleCompleteAttackPhaseRequest
Field: TypeName
Code:


Opcode: CheatStrongholdBattleCompleteAttackPhaseRequest
Field: CheatStrongholdBattleCompleteAttackPhaseRequest
Code:


Opcode: ServerDrivenPlayAppCloseRequest
Field: TypeName
Code:


Opcode: ServerDrivenPlayAppCloseRequest
Field: ServerDrivenPlayAppCloseRequest
Code:


Opcode: AchievementSourceInfo
Field: TypeName
Code:


Opcode: AchievementSourceInfo
Field: AchievementSourceInfo
Code:


Opcode: SkillGroundTargetingInfo
Field: IsOriginatedAtCasterLocationProxy
Code:
bVar9 = *(char *)(in_x0 + 0x18) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: DeathRecordInfo
Field: AffectSourceInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatRespawnNpcResponse
Field: TypeName
Code:


Opcode: CheatRespawnNpcResponse
Field: CheatRespawnNpcResponse
Code:


Opcode: AnniversaryAchievementPrivateChannelCloseRequest
Field: TypeName
Code:


Opcode: AnniversaryAchievementPrivateChannelCloseRequest
Field: AnniversaryAchievementPrivateChannelCloseRequest
Code:


Opcode: OccupiableNpcSummaryBulkUpdateDataNotify
Field: OccupiableNpcSummaryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzOccupiableNpcSummaryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: AnniversaryAchievementPrivateChannelKeepaliveRequest
Field: TypeName
Code:


Opcode: AnniversaryAchievementPrivateChannelKeepaliveRequest
Field: AnniversaryAchievementPrivateChannelKeepaliveRequest
Code:


Opcode: CheatClearAllStanceAndSkillRequest
Field: TypeName
Code:


Opcode: CheatClearAllStanceAndSkillRequest
Field: CheatClearAllStanceAndSkillRequest
Code:


Opcode: MailQueryResponse
Field: Mails
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMailInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  pcVar10 = (char *)((ulong)&local_198 | 1);
  uVar3 = (ulong)((byte)local_198 >> 1);
  pcVar9 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk

Opcode: MailQueryResponse
Field: HasMore
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: FavoriteStatKindChangeRequest
Field: IsRegistered
Code:
bVar9 = *(char *)(in_x0 + 9) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: PlayerCovenantInfo
Field: InvitedCovenantGuidAndInvitedDateTimes
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerCovenantInfo
Field: JoinAppliedCovenantGuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<long_long,DefaultKeyFuncs<long_long,false>,FDefaultSetAllocator>,void>::
  Serialize((TSet *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PlayerAutoUseInfo
Field: ItemCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: PlayerAutoUseInfo
Field: RootSkillCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatChangeActivationSpawnLayerResponse
Field: TypeName
Code:


Opcode: CheatChangeActivationSpawnLayerResponse
Field: CheatChangeActivationSpawnLayerResponse
Code:


Opcode: CheatTestGearEnchantOptionResponse
Field: GearEnchantOptionGrades
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,ETzGearEnchantGradeType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,ETzGearEnchantGradeType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x38));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatTestGearEnchantOptionResponse
Field: GearEnchantSlotToStatKindToAmountToCount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<short,TMap<ETzAdjustableStatKindType,TMap<float,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<float,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,TMap<float,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<float,int,false>>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<short,TMap<ETzAdjustableStatKindType,TMap<float,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<float,int,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzAdjustableStatKindType,TMap<float,int,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<float,int,false>>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x90));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar8 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: CheatOccupyStrongholdResponse
Field: TypeName
Code:


Opcode: CheatOccupyStrongholdResponse
Field: CheatOccupyStrongholdResponse
Code:


Opcode: SeamlessNpcInfo
Field: IsInVillage
Code:
bVar7 = *(char *)(in_x0 + 0x38) == '\0';
  lVar1 = 4;
  if (bVar7) {
    lVar1 = 5;
  }
  pcVar9 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar7) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar9;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: SeamlessNpcInfo
Field: IsPublicResurrector
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: MailReservedStrongholdProtectionFailLayoutInfo
Field: AttackCovenantNames
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FString,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: CheatAcceptQuestRequest
Field: TeleportToQuestMissionLocation
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAcceptQuestRequest
Field: ReceivePrecedingQuestReward
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x29) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar7 = pcVar8;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__put

Opcode: FissionedStateUpdateNotify
Field: IsFissioned
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatClearAllStanceAndSkillResponse
Field: TypeName
Code:


Opcode: CheatClearAllStanceAndSkillResponse
Field: CheatClearAllStanceAndSkillResponse
Code:


Opcode: MarketGoodsSummaryInfoQueryResponse
Field: MarketGoodsSummaryQueryInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillUseOptionModifyResponse
Field: TypeName
Code:


Opcode: SkillUseOptionModifyResponse
Field: SkillUseOptionModifyResponse
Code:


Opcode: PlayerLogoutRequest
Field: TypeName
Code:


Opcode: PlayerLogoutRequest
Field: PlayerLogoutRequest
Code:


Opcode: ErosionInstalledWithoutPermissionAddNotify
Field: ErosionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzErosionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatPromoteFollowerResponse
Field: TypeName
Code:


Opcode: CheatPromoteFollowerResponse
Field: CheatPromoteFollowerResponse
Code:


Opcode: NavMeshTileCheckResponse
Field: CheckedTiles
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantJoinAtFrontNotify
Field: CovenantMemberRoleInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar7 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: MailInfo
Field: IsRead
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x38) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: MailInfo
Field: IsAttachmentsReceived
Code:
pcVar12 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x39) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar11 = pcVar12;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__put

Opcode: MailInfo
Field: LayoutInfo
Code:
if (*(long **)(in_x0 + 0x78) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x78) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar10 >> 1);
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatSpawnOccupiableNpcBossResponse
Field: TypeName
Code:


Opcode: CheatSpawnOccupiableNpcBossResponse
Field: CheatSpawnOccupiableNpcBossResponse
Code:


Opcode: CheatChangeCashShopCheckBuyLimitOptionRequest
Field: IsIgnoreToCheckBuyLimit
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: WorldMapPvpBattleInitialDataNotify
Field: PvpBattleInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TMap<long_long,TSharedPtr<FTzPvpBattleInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPvpBattleInfo,(ESPMode)1>,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TMap<long_long,TSharedPtr<FTzPvpBattleInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPvpBattleInfo,(ESPMode)1>,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatOpenAllFogRequest
Field: TypeName
Code:


Opcode: CheatOpenAllFogRequest
Field: CheatOpenAllFogRequest
Code:


Opcode: CollisionFreeSynchronizeNotify
Field: IsCollisionFree
Code:
bVar8 = *(char *)(in_x0 + 0x10) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CharacterRotateInfo
Field: IsClockwise
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SessionLogoutRequest
Field: TypeName
Code:


Opcode: SessionLogoutRequest
Field: SessionLogoutRequest
Code:


Opcode: CheatSetHavenBuildingAndItemResponse
Field: TypeName
Code:


Opcode: CheatSetHavenBuildingAndItemResponse
Field: CheatSetHavenBuildingAndItemResponse
Code:


Opcode: CovenantHistoryShowArrivalNotify
Field: CovenantHistoryInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzCovenantHistoryCategoryType,TArray<TSharedPtr<FTzCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzCovenantHistoryCategoryType,TArray<TSharedPtr<FTzCovenantHistoryInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: PartyDismissFailResponse
Field: TypeName
Code:


Opcode: PartyDismissFailResponse
Field: PartyDismissFailResponse
Code:


Opcode: StrongholdBattleAttackResourceInfo
Field: SiegeWeaponCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x20));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantTradeSalesListQueryRequest
Field: TypeName
Code:


Opcode: CovenantTradeSalesListQueryRequest
Field: CovenantTradeSalesListQueryRequest
Code:


Opcode: HeadPieceDisplayOptionModifyResponse
Field: IsHeadPieceDisplayed
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: BattalionQueryMemberCandidateListRequest
Field: TypeName
Code:


Opcode: BattalionQueryMemberCandidateListRequest
Field: BattalionQueryMemberCandidateListRequest
Code:


Opcode: StrongholdBattleCampaignConditionProgressSynchronizeNotify
Field: CampaignConditionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzCampaignConditionProgressInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatAccomplishSeasonPassAchievementResponse
Field: TypeName
Code:


Opcode: CheatAccomplishSeasonPassAchievementResponse
Field: CheatAccomplishSeasonPassAchievementResponse
Code:


Opcode: BattalionVolunteerParticipationNotify
Field: VolunteerParticipationInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatDestroyPointsCheckRequest
Field: TypeName
Code:


Opcode: CheatDestroyPointsCheckRequest
Field: CheatDestroyPointsCheckRequest
Code:


Opcode: CheatUpdateAchievementMissionProgressCountsRequest
Field: MissionProgressCounts
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: BattalionMemberLootNotify
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__nd

Opcode: BattalionMemberLootNotify
Field: IsErosionInstallerReward
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x30) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantQueryInvitedCovenantSummaryInfoListRequest
Field: TypeName
Code:


Opcode: CovenantQueryInvitedCovenantSummaryInfoListRequest
Field: CovenantQueryInvitedCovenantSummaryInfoListRequest
Code:


Opcode: RealmAccountRealmTransferExecuteResponse
Field: RealmTransferInfo
Code:
if (*(long **)(in_x0 + 0x30) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x30) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmAccountRealmTransferExecuteResponse
Field: PlayerCheckInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzPlayerRealmTransferCheckInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantTradeGoodsDealInfo
Field: BuyerInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: IsEnteredInField
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: EquipmentPresetInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzEquipmentPresetIndexType,TSharedPtr<FTzEquipmentPresetInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzEquipmentPresetIndexType,TSharedPtr<FTzEquipmentPresetInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x68));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: QuickSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xb8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: QuickSlotPageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzStanceType,TSharedPtr<FTzQuickSlotPageInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzStanceType,TSharedPtr<FTzQuickSlotPageInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x108));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: OpenFogsByDistrictCuid
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,unsigned_long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,unsigned_long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x158));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PushNotificationOptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzPushNotificationOptionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzPushNotificationOptionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1b8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: FavoriteCraftRecipeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzFavoriteCraftRecipeInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x218));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: CompletedTutorialCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x238));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: PlayerInitializeInfo
Field: BattalionInfo
Code:
if (*(long **)(in_x0 + 600) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 600) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: InGameNotificationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzInGameNotificationInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x268));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AmityInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x278));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: UsableItemCooldownExpireDateTimeRangeInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<int,TSharedPtr<FTzDateTimeRangeInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<int,TSharedPtr<FTzDateTimeRangeInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x318));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: MountSkillSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzMountSkillSlotIndexType,bool,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzMountSkillSlotIndexType,bool,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x368));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PointCurrencyContainerInfo
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x3b8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: ActivatedCollectionCategoryCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x428));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: CollectionProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzCollectionProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzCollectionProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x478));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: BasicOrGrowthGuideAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBasicOrGrowthGuideAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x4c8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AnniversaryAchievementInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TArray<TSharedPtr<FTzAnniversaryAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TArray<TSharedPtr<FTzAnniversaryAchievementInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x4d8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AnniversaryAchievementPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x528));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: DiscoveredSelfieDoodadSpawnerCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x538));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: LastDeathRecordInfo
Code:
if (*(long **)(in_x0 + 0x588) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x588) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: DeathPenaltyRecordInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzDeathPenaltyRecordInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x598));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: DeathPenaltyFreeRecoveryInfo
Code:
if (*(long **)(in_x0 + 0x5a8) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x5a8) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: TransmutationProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzItemCategoryType,TMap<ETzItemGradeType,short,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,short,false>>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemCategoryType,TMap<ETzItemGradeType,short,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzItemGradeType,short,false>>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x5b8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: MissionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzMissionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzMissionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x608));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AlertPlayers
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x668));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: CrossRealmAlertPlayers
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,FTzCrossRealmAlertPlayerRegisterInfo,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,FTzCrossRealmAlertPlayerRegisterInfo,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x6b8));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PlayerLocationMonitoringInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPlayerLocationMonitoringInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x708));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PlayerHarmfulTextOnChatViolationInfo
Code:
if (*(long **)(in_x0 + 0x718) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x718) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: PlayerAutoUseInfo
Code:
if (*(long **)(in_x0 + 0x740) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x740) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: UnSettledGoodsGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x760));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: PlayerInitializeInfo
Field: ExpiredGoodsGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x770));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__n

Opcode: PlayerInitializeInfo
Field: GiftBoxInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzCovenantGiftBoxInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzCovenantGiftBoxInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x790));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: AccountAffectInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,TSharedPtr<FTzAccountAffectInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,TSharedPtr<FTzAccountAffectInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x7e0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: RegisteredFavoriteAdjustableStatKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<ETzAdjustableStatKindType,DefaultKeyFuncs<ETzAdjustableStatKindType,false>,FDefaultSetAllocator>,void>
  ::Serialize((TSet *)(in_x0 + 0x840));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: WorldMapMarkerInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzWorldMapMarkerInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x8b0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: FavoriteCollectionCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<FTzCuid,DefaultKeyFuncs<FTzCuid,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x8c0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: SkillUseOptionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzSkillUseOptionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzSkillUseOptionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x910));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: RegionContentPlayInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzRegionContentKindType,TSharedPtr<FTzRegionContentPlayInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzRegionContentKindType,TSharedPtr<FTzRegionContentPlayInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x960));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: TransmutationRecords
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<TTuple<FTzCuid,ETzItemCategoryType,ETzItemGradeType>,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<TTuple<FTzCuid,ETzItemCategoryType,ETzItemGradeType>,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x9c0));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PlayerCampaignInfo
Code:
if (*(long **)(in_x0 + 0xa10) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0xa10) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerInitializeInfo
Field: VolunteerParticipationInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzBattalionContentsKindType,TSharedPtr<FTzVolunteerParticipationInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzBattalionContentsKindType,TSharedPtr<FTzVolunteerParticipationInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa20));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: PlayerInitializeInfo
Field: PaidAttendanceInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzPaidAttendanceInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0xa80));
  uVar11 = local_198 >> 1 & 0x7f;
  pcVar9 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar9 = local_188;
  }
  std::__nd

Opcode: CheatDiscoverAllSelfieDoodadSpawnersRequest
Field: TypeName
Code:


Opcode: CheatDiscoverAllSelfieDoodadSpawnersRequest
Field: CheatDiscoverAllSelfieDoodadSpawnersRequest
Code:


Opcode: CheatInstallAllArquirunesResponse
Field: InstalledArquiruneCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: DeathPenaltyRecordInfoChangedNotify
Field: GuidToChangedRecordKinds
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<long_long,ETzDeathPenaltyRecordKindType,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<long_long,ETzDeathPenaltyRecordKindType,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SavedInGameNotificationInfo
Field: TypeName
Code:


Opcode: SavedInGameNotificationInfo
Field: SavedInGameNotificationInfo
Code:


Opcode: PlayerMarketTransactionHistoryResponse
Field: MarketTransactionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzMarketTransactionInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WorldMapPvpBattlePlayerInfoAddNotify
Field: PvpBattlePlayerInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CashShopMerchandisePaymentInfo
Field: ItemUseParameterInfo
Code:
if (*(long **)(in_x0 + 0x38) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x38) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantItemUseRequest
Field: ParameterInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: WorldMapPvpBattleCovenantInfoAddOrUpdateNotify
Field: PvpBattleCovenantInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ToyMerchandisePaymentInfo
Field: IsSubscription
Code:
bVar8 = *(char *)(in_x0 + 0x68) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar11 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar11,puVar2,lVar1,0x17);
  pcVar11[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar10 = pcVar11;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBattleRewardInfo
Field: RewardItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleRewardInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: SkillComboResetNotify
Field: IsExpired
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatKillSurroundingCharactersResponse
Field: TypeName
Code:


Opcode: CheatKillSurroundingCharactersResponse
Field: CheatKillSurroundingCharactersResponse
Code:


Opcode: GearErodedRestorationResultInfo
Field: IsBound
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x11) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: GearErodedRestorationResultInfo
Field: IsStorable
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x12) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: QuestTeleportToReentryLocationResponse
Field: TypeName
Code:


Opcode: QuestTeleportToReentryLocationResponse
Field: QuestTeleportToReentryLocationResponse
Code:


Opcode: TozMessageCacheElement
Field: message
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 8;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0x6c6c756e08;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = local_198 & 0xff;
  }
  uVar1 = local_190;
  pcVar3 = local_188;
  if ((uVar8 & 1) == 0) {
    uVar1 = uVar8 >> 1;
    pcVar3 = (char *)((long)&local_198 + 1);
  }
  std::__ndk1::__p

Opcode: CovenantUpdateNameNotify
Field: NeedChangeName
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleEndNotify
Field: BattalionMemberCoreInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBattalionMemberCoreInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x30));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleEndNotify
Field: BattalionMemberStatisticsInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberStatisticsInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleEndNotify
Field: BattalionMemberDisplayInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzStrongholdBattleCovenantBattalionMemberDisplayInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x50));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: QuickSlotDetailInfo
Field: TypeName
Code:


Opcode: QuickSlotDetailInfo
Field: QuickSlotDetailInfo
Code:


Opcode: RankingQueryResponse
Field: RankingInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzRankingInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x30));
  uVar9 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RankingQueryResponse
Field: SelfRankingInfo
Code:
if (*(long **)(in_x0 + 0x40) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x40) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar9 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar9 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantCampBuildingCraftRequest
Field: IsCompleteImmediately
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillRequest
Field: SkillTargetingInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar3 = (ulong)(uVar9 >> 1);
  pcVar5 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__p

Opcode: SkillRequest
Field: IsToggleBuffSkillOn
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x34) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: BuffAffectInfo
Field: TypeName
Code:


Opcode: BuffAffectInfo
Field: BuffAffectInfo
Code:


Opcode: StrongholdBattleSummonOutpostStartNotify
Field: TypeName
Code:


Opcode: StrongholdBattleSummonOutpostStartNotify
Field: StrongholdBattleSummonOutpostStartNotify
Code:


Opcode: SquadSharedFocusTargetNotify
Field: SharedFocusTargetInfo
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: PlayerItemUseRequest
Field: ParameterInfo
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleAttackInnerGateStartNotify
Field: TypeName
Code:


Opcode: StrongholdBattleAttackInnerGateStartNotify
Field: StrongholdBattleAttackInnerGateStartNotify
Code:


Opcode: CovenantStartCampaignRequest
Field: CampaignStartOptionInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: AnniversaryAchievementPointInfo
Field: RewardedGoalPoints
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TSet<int,DefaultKeyFuncs<int,false>,FDefaultSetAllocator>,void>::Serialize
            ((TSet *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: RealmAccountRealmTransferCheckInfoRequest
Field: TypeName
Code:


Opcode: RealmAccountRealmTransferCheckInfoRequest
Field: RealmAccountRealmTransferCheckInfoRequest
Code:


Opcode: CheatCloseAllFogRequest
Field: TypeName
Code:


Opcode: CheatCloseAllFogRequest
Field: CheatCloseAllFogRequest
Code:


Opcode: CheatOpenSeasonPassAchievementsRequest
Field: TypeName
Code:


Opcode: CheatOpenSeasonPassAchievementsRequest
Field: CheatOpenSeasonPassAchievementsRequest
Code:


Opcode: PlayerLocationMonitoringDeregisterNotify
Field: DeregisterPlayerGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatSetInvulnerableResponse
Field: IsInvulnerable
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: StrongholdBuildingUpgradeResponse
Field: TypeName
Code:


Opcode: StrongholdBuildingUpgradeResponse
Field: StrongholdBuildingUpgradeResponse
Code:


Opcode: ChatRoomRecordsInitializationInfo
Field: ChatMessageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatMessageInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__nd

Opcode: StrongholdBattleAttackDeclareInfo
Field: IsVolunteerJoinApplicationAutomaticApproval
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x49) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar6 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar6 = local_188;
  }
  std::__ndk1::__put

Opcode: StrongholdBattleAttackDeclareInfo
Field: IsNotExposeToBattalionList
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x4a) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: StrongholdBattleAttackDeclareInfo
Field: IsDeclarePlunder
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x4b) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: MailBuildingRepairLayoutInfo
Field: IsComplete
Code:
bVar8 = *(char *)(in_x0 + 0x31) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatResetCovenantCampaignTicketCountRequest
Field: TypeName
Code:


Opcode: CheatResetCovenantCampaignTicketCountRequest
Field: CheatResetCovenantCampaignTicketCountRequest
Code:


Opcode: SelfieModeShootNotify
Field: TypeName
Code:


Opcode: SelfieModeShootNotify
Field: SelfieModeShootNotify
Code:


Opcode: RegionContentPlayTimeInfo
Field: RegionContentPlayTimeInfo_sec
Code:
if (*(long **)(in_x0 + 0x10) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x10) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: RegionContentPlayTimeInfo
Field: RegionContentPlayTimeInfo_datetime
Code:
if (*(long **)(in_x0 + 0x20) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x20) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: CovenantQuerySummaryInfoListRequest
Field: CovenantGuidList
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: DisplayOptionInfo
Field: IsAllianceCovenantVisibleInMiniMap
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 9) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__p

Opcode: DisplayOptionInfo
Field: ItemAcquireNotifyAnonymityOption
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 10) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar10 = local_188;
  }
  std::__ndk1::__pu

Opcode: DisplayOptionInfo
Field: IsOccupiedStrongholdVisibleInChat
Code:
lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x20) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar11,puVar3,lVar2,0x17);
  pcVar11[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar11 = local_188;
  }
  std::__ndk1::__p

Opcode: DisplayOptionInfo
Field: IsLivingTotemIconEmphasized
Code:
pcVar10 = (char *)((ulong)&local_198 | 1);
  lVar2 = 4;
  puVar3 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x21) == '\0') {
    lVar2 = 5;
    puVar3 = (undefined8 *)pcVar1;
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar2 << 1);
  __memcpy_chk(pcVar10,puVar3,lVar2,0x17);
  pcVar10[lVar2] = '\0';
  uVar4 = local_198 >> 1 & 0x7f;
  pcVar1 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar4 = local_190;
    pcVar1 = local_188;
  }
  std::__ndk1::__put

Opcode: CheatAnniversaryAchievementResetAllResponse
Field: AnniversaryAchievementPointInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzAnniversaryAchievementPointInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x10));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WarehouseMigrationInfo
Field: CurrencyCuidToAmount
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: WarehouseMigrationInfo
Field: ItemIndexWithCounts
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzItemIndexWithCount,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestCinePlayingSynchronizeNotify
Field: IsQuestCinePlaying
Code:
bVar8 = *(char *)(in_x0 + 0x10) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: ErChatServerSessionInitializeInfo
Field: BlockedChatEntityInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzBlockedChatEntityInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x20));
  uVar1 = local_198 >> 1 & 0x7f;
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: TriggerWorldActionInfo
Field: TypeName
Code:


Opcode: TriggerWorldActionInfo
Field: TriggerWorldActionInfo
Code:


Opcode: RealmIntegrationQueryRealmAccountInfoRequest
Field: TypeName
Code:


Opcode: RealmIntegrationQueryRealmAccountInfoRequest
Field: RealmIntegrationQueryRealmAccountInfoRequest
Code:


Opcode: NpcSpeechBalloonInfo
Field: NpcSpeechBalloonTextFormatInfo
Code:
if (*(long **)(in_x0 + 0x18) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x18) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: ChatMessageNotify
Field: ChatMessageInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzChatMessageInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatChangeServerTimeResponse
Field: TypeName
Code:


Opcode: CheatChangeServerTimeResponse
Field: CheatChangeServerTimeResponse
Code:


Opcode: CheatCovenantPayDividendRequest
Field: DividendInfo
Code:
if (*(long **)(in_x0 + 8) == (long *)0x0) {
    uVar8 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 8) + 0x38))(&local_198);
    uVar8 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar8 >> 1);
  pcVar3 = (char *)((ulong)&local_198 | 1);
  if ((uVar8 & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__ndk1::__p

Opcode: QuickSlotUpdateInfo
Field: AddedQuickSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuickSlotUpdateInfo
Field: ModifiedQuickSlotInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzQuickSlotIndexType,TSharedPtr<FTzQuickSlotInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuickSlotUpdateInfo
Field: RemovedQuickSlotIndices
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<ETzQuickSlotIndexType,TSizedDefaultAllocator<32>>,void>::Serialize
            ((TArray *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatSpawnNpcResponse
Field: TypeName
Code:


Opcode: CheatSpawnNpcResponse
Field: CheatSpawnNpcResponse
Code:


Opcode: CheatAllStancesAcquireRequest
Field: TypeName
Code:


Opcode: CheatAllStancesAcquireRequest
Field: CheatAllStancesAcquireRequest
Code:


Opcode: PlayerMarketTransactionHistoryRequest
Field: TypeName
Code:


Opcode: PlayerMarketTransactionHistoryRequest
Field: PlayerMarketTransactionHistoryRequest
Code:


Opcode: CheatRealmIntegrationConvertToIntegratedRealmAccountResponse
Field: TypeName
Code:


Opcode: CheatRealmIntegrationConvertToIntegratedRealmAccountResponse
Field: CheatRealmIntegrationConvertToIntegratedRealmAccountResponse
Code:


Opcode: BuildingWorkRequestBaseInfo
Field: IsRecommended
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x28) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar7,puVar2,lVar1,0x17);
  pcVar7[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar7 = local_188;
  }
  std::__ndk1::__p

Opcode: BuildingWorkRequestBaseInfo
Field: IsCompleteImmediately
Code:
pcVar8 = (char *)((ulong)&local_198 | 1);
  lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x29) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar8,puVar2,lVar1,0x17);
  pcVar8[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__pu

Opcode: CovenantLeaveResponse
Field: TypeName
Code:


Opcode: CovenantLeaveResponse
Field: CovenantLeaveResponse
Code:


Opcode: CheatAllStancesAcquireResponse
Field: IsStanceInstallFreeChanceEnabled
Code:
bVar8 = *(char *)(in_x0 + 0x21) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar13 = (char *)((ulong)&local_198 | 1);
  puVar3 = &DAT_0901b5c8;
  if (bVar8) {
    puVar3 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar13,puVar3,lVar1,0x17);
  pcVar13[lVar1] = '\0';
  uVar12 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar12 = local_190;
    pcVar13 = local_188;
  }
  std::__ndk1::__put_c

Opcode: CheatCommandPresetBeginNotify
Field: TypeName
Code:


Opcode: CheatCommandPresetBeginNotify
Field: CheatCommandPresetBeginNotify
Code:


Opcode: BattalionConfirmJoinApplicationRequest
Field: IsConfirmJoinApplication
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x10) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: CheatAnniversaryAchievementAccomplishResponse
Field: TypeName
Code:


Opcode: CheatAnniversaryAchievementAccomplishResponse
Field: CheatAnniversaryAchievementAccomplishResponse
Code:


Opcode: FollowerExperiencePointsItemConsumeResponse
Field: TypeName
Code:


Opcode: FollowerExperiencePointsItemConsumeResponse
Field: FollowerExperiencePointsItemConsumeResponse
Code:


Opcode: SessionKeyAuthenticateComplete
Field: Success
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CovenantDiplomacyInfo
Field: CovenantDiplomacyAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x28) == (long *)0x0) {
    uVar9 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x28) + 0x38))(&local_198);
    uVar9 = (uint)(byte)local_198;
  }
  uVar1 = (ulong)(uVar9 >> 1);
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((uVar9 & 1) != 0) {
    uVar1 = local_190;
    pcVar8 = local_188;
  }
  std::__ndk1::__p

Opcode: RealmInfo
Field: IsInboundRealmTransferable
Code:
bVar9 = *(char *)(in_x0 + 0x70) == '\0';
  lVar1 = 4;
  if (bVar9) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar9) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: SkillCancelChargingResponse
Field: TypeName
Code:


Opcode: SkillCancelChargingResponse
Field: SkillCancelChargingResponse
Code:


Opcode: CovenantBattalionExpeditionInfo
Field: AnotherBattalionGuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<long_long,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 0x40));
  uVar10 = local_198 >> 1 & 0x7f;
  pcVar8 = (char *)((ulong)&local_198 | 1);
  if ((local_198 & 1) != 0) {
    uVar10 = local_190;
    pcVar8 = local_188;
  }
  std::__n

Opcode: QuestsInfo
Field: RewardedQuests
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,FDateTime,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,FDateTime,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: ActiveQuestProgressInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzQuestProgressInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzQuestProgressInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x58));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: RepeatQuestCancelRecordInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,TSharedPtr<FTzQuestCancelRecordInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,TSharedPtr<FTzQuestCancelRecordInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xa8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: ActiveFavorInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzFavorInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzFavorInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0xf8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: ActiveFavorMissionInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzVuid,TSharedPtr<FTzFavorMissionInfo,(ESPMode)1>,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzVuid,TSharedPtr<FTzFavorMissionInfo,(ESPMode)1>,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x148));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: QuestsInfo
Field: LastProceedEpisodeCuidsByEpisodeGroup
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<ETzEpisodeGroupType,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<ETzEpisodeGroupType,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x1a0));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatResetGoodsBuyCountResponse
Field: TypeName
Code:


Opcode: CheatResetGoodsBuyCountResponse
Field: CheatResetGoodsBuyCountResponse
Code:


Opcode: CheatEnabledModificationNotify
Field: CheatEnabled
Code:
bVar8 = *(char *)(in_x0 + 8) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar10 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar10,puVar2,lVar1,0x17);
  pcVar10[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  pcVar5 = pcVar10;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar5 = local_188;
  }
  std::__ndk1::__put_ch

Opcode: CheatTutorialCompleteAllRequest
Field: TypeName
Code:


Opcode: CheatTutorialCompleteAllRequest
Field: CheatTutorialCompleteAllRequest
Code:


Opcode: NavMeshTileDataResponse
Field: CheckedTiles
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TArray<TSharedPtr<FTzNavMeshTileInfo,(ESPMode)1>,TSizedDefaultAllocator<32>>,void>
  ::Serialize((TArray *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: MarketGoodsInfo
Field: IsStorable
Code:
bVar8 = *(char *)(in_x0 + 0x48) == '\0';
  lVar1 = 4;
  if (bVar8) {
    lVar1 = 5;
  }
  pcVar12 = (char *)((ulong)&local_198 | 1);
  puVar2 = &DAT_0901b5c8;
  if (bVar8) {
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar12,puVar2,lVar1,0x17);
  pcVar12[lVar1] = '\0';
  uVar11 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__put_c

Opcode: MarketGoodsInfo
Field: ItemAdditionalInfo
Code:
if (*(long **)(in_x0 + 0x50) == (long *)0x0) {
    uVar10 = 0;
    local_190 = 0;
    local_188 = (char *)0x0;
    local_198 = 0;
  }
  else {
    (**(code **)(**(long **)(in_x0 + 0x50) + 0x38))(&local_198);
    uVar10 = (uint)(byte)local_198;
  }
  uVar11 = (ulong)(uVar10 >> 1);
  pcVar12 = (char *)((ulong)&local_198 | 1);
  if ((uVar10 & 1) != 0) {
    uVar11 = local_190;
    pcVar12 = local_188;
  }
  std::__ndk1::__p

Opcode: CollectionProgressInfo
Field: RegisteredCollectionSlotItemCuids
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,FTzCuid,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,FTzCuid,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x18));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantWarehouseSummaryUpdateInfoNotify
Field: UpdatedItemInfos
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<FTzCuid,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<FTzCuid,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 0x28));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CovenantWarehouseSummaryUpdateInfoNotify
Field: RemovedItemCuids
Code:
TozSerializableMessageLibNative::JsonSerializer<TArray<FTzCuid,TSizedDefaultAllocator<32>>,void>::
  Serialize((TArray *)(in_x0 + 0x78));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__n

Opcode: CheatSetLoggingRequest
Field: IsLogging
Code:
lVar1 = 4;
  puVar2 = &DAT_0901b5c8;
  if (*(char *)(in_x0 + 0x18) == '\0') {
    lVar1 = 5;
    puVar2 = (undefined8 *)"false";
  }
  local_190 = 0;
  local_188 = (char *)0x0;
  local_198 = (ulong)(byte)((int)lVar1 << 1);
  __memcpy_chk(pcVar9,puVar2,lVar1,0x17);
  pcVar9[lVar1] = '\0';
  uVar3 = local_198 >> 1 & 0x7f;
  if ((local_198 & 1) != 0) {
    uVar3 = local_190;
    pcVar9 = local_188;
  }
  std::__ndk1::__p

Opcode: FollowerSquadUpdateRequest
Field: FollowerSquadSlots
Code:
TozSerializableMessageLibNative::
  JsonSerializer<TMap<unsigned_char,long_long,FDefaultSetAllocator,TDefaultMapHashableKeyFuncs<unsigned_char,long_long,false>>,void>
  ::Serialize((TMap *)(in_x0 + 8));
  uVar1 = (ulong)(local_198[0] >> 1);
  pcVar3 = (char *)((ulong)local_198 | 1);
  if ((local_198[0] & 1) != 0) {
    uVar1 = local_190;
    pcVar3 = local_188;
  }
  std::__nd

Opcode: CheatRealmIntegrationAddRealmAccountResponse
Field: TypeName
Code:


Opcode: CheatRealmIntegrationAddRealmAccountResponse
Field: CheatRealmIntegrationAddRealmAccountResponse
Code:
